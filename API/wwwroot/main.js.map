{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAC4B;;;AAOtB,MAAOC,gBAAgB;EAI3BC,YAAoBC,gBAAkC,EAAUC,WAA6B,EACnFC,cAA8B;IADpB,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,WAAW,GAAXA,WAAW;IACjE,KAAAC,cAAc,GAAdA,cAAc;IAJf,KAAAC,UAAU,GAAa,EAAE;IAClC,KAAAC,IAAI,GAAS,EAAU;IAIrB,IAAI,CAACF,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EAAE,IAAI,CAACA,IAAI,GAAGA,IAAI;MAC5B;KACD,CAAC;EACJ;EAEAK,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,IAAI,EAAEM,KAAK,CAACC,IAAI,CAACC,CAAC,IAAI,IAAI,CAACT,UAAU,CAACU,QAAQ,CAACD,CAAC,CAAC,CAAC,EAAE;MAC3D,IAAI,CAACZ,gBAAgB,CAACc,kBAAkB,CAAC,IAAI,CAACb,WAAW,CAAC;KAC3D,MAAM;MACL,IAAI,CAACD,gBAAgB,CAACe,KAAK,EAAE;;EAEjC;EAAC,QAAAC,CAAA;qBAnBUlB,gBAAgB,EAAAmB,+DAAA,CAAAA,2DAAA,GAAAA,+DAAA,CAAAA,sDAAA,GAAAA,+DAAA,CAAAI,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAAhBzB,gBAAgB;IAAA0B,SAAA;IAAAC,MAAA;MAAAtB,UAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;IELzBc,4DAAA,aAAmE;IAAAA,oDAAA,GAAqB;IAAAA,0DAAA,EAAM;;;;IAA3BA,uDAAA,GAAqB;IAArBA,gEAAA,KAAAc,MAAA,CAAAC,KAAA,iBAAqB;;;ADMtF,MAAOC,mBAAmB;EAK9BlC,YAA2BmC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;IAJ3B,KAAAF,KAAK,GAAG,EAAE;IAKjB,IAAI,CAACE,SAAS,CAACC,aAAa,GAAG,IAAI;IACnC,IAAI,CAACC,QAAQ,GAAG;MACdC,cAAc,EAAE,WAAW;MAC3BC,eAAe,EAAE;KAClB;EACH;EAEAC,UAAUA,CAACC,GAAQ,GACnB;EAEAC,gBAAgBA,CAACC,EAAO,GACxB;EAEAC,iBAAiBA,CAACD,EAAO,GACzB;EAEA,IAAIE,OAAOA,CAAA;IACT,OAAO,IAAI,CAACV,SAAS,CAACU,OAAsB;EAC9C;EAAC,QAAA5B,CAAA;qBAxBUiB,mBAAmB,EAAAhB,+DAAA,CAAAI,qDAAA;EAAA;EAAA,QAAAE,EAAA;UAAnBU,mBAAmB;IAAAT,SAAA;IAAAC,MAAA;MAAAO,KAAA;MAAAc,OAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThCnC,4DAAA,aAAkB;QACdA,uDAAA,eAC2G;QAC3GA,wDAAA,IAAAuC,kCAAA,iBAA8F;QAClGvC,0DAAA,EAAM;;;QAHiBA,uDAAA,GAAuD;QAAvDA,yDAAA,eAAAoC,GAAA,CAAAT,OAAA,CAAAc,OAAA,IAAAL,GAAA,CAAAT,OAAA,CAAAe,OAAA,CAAuD;QAC9C1C,mEAAA,gBAAAoC,GAAA,CAAArB,KAAA,CAAuB;QAA/Cf,wDAAA,gBAAAoC,GAAA,CAAAT,OAAA,CAAuB,aAAAS,GAAA,CAAAjB,QAAA,aAAAiB,GAAA,CAAAP,OAAA;QACrB7B,uDAAA,GAAkC;QAAlCA,wDAAA,SAAAoC,GAAA,CAAAT,OAAA,CAAAkB,MAAA,kBAAAT,GAAA,CAAAT,OAAA,CAAAkB,MAAA,aAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAxC7C,4DAAA,aAAmE;IAC/DA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;;;;IADFA,uDAAA,GACJ;IADIA,gEAAA,qBAAAc,MAAA,CAAAC,KAAA,MACJ;;;;;IACAf,4DAAA,aAAoE;IAChEA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;;;;IADFA,uDAAA,GACJ;IADIA,gEAAA,MAAA+C,MAAA,CAAAhC,KAAA,wBAAAgC,MAAA,CAAApB,OAAA,CAAAkB,MAAA,kBAAAE,MAAA,CAAApB,OAAA,CAAAkB,MAAA,cAAAG,cAAA,iBACJ;;;;;IACAhD,4DAAA,aAAoE;IAChEA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;;;;IADFA,uDAAA,GACJ;IADIA,gEAAA,MAAAiD,MAAA,CAAAlC,KAAA,uBAAAkC,MAAA,CAAAtB,OAAA,CAAAkB,MAAA,kBAAAI,MAAA,CAAAtB,OAAA,CAAAkB,MAAA,cAAAG,cAAA,iBACJ;;;;;IACAhD,4DAAA,aAAsE;IAClEA,oDAAA,+BACJ;IAAAA,0DAAA,EAAM;;;ADNJ,MAAOkD,kBAAkB;EAI7BpE,YAA2BmC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;IAH3B,KAAAF,KAAK,GAAG,EAAE;IACV,KAAAoC,IAAI,GAAG,MAAM;IAGpB,IAAI,CAAClC,SAAS,CAACC,aAAa,GAAG,IAAI;EACrC;EAEAI,UAAUA,CAACC,GAAQ,GACnB;EAEAC,gBAAgBA,CAACC,EAAO,GACxB;EAEAC,iBAAiBA,CAACD,EAAO,GACzB;EAEA,IAAIE,OAAOA,CAAA;IACT,OAAO,IAAI,CAACV,SAAS,CAACU,OAAsB,EAAC;EAC/C;EAAC,QAAA5B,CAAA;qBAnBUmD,kBAAkB,EAAAlD,+DAAA,CAAAI,qDAAA;EAAA;EAAA,QAAAE,EAAA;UAAlB4C,kBAAkB;IAAA3C,SAAA;IAAAC,MAAA;MAAAO,KAAA;MAAAoC,IAAA;IAAA;IAAArB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAmB,4BAAAjB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BnC,4DAAA,aAAkB;QACdA,uDAAA,eACkD;QAClDA,wDAAA,IAAAqD,iCAAA,iBAEM;QACNrD,wDAAA,IAAAsD,iCAAA,iBAEM;QACNtD,wDAAA,IAAAuD,iCAAA,iBAEM;QACNvD,wDAAA,IAAAwD,iCAAA,iBAEM;QACVxD,0DAAA,EAAM;;;QAdmBA,uDAAA,GAAuD;QAAvDA,yDAAA,eAAAoC,GAAA,CAAAT,OAAA,CAAAc,OAAA,IAAAL,GAAA,CAAAT,OAAA,CAAAe,OAAA,CAAuD;QAArE1C,mEAAA,SAAAoC,GAAA,CAAAe,IAAA,CAAa;QACQnD,mEAAA,gBAAAoC,GAAA,CAAArB,KAAA,CAAqB;QAA7Cf,wDAAA,gBAAAoC,GAAA,CAAAT,OAAA,CAAuB;QACI3B,uDAAA,GAAkC;QAAlCA,wDAAA,SAAAoC,GAAA,CAAAT,OAAA,CAAAkB,MAAA,kBAAAT,GAAA,CAAAT,OAAA,CAAAkB,MAAA,aAAkC;QAGlC7C,uDAAA,GAAmC;QAAnCA,wDAAA,SAAAoC,GAAA,CAAAT,OAAA,CAAAkB,MAAA,kBAAAT,GAAA,CAAAT,OAAA,CAAAkB,MAAA,cAAmC;QAGnC7C,uDAAA,GAAmC;QAAnCA,wDAAA,SAAAoC,GAAA,CAAAT,OAAA,CAAAkB,MAAA,kBAAAT,GAAA,CAAAT,OAAA,CAAAkB,MAAA,cAAmC;QAGnC7C,uDAAA,GAAqC;QAArCA,wDAAA,SAAAoC,GAAA,CAAAT,OAAA,CAAAkB,MAAA,kBAAAT,GAAA,CAAAT,OAAA,CAAAkB,MAAA,gBAAqC;;;;;;;;;;;;;;;;;;;;;;;;ACZjC;AAEuB;AACnB;AAChB;AAEpB,MAAMe,UAAU,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACxD,MAAM7E,cAAc,GAAGwE,qDAAM,CAACpD,qEAAc,CAAC;EAC7C,MAAM0D,MAAM,GAAGN,qDAAM,CAACC,qDAAa,CAAC;EAEpC,OAAOzE,cAAc,CAACG,YAAY,CAACC,IAAI,CACrCsE,yCAAG,CAACxE,IAAI,IAAG;IACT,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;IACvB,IAAIA,IAAI,CAACM,KAAK,CAACG,QAAQ,CAAC,OAAO,CAAC,IAAIT,IAAI,CAACM,KAAK,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;MACpE,OAAO,IAAI;KACZ,MAAM;MACLmE,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC1C,OAAO,KAAK;;EAEhB,CAAC,CAAC,CACH;AACH,CAAC;;;;;;;;;;;;;;;;;;;ACrBuD;AACM;AACnB;AACJ;AACZ;AAEpB,MAAME,SAAS,GAAkBA,CAACL,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAM7E,cAAc,GAAGwE,qDAAM,CAACpD,qEAAc,CAAC;EAC7C,MAAM0D,MAAM,GAAGN,qDAAM,CAACC,qDAAa,CAAC;EACpC,MAAMS,MAAM,GAAGV,qDAAM,CAACQ,mDAAM,CAAC;EAG7B,OAAOhF,cAAc,CAACG,YAAY,CAACC,IAAI,CACrCsE,yCAAG,CAACxE,IAAI,IAAG;IACT,IAAIA,IAAI,EAAE,OAAO,IAAI,CAAC,KACjB;MACH;MACAgF,MAAM,CAACC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MAE9B,OAAO,KAAK;;EAEhB,CAAC,CAAC,CACH;AACH,CAAC;;;;;;;;;;;;;;;;ACrBsC;AACuB;AAEvD,MAAME,0BAA0B,GAA0CC,SAAS,IAAI;EAC5F,MAAMC,cAAc,GAAGf,qDAAM,CAACY,qEAAc,CAAC;EAE7C,IAAIE,SAAS,CAACE,QAAQ,EAAEC,KAAK,EAAE;IAC7B,OAAOF,cAAc,CAACG,OAAO,EAAE;;EAGjC,OAAO,IAAI;AACb,CAAC;;;;;;;;;;;;;;;;;;ACbuD;AACjB;AACuB;AACnC;AACpB,MAAMC,yBAAyB,GAAkBA,CAACf,KAAK,EAAEC,KAAK,KAAI;EAEvE,MAAM7E,cAAc,GAAGwE,qDAAM,CAACpD,qEAAc,CAAC;EAC7C,MAAM8D,MAAM,GAAGV,qDAAM,CAACQ,mDAAM,CAAC;EAC7B;EAEA,OAAOhF,cAAc,CAACG,YAAY,CAACC,IAAI,CACrCsE,yCAAG,CAAExE,IAAS,IAAI;IAChB,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI,CAAC,KAClB;MACH;MACAgF,MAAM,CAACC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MAE7B,OAAO,KAAK;;EAEhB,CAAC,CAAC,CACH;EACD;EACA;EACA;EACA;EAEA;EACA,OAAO,IAAI;AACb,CAAC;;;;;;;;;;;;;;;;;;ACpB6C;;;;AAKxC,MAAOU,gBAAgB;EAE3BhG,YAAoBqF,MAAe,EAAUJ,MAAsB;IAA/C,KAAAI,MAAM,GAANA,MAAM;IAAmB,KAAAJ,MAAM,GAANA,MAAM;EAAmB;EAEtEgB,SAASA,CAACC,OAA6B,EAAEzF,IAAiB;IACxD,OAAOA,IAAI,CAAC0F,MAAM,CAACD,OAAO,CAAC,CAAC3F,IAAI,CAC9BwF,gDAAU,CAAEb,KAAyB,IAAI;MACvC,IAAIA,KAAK,EAAE;QACT,QAAQA,KAAK,CAACkB,MAAM;UAClB,KAAK,GAAG;YACN,IAAIlB,KAAK,CAACA,KAAK,CAACnB,MAAM,EAAE;cACtB,MAAMsC,gBAAgB,GAAG,EAAE;cAC3B,KAAK,MAAMC,GAAG,IAAIpB,KAAK,CAACA,KAAK,CAACnB,MAAM,EAAE;gBACpC,IAAImB,KAAK,CAACA,KAAK,CAACnB,MAAM,CAACuC,GAAG,CAAC,EAAE;kBAC3BD,gBAAgB,CAACE,IAAI,CAACrB,KAAK,CAACA,KAAK,CAACnB,MAAM,CAACuC,GAAG,CAAC,CAAC;;;cAGlD,MAAMD,gBAAgB,CAACG,IAAI,EAAE;aAC9B,MACI;cACH,IAAI,CAACvB,MAAM,CAACC,KAAK,CAACA,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACkB,MAAM,CAACK,QAAQ,EAAE,CAAC;;YAEzD;YACAC,OAAO,EACP,IAAI,CAACzB,MAAM,CAACC,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACkB,MAAM,CAACK,QAAQ,EAAE,CAAC;YAC1D;UACF,KAAK,GAAG;YACN,IAAI,CAACpB,MAAM,CAACsB,aAAa,CAAC,YAAY,CAAC;YACrC;UACJ,KAAK,GAAG;YACN,MAAMC,gBAAgB,GAAqB;cAAE5B,KAAK,EAAE;gBAAEE,KAAK,EAAEA,KAAK,CAACA;cAAK;YAAE,CAAE;YAC5E,IAAI,CAACG,MAAM,CAACsB,aAAa,CAAC,eAAe,EAAEC,gBAAgB,CAAC;YAC5D;UACF;YACE,IAAI,CAAC3B,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;YACpD2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC;YAClB;;;MAIN,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EAAC,QAAAjE,CAAA;qBA3CU+E,gBAAgB,EAAA9E,sDAAA,CAAAI,mDAAA,GAAAJ,sDAAA,CAAA8F,qDAAA;EAAA;EAAA,QAAAxF,EAAA;WAAhBwE,gBAAgB;IAAAiB,OAAA,EAAhBjB,gBAAgB,CAAAkB;EAAA;;;;;;;;;;;;;;;;;;ACNW;;;AAIlC,MAAOC,cAAc;EAEzBnH,YAAoBG,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtD8F,SAASA,CAACC,OAA6B,EAAEzF,IAAiB;IACxD,IAAI,CAACN,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EAAE;UACR6F,OAAO,GAAGA,OAAO,CAACkB,KAAK,CAAC;YACtBC,UAAU,EAAE;cACVC,aAAa,EAAE,UAAUjH,IAAI,CAACkH,KAAK;;WAEtC,CAAC;;MAEN;KACD,CAAC;IACF,OAAO9G,IAAI,CAAC0F,MAAM,CAACD,OAAO,CAAC;EAC7B;EAAC,QAAAjF,CAAA;qBAjBUkG,cAAc,EAAAjG,sDAAA,CAAAI,qEAAA;EAAA;EAAA,QAAAE,EAAA;WAAd2F,cAAc;IAAAF,OAAA,EAAdE,cAAc,CAAAD;EAAA;;;;;;;;;;;;;;;;;;;ACJwB;;;AAI7C,MAAOQ,kBAAkB;EAE7B1H,YAAoB2H,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhD1B,SAASA,CAACC,OAA6B,EAAEzF,IAAiB;IACxD,IAAI,CAACkH,WAAW,CAACC,IAAI,EAAE;IAEvB,OAAOnH,IAAI,CAAC0F,MAAM,CAACD,OAAO,CAAC,CAAC3F,IAAI,CAC9BiH,2CAAK,CAAC,GAAG,CAAC,EACVC,8CAAQ,CAAC,MAAK;MACZ,IAAI,CAACE,WAAW,CAACE,IAAI,EAAE;IACzB,CAAC,CAAC,CACH;EAEH;EAAC,QAAA5G,CAAA;qBAdUyG,kBAAkB,EAAAxG,sDAAA,CAAAI,+DAAA;EAAA;EAAA,QAAAE,EAAA;WAAlBkG,kBAAkB;IAAAT,OAAA,EAAlBS,kBAAkB,CAAAR;EAAA;;;;;;;;;;;;;;;ACJzB,MAAOa,eAAe;;;;;;;;;;;;;;ACLtB,MAAOC,UAAU;EAQnBhI,YAAYK,IAAU;IANtB,KAAA4H,MAAM,GAAG,EAAE;IACX,KAAAC,MAAM,GAAG,EAAE;IACX,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,OAAO,GAAG,YAAY;IAGlB,IAAI,CAACC,MAAM,GAAGjI,IAAI,CAACiI,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAQ;EAC9D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX2C;AACW;AACV;AACN;AACK;AACI;AACW;AACF;AACN;AACV;AACM;;;;;;;;;;;AAkC5C,MAAOY,YAAY;EAAA,QAAAjI,CAAA;qBAAZiI,YAAY;EAAA;EAAA,QAAA1H,EAAA;UAAZ0H;EAAY;EAAA,QAAAC,EAAA;cA7BrBZ,yDAAY,EACZC,oEAAgB,CAACY,OAAO,EAAE,EAC1BN,sEAAgB,CAACM,OAAO,EAAE,EAC1BL,gEAAa,CAACK,OAAO,EAAE,EACvBX,0DAAU,CAACW,OAAO,EAAE,EACpBH,4DAAW,CAACG,OAAO,EAAE,EACrBV,oDAAY,CAACU,OAAO,CAAC;MACnBC,aAAa,EAAE;KAChB,CAAC,EACFV,yDAAgB,CAACS,OAAO,CAAC;MACvB/E,IAAI,EAAE;KACP,CAAC,EACFuE,6DAAgB,EAChBC,yEAAkB,CAACO,OAAO,EAAE,EAC5BJ,uDAAa,CAACI,OAAO,EAAE,EAGvBZ,oEAAgB,EAChBE,oDAAY,EACZD,0DAAU,EACVE,yDAAgB,EAChBC,6DAAgB,EAChBC,yEAAkB,EAClBC,sEAAgB,EAChBC,gEAAa,EACbC,uDAAa,EACbC,4DAAW;EAAA;;;sHAGFC,YAAY;IAAAI,OAAA,GA7BrBf,yDAAY,EAAAjH,oEAAA,EAAA0F,sEAAA,EAAAuC,gEAAA,EAAAC,0DAAA,EAAAC,4DAAA,EAAAC,oDAAA,EAAAC,yDAAA,EAYZf,6DAAgB,EAAAgB,yEAAA,EAAAC,uDAAA;IAAAC,OAAA,GAKhBtB,oEAAgB,EAChBE,oDAAY,EACZD,0DAAU,EACVE,yDAAgB,EAChBC,6DAAgB,EAChBC,yEAAkB,EAClBC,sEAAgB,EAChBC,gEAAa,EACbC,uDAAa,EACbC,4DAAW;EAAA;AAAA;;;;;;;;;;;;;;;;ACxCwB;AACuB;AAEvD,MAAMe,sBAAsB,GAAsBA,CAACjF,KAAK,EAAEC,KAAK,KAAI;EACxE,MAAMiF,aAAa,GAAGtF,qDAAM,CAACoF,qEAAc,CAAC;EAE5C,OAAOE,aAAa,CAACC,SAAS,CAACnF,KAAK,CAACoF,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC;EAC/D;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;ACRiD;AAES;;;;AAOrD,MAAO7I,cAAc;EAKzBvB,YAAoBuK,IAAgB,EAAUC,eAAgC;IAA1D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,eAAe,GAAfA,eAAe;IAJ7D,KAAAC,OAAO,GAAGH,qEAAW,CAACI,MAAM;IACpB,KAAAC,iBAAiB,GAAG,IAAIN,iDAAe,CAAc,IAAI,CAAC;IAClE,KAAA/J,YAAY,GAAG,IAAI,CAACqK,iBAAiB,CAACC,YAAY,EAAE;IACpD,KAAAC,YAAY,GAAY,KAAK;EACqD;EAElFC,KAAKA,CAACC,KAAU;IACd,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,IAAI,CAACP,OAAO,GAAG,eAAe,EAAEM,KAAK,CAAC,CAACxK,IAAI,CACrEsE,yCAAG,CAAEoG,QAAc,IAAI;MACrB,MAAM5K,IAAI,GAAG4K,QAAQ;MACrB,IAAI5K,IAAI,EAAE;QACR,IAAI,CAAC6K,cAAc,CAAC7K,IAAI,CAAC;QACzB;QACA,IAAI,CAAC8K,oBAAoB,CAAC9K,IAAI,CAAC+K,QAAQ,EAAE,IAAI,CAAC;;IAElD,CAAC,CAAC,CACH;EACH;EAEAC,QAAQA,CAACN,KAAU;IACjB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,IAAI,CAACP,OAAO,GAAG,kBAAkB,EAAEM,KAAK,CAAC,CAACxK,IAAI,CACxEsE,yCAAG,CAACoG,QAAQ,IAAG;MACb,MAAM5K,IAAI,GAAG4K,QAAQ;MACrB,IAAI5K,IAAI,EAAE;QACR,IAAI,CAAC6K,cAAc,CAAC7K,IAAI,CAAC;QACzB;QACA,IAAI,CAAC8K,oBAAoB,CAAC9K,IAAI,CAAC+K,QAAQ,EAAE,IAAI,CAAC;;IAElD,CAAC,CAAC,CACH;EACH;EAEAF,cAAcA,CAAC7K,IAAU;IACvBA,IAAI,CAACM,KAAK,GAAG,EAAE;IACf,MAAMA,KAAK,GAAG,IAAI,CAAC2K,eAAe,CAACjL,IAAI,CAACkH,KAAK,CAAC,CAACgE,IAAI;IACnDC,KAAK,CAACC,OAAO,CAAC9K,KAAK,CAAC,GAAGN,IAAI,CAACM,KAAK,GAAGA,KAAK,GAAGN,IAAI,CAACM,KAAK,CAAC4F,IAAI,CAAC5F,KAAK,CAAC;IAClE+K,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACxL,IAAI,CAAC,CAAC;IAClD,IAAI,CAACsK,iBAAiB,CAAClK,IAAI,CAACJ,IAAI,CAAC;IACjC,IAAI,CAACmK,eAAe,CAACsB,mBAAmB,CAACzL,IAAI,CAAC;IAE9C;IAEA;EACF;;EAEA0L,MAAMA,CAAA;IACJL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/B;IACA,IAAI,CAAC1L,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACxCC,IAAI,EAAEJ,IAAI,IAAG;QAEX,IAAIA,IAAI,EAAE;UACR,IAAI,CAAC8K,oBAAoB,CAAC9K,IAAI,CAAC+K,QAAQ,EAAE,KAAK,CAAC;UAC/C;;MAEJ;KACD,CAAC;;IAEF,IAAI,CAACT,iBAAiB,CAAClK,IAAI,CAAC,IAAI,CAAC;IACjC,IAAI,CAAC+J,eAAe,CAACyB,iBAAiB,EAAE;EAC1C;EAEAX,eAAeA,CAAC/D,KAAa;IAC3B,OAAOqE,IAAI,CAACM,KAAK,CAACC,IAAI,CAAC5E,KAAK,CAAC6E,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C;EAIA;EACAjB,oBAAoBA,CAAC9K,IAAY,EAAEgM,QAAiB;IAClD,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnC,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;IACvB;IACA;IACA,MAAMC,kBAAkB,GAAG,IAAIF,IAAI,CAACD,gBAAgB,CAACI,OAAO,EAAE,GAAIF,SAAS,GAAG,EAAE,GAAG,IAAK,CAAC;IACzF,MAAMG,IAAI,GAAGF,kBAAkB,CAACG,WAAW,EAAE;IAC7C,MAAMC,eAAe,GAAG;MACtBzB,QAAQ,EAAE/K,IAAI;MACdsM,IAAI;MACJN;KACD;IACD,MAAMS,SAAS,GAAGpB,YAAY,CAACqB,OAAO,CAAC,oBAAoB,CAAC;IAC5D;IAEA,IAAID,SAAS,EAAE;MACb,MAAME,kBAAkB,GAAGpB,IAAI,CAACM,KAAK,CAACY,SAAS,CAAC;MAChDE,kBAAkB,CAACzG,IAAI,CAACsG,eAAe,CAAC;MAExCnB,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAACmB,kBAAkB,CAAC,CAAC;KAC/E,MACI;MACH,MAAMC,UAAU,GAAG,CAACJ,eAAe,CAAC,CAAC,CAAC;MACtCnB,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAACoB,UAAU,CAAC,CAAC;;IAGxE;EAEF;;EACAC,qBAAqBA,CAAA;IACnB,MAAMC,SAAS,GAAGzB,YAAY,CAACqB,OAAO,CAAC,oBAAoB,CAAC;IAC5D,IAAII,SAAS,EAAE;MACb,MAAMC,UAAU,GAAGxB,IAAI,CAACM,KAAK,CAACiB,SAAS,CAAC;MACxC,IAAI3B,KAAK,CAACC,OAAO,CAAC2B,UAAU,CAAC,EAAE;QAC7B,OAAOA,UAA4B;;;IAGvC,OAAO,IAAI;EACb;EAAC,QAAAnM,CAAA;qBA5GUM,cAAc,EAAAL,sDAAA,CAAAI,4DAAA,GAAAJ,sDAAA,CAAA8F,8DAAA;EAAA;EAAA,QAAAxF,EAAA;WAAdD,cAAc;IAAA0F,OAAA,EAAd1F,cAAc,CAAA2F,IAAA;IAAAqG,UAAA,EAFb;EAAM;;AAoKpB,SAASL,qBAAqBA,CAAA;EAC5B,MAAM,IAAIM,KAAK,CAAC,2BAA2B,CAAC;AAC9C;;;;;;;;;;;;;;;;;AC7K2D;;;AAMrD,MAAOC,YAAY;EAGvBzN,YAAoBuK,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAE,OAAO,GAAGH,qEAAW,CAACI,MAAM;EAEY;EAExCgD,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACnD,IAAI,CAACH,GAAG,CAAS,IAAI,CAACK,OAAO,GAAG,wBAAwB,CAAC;EACvE;EAEAkD,eAAeA,CAACvC,QAAgB,EAAEzK,KAAe;IAC/C,OAAO,IAAI,CAAC4J,IAAI,CAACS,IAAI,CAAW,IAAI,CAACP,OAAO,GAAG,mBAAmB,GAC9DW,QAAQ,GAAG,SAAS,GAAGzK,KAAK,EAAE,EAAE,CAAC;EACvC;EAAC,QAAAM,CAAA;qBAZUwM,YAAY,EAAAvM,sDAAA,CAAAI,4DAAA;EAAA;EAAA,QAAAE,EAAA;WAAZiM,YAAY;IAAAxG,OAAA,EAAZwG,YAAY,CAAAvG,IAAA;IAAAqG,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;ACAd,MAAOzF,WAAW;EAGtB9H,YAAoB4N,OAA2B;IAA3B,KAAAA,OAAO,GAAPA,OAAO;IAD3B,KAAAC,YAAY,GAAG,CAAC;EACmC;EAEnDjG,IAAIA,CAAA;IACF,IAAI,CAACiG,YAAY,EAAE;IACnB,IAAI,CAACD,OAAO,CAACE,IAAI,CAACC,SAAS,EAAE;MAC3B1J,IAAI,EAAE,WAAW;MACjB2J,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,oBAAoB;MAC7BC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;KACP,CAAC;EACJ;EAEAtG,IAAIA,CAAA;IACF,IAAI,CAACgG,YAAY,EAAE;IACnB,IAAI,IAAI,CAACA,YAAY,IAAI,CAAC,EAAE;MAC1B,IAAI,CAACA,YAAY,GAAG,CAAC;MACrB,IAAI,CAACD,OAAO,CAACQ,IAAI,EAAE;;EAEvB;EAAC,QAAAnN,CAAA;qBAtBU6G,WAAW,EAAA5G,sDAAA,CAAAI,0DAAA;EAAA;EAAA,QAAAE,EAAA;WAAXsG,WAAW;IAAAb,OAAA,EAAXa,WAAW,CAAAZ,IAAA;IAAAqG,UAAA,EAFV;EAAM;;;;;;;;;;;;;;;;;;;ACFuE;AACpD;;;AAKjC,MAAOhI,cAAc;EAGzBvF,YAAoBuO,YAA4B;IAA5B,KAAAA,YAAY,GAAZA,YAAY;EAAoB;EAEpD1I,OAAOA,CACL2I,KAAK,GAAG,cAAc,EACtBC,OAAO,GAAG,mCAAmC,EAC7CC,SAAS,GAAG,IAAI,EAChBC,aAAa,GAAG,QAAQ;IACxB,MAAMC,MAAM,GAAG;MACbC,YAAY,EAAE;QACZL,KAAK;QACLC,OAAO;QACPC,SAAS;QACTC;;KAEH;IACD,IAAI,CAACG,UAAU,GAAG,IAAI,CAACP,YAAY,CAACT,IAAI,CAACQ,mGAAsB,EAAEM,MAAM,CAAC;IACxE,OAAO,IAAI,CAACE,UAAU,CAACC,QAAS,CAACxO,IAAI,CACnCsE,yCAAG,CAAC,MAAK;MACP,OAAO,IAAI,CAACiK,UAAW,CAACE,OAAQ,CAACC,MAAM;IACzC,CAAC,CAAC,CACH;EACH;EAAC,QAAAhO,CAAA;qBAxBUsE,cAAc,EAAArE,sDAAA,CAAAI,+DAAA;EAAA;EAAA,QAAAE,EAAA;WAAd+D,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAqG,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;ACJd,MAAO4B,wBAAwB;EACjCC,YAAYA,CAACrK,KAA6B;IACtC,OAAO,KAAK;EAChB;EACAsK,KAAKA,CAACtK,KAA6B,EAAEoB,MAAkC,GACvE;EACAmJ,YAAYA,CAACvK,KAA6B;IACtC,OAAO,KAAK;EAChB;EACAwK,QAAQA,CAACxK,KAA6B;IAClC,OAAO,IAAI;EACf;EACAyK,gBAAgBA,CAACC,MAA8B,EAAEC,IAA4B;IACzE,OAAO,KAAK;EAChB;;;;;;;;;;;;;;;;;;;;;;;;ACduD;AAEtB;AACc;AAG2B;;;;AAKxE,MAAO3F,cAAc;EAOzB/J,YAAoBuK,IAAgB,EAAUpK,cAA8B;IAAxD,KAAAoK,IAAI,GAAJA,IAAI;IAAsB,KAAApK,cAAc,GAAdA,cAAc;IAN5D,KAAAsK,OAAO,GAAGH,qEAAW,CAACI,MAAM;IAC5B,KAAAoF,OAAO,GAAa,EAAE;IACtB,KAAAC,WAAW,GAAG,IAAIC,GAAG,EAAE;IAKrB,IAAI,CAAC7P,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EACN,IAAI,CAAC4P,UAAU,GAAG,IAAIjI,0DAAU,CAAC3H,IAAI,CAAC;QACxC,IAAI,CAACA,IAAI,GAAGA,IAAI;MAClB;KACD,CAAC;EACJ;EAEA6P,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,UAAU;EACxB;EAEAE,aAAaA,CAACF,UAAsB;IAClC,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEAG,eAAeA,CAAA;IACb,IAAI,IAAI,CAAC/P,IAAI,EAAE;MACb,IAAI,CAAC4P,UAAU,GAAG,IAAIjI,0DAAU,CAAC,IAAI,CAAC3H,IAAI,CAAC;MAC3C,OAAO,IAAI,CAAC4P,UAAU;;IAExB;EACF;EAEAI,UAAUA,CAACJ,UAAsB;IAC/B,MAAMhF,QAAQ,GAAG,IAAI,CAAC8E,WAAW,CAAC3F,GAAG,CAACkG,MAAM,CAACC,MAAM,CAACN,UAAU,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1E,IAAIvF,QAAQ,EAAE,OAAO0E,wCAAE,CAAC1E,QAAQ,CAAC;IAEjC,IAAIwF,MAAM,GAAGZ,uEAAoB,CAACI,UAAU,CAAC9H,UAAU,EAAE8H,UAAU,CAAC7H,QAAQ,CAAC;IAE7EqI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAET,UAAU,CAAChI,MAAM,CAAC;IACnDwI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAET,UAAU,CAAC/H,MAAM,CAAC;IACnDuI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAET,UAAU,CAAC3H,MAAM,CAAC;IACnDmI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,SAAS,EAAET,UAAU,CAAC5H,OAAO,CAAC;IAErD,OAAOuH,qEAAkB,CAAW,IAAI,CAACnF,OAAO,GAAG,OAAO,EAAEgG,MAAM,EAAE,IAAI,CAAClG,IAAI,CAAC,CAAChK,IAAI,CACjFsE,yCAAG,CAACoG,QAAQ,IAAG;MACb,IAAI,CAAC8E,WAAW,CAACY,GAAG,CAACL,MAAM,CAACC,MAAM,CAACN,UAAU,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC,EAAEvF,QAAQ,CAAC;MACnE,OAAOA,QAAQ;IACjB,CAAC,CAAC,CACH;EACH;EAEAf,SAASA,CAACkB,QAAgB;IACxB,MAAMwF,MAAM,GAAG,CAAC,GAAG,IAAI,CAACb,WAAW,CAACQ,MAAM,EAAE,CAAC,CAC1CM,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,CAACE,MAAM,CAACD,IAAI,CAAC9B,MAAM,CAAC,EAAE,EAAE,CAAC,CAClDgC,IAAI,CAAEL,MAAc,IAAKA,MAAM,CAACM,QAAQ,KAAK9F,QAAQ,CAAC;IAEzD,IAAIwF,MAAM,EAAE,OAAOjB,wCAAE,CAACiB,MAAM,CAAC;IAE7B,OAAO,IAAI,CAACrG,IAAI,CAACH,GAAG,CAAS,IAAI,CAACK,OAAO,GAAG,QAAQ,GAAGW,QAAQ,CAAC;EAClE;EAEA+F,YAAYA,CAACP,MAAc;IACzB,OAAO,IAAI,CAACrG,IAAI,CAAC6G,GAAG,CAAC,IAAI,CAAC3G,OAAO,GAAG,OAAO,EAAEmG,MAAM,CAAC,CAACrQ,IAAI,CACvDsE,yCAAG,CAAC,MAAK;MACP,MAAMwM,KAAK,GAAG,IAAI,CAACvB,OAAO,CAACwB,OAAO,CAACV,MAAM,CAAC;MAC1C,IAAI,CAACd,OAAO,CAACuB,KAAK,CAAC,GAAG;QAAE,GAAG,IAAI,CAACvB,OAAO,CAACuB,KAAK,CAAC;QAAE,GAAGT;MAAM,CAAE;IAC7D,CAAC,CAAC,CACH;EACH;EAEAW,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACjH,IAAI,CAAC6G,GAAG,CAAC,IAAI,CAAC3G,OAAO,GAAG,uBAAuB,GAAG+G,OAAO,EAAE,EAAE,CAAC;EAC5E;EAEAC,WAAWA,CAACD,OAAe;IACzB,OAAO,IAAI,CAACjH,IAAI,CAACmH,MAAM,CAAC,IAAI,CAACjH,OAAO,GAAG,qBAAqB,GAAG+G,OAAO,CAAC;EACzE;EAEAG,OAAOA,CAACvG,QAAgB;IACtB,OAAO,IAAI,CAACb,IAAI,CAACS,IAAI,CAAC,IAAI,CAACP,OAAO,GAAG,gBAAgB,GAAGW,QAAQ,EAAE,EAAE,CAAC;EACvE;EACAwG,UAAUA,CAACxG,QAAgB;IACzB,OAAO,IAAI,CAACb,IAAI,CAACS,IAAI,CAAC,IAAI,CAACP,OAAO,GAAG,mBAAmB,GAAGW,QAAQ,EAAE,EAAE,CAAC;EAC1E;EAEAyG,QAAQA,CAACC,SAAiB,EAAE3J,UAAkB,EAAEC,QAAgB;IAC9D,IAAIqI,MAAM,GAAGZ,uEAAoB,CAAC1H,UAAU,EAAEC,QAAQ,CAAC;IAEvDqI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,WAAW,EAAEoB,SAAS,CAAC;IAE9C,OAAOlC,qEAAkB,CAAW,IAAI,CAACnF,OAAO,GAAG,OAAO,EAAEgG,MAAM,EAAE,IAAI,CAAClG,IAAI,CAAC;EAChF;EAAC,QAAAtJ,CAAA;qBA7FU8I,cAAc,EAAA7I,sDAAA,CAAAI,4DAAA,GAAAJ,sDAAA,CAAA8F,4DAAA;EAAA;EAAA,QAAAxF,EAAA;WAAduI,cAAc;IAAA9C,OAAA,EAAd8C,cAAc,CAAA7C,IAAA;IAAAqG,UAAA,EAFb;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACVuC;AAId;AAC4B;AAGK;;;;AAKxE,MAAOyE,eAAe;EAO1BhS,YAAoBuK,IAAgB,EAAU5C,WAAwB;IAAlD,KAAA4C,IAAI,GAAJA,IAAI;IAAsB,KAAA5C,WAAW,GAAXA,WAAW;IANzD,KAAA8C,OAAO,GAAGH,qEAAW,CAACI,MAAM;IAC5B,KAAAuH,MAAM,GAAG3H,qEAAW,CAAC2H,MAAM;IAEnB,KAAAC,kBAAkB,GAAG,IAAI7H,iDAAe,CAAY,EAAE,CAAC;IAC/D,KAAA8H,cAAc,GAAG,IAAI,CAACD,kBAAkB,CAACtH,YAAY,EAAE;EAEmB;EAE1EkB,mBAAmBA,CAACzL,IAAU,EAAE+R,aAAqB;IACnD,IAAI,CAACzK,WAAW,CAACC,IAAI,EAAE;IACvB,IAAI,CAACyK,aAAa,GAAG,IAAIN,oEAAoB,EAAE,CAC5CO,OAAO,CAAC,IAAI,CAACL,MAAM,GAAG,eAAe,GAAGG,aAAa,EAAE;MACtDG,kBAAkB,EAAEA,CAAA,KAAMlS,IAAI,CAACkH;KAChC,CAAC,CACDiL,sBAAsB,EAAE,CACxBC,KAAK,EAAE;IACV,IAAI,CAACJ,aAAa,CAACK,KAAK,EAAE,CACvBC,KAAK,CAACzN,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC,CAAC,CAClC0N,OAAO,CAAC,MAAM,IAAI,CAACjL,WAAW,CAACE,IAAI,EAAE,CAAC;IAEzC,IAAI,CAACwK,aAAa,CAACQ,EAAE,CAAC,sBAAsB,EAAEC,QAAQ,IAAG;MACvD,IAAI,CAACZ,kBAAkB,CAACzR,IAAI,CAACqS,QAAQ,CAAC;IACxC,CAAC,CAAC;IAEF,IAAI,CAACT,aAAa,CAACQ,EAAE,CAAC,YAAY,EAAEpE,OAAO,IAAG;MAC5C,IAAI,CAAC0D,cAAc,CAAC5R,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;QAC1CC,IAAI,EAAEqS,QAAQ,IAAG;UACf,IAAI,CAACZ,kBAAkB,CAACzR,IAAI,CAAC,CAAC,GAAGqS,QAAQ,EAAErE,OAAO,CAAC,CAAC;QACtD;OACD,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAAC4D,aAAa,CAACQ,EAAE,CAAC,cAAc,EAAGE,KAAY,IAAI;MACrD,IAAIA,KAAK,CAACC,WAAW,CAACpS,IAAI,CAACqS,CAAC,IAAIA,CAAC,CAAC7H,QAAQ,KAAKgH,aAAa,CAAC,EAAE;QAC7D,IAAI,CAACD,cAAc,CAAC5R,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;UAC1CC,IAAI,EAAEqS,QAAQ,IAAG;YACfA,QAAQ,CAACI,OAAO,CAACzE,OAAO,IAAG;cACzB,IAAI,CAACA,OAAO,CAAC0E,QAAQ,EAAE;gBACrB1E,OAAO,CAAC0E,QAAQ,GAAG,IAAI5G,IAAI,CAACA,IAAI,CAAC6G,GAAG,EAAE,CAAC;;YAE3C,CAAC,CAAC;YACF,IAAI,CAAClB,kBAAkB,CAACzR,IAAI,CAAC,CAAC,GAAGqS,QAAQ,CAAC,CAAC;UAC7C;SACD,CAAC;;IAEN,CAAC,CAAC;EACJ;EAEA7G,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACoG,aAAa,EAAE;MACtB,IAAI,CAACH,kBAAkB,CAACzR,IAAI,CAAC,EAAE,CAAC;MAChC,IAAI,CAAC4R,aAAa,EAAEgB,IAAI,EAAE;;EAE9B;EAEAC,WAAWA,CAACnL,UAAkB,EAAEC,QAAgB,EAAEmL,SAAiB;IACjE,IAAI9C,MAAM,GAAGZ,uEAAoB,CAAC1H,UAAU,EAAEC,QAAQ,CAAC;IACvDqI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,WAAW,EAAE6C,SAAS,CAAC;IAC9C,OAAO3D,qEAAkB,CAAY,IAAI,CAACnF,OAAO,GAAG,UAAU,EAAEgG,MAAM,EAAE,IAAI,CAAClG,IAAI,CAAC;EACpF;EAEAiJ,gBAAgBA,CAACpI,QAAgB;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACH,GAAG,CAAY,IAAI,CAACK,OAAO,GAAG,kBAAkB,GAAGW,QAAQ,CAAC;EAC/E;EAEMqI,WAAWA,CAACrI,QAAgB,EAAE4D,OAAe;IAAA,IAAA0E,KAAA;IAAA,OAAAC,8IAAA;MACjD,OAAOD,KAAI,CAACrB,aAAa,EAAEuB,MAAM,CAAC,aAAa,EAAE;QAAEC,iBAAiB,EAAEzI,QAAQ;QAAE4D;MAAO,CAAE,CAAC,CACvF2D,KAAK,CAACzN,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC,CAAC;IAAC;EACxC;EAEA4O,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACxJ,IAAI,CAACmH,MAAM,CAAC,IAAI,CAACjH,OAAO,GAAG,WAAW,GAAGsJ,EAAE,CAAC;EAC1D;EAAC,QAAA9S,CAAA;qBAzEU+Q,eAAe,EAAA9Q,sDAAA,CAAAI,4DAAA,GAAAJ,sDAAA,CAAA8F,sDAAA;EAAA;EAAA,QAAAxF,EAAA;WAAfwQ,eAAe;IAAA/K,OAAA,EAAf+K,eAAe,CAAA9K,IAAA;IAAAqG,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;;;ACZ0C;AACnC;AAC6B;AAElD,SAAUqC,kBAAkBA,CAAIqE,GAAW,EAAExD,MAAkB,EAAElG,IAAgB;EACnF,MAAM2J,eAAe,GAAuB,IAAInM,+DAAkB,CAAlB,CAAkB;EAClE,OAAOwC,IAAI,CAACH,GAAG,CAAI6J,GAAG,EAAE;IAAEE,OAAO,EAAE,UAAU;IAAE1D;EAAM,CAAE,CAAC,CAAClQ,IAAI,CACzDsE,yCAAG,CAACoG,QAAQ,IAAG;IACX,IAAIA,QAAQ,CAACmJ,IAAI,EAAE;MACfF,eAAe,CAACjF,MAAM,GAAGhE,QAAQ,CAACmJ,IAAI;;IAE1C,MAAMC,UAAU,GAAGpJ,QAAQ,CAACqJ,OAAO,CAAClK,GAAG,CAAC,YAAY,CAAC;IACrD,IAAIiK,UAAU,EAAE;MACZH,eAAe,CAACG,UAAU,GAAGzI,IAAI,CAACM,KAAK,CAACmI,UAAU,CAAC;;IAEvD,OAAOH,eAAe;EAC1B,CAAC,CAAC,CACL;AACL;AAEM,SAAUrE,oBAAoBA,CAAC1H,UAAkB,EAAEC,QAAgB;EACrE,IAAIqI,MAAM,GAAG,IAAIuD,4DAAU,EAAE;EAE7BvD,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,YAAY,EAAEvI,UAAU,CAAC;EAChDsI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEtI,QAAQ,CAAC;EAE5C,OAAOqI,MAAM;AACjB;;;;;;;;;;;;;;;;;;;;;AC1ByE;AAEd;AAEd;;;;AAMvC,MAAOnD,eAAe;EAM1BtN,YAAoBiF,MAAqB,EAAUI,MAAc;IAA7C,KAAAJ,MAAM,GAANA,MAAM;IAAyB,KAAAI,MAAM,GAANA,MAAM;IALzD,KAAA4M,MAAM,GAAG3H,qEAAW,CAAC2H,MAAM;IAEnB,KAAAsC,iBAAiB,GAAG,IAAIlK,iDAAe,CAAW,EAAE,CAAC;IAC7D,KAAAmK,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAAC3J,YAAY,EAAE;EAEiB;EAErEkB,mBAAmBA,CAACzL,IAAU;IAC5B,IAAI,CAACgS,aAAa,GAAG,IAAIN,oEAAoB,EAAE,CAC5CO,OAAO,CAAC,IAAI,CAACL,MAAM,GAAG,UAAU,EAAE;MACjCM,kBAAkB,EAAEA,CAAA,KAAMlS,IAAI,CAACkH;KAChC,CAAC,CACDiL,sBAAsB,EAAE,CACxBC,KAAK,EAAE;IAEV,IAAI,CAACJ,aAAa,CACfK,KAAK,EAAE,CACPC,KAAK,CAACzN,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC,CAAC;IAErC,IAAI,CAACmN,aAAa,CAACQ,EAAE,CAAC,cAAc,EAAEzH,QAAQ,IAAG;MAC/C,IAAI,CAACoJ,YAAY,CAACjU,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;QACxCC,IAAI,EAAEgU,SAAS,IAAI,IAAI,CAACF,iBAAiB,CAAC9T,IAAI,CAAC,CAAC,GAAGgU,SAAS,EAAErJ,QAAQ,CAAC;OACxE,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACiH,aAAa,CAACQ,EAAE,CAAC,eAAe,EAAEzH,QAAQ,IAAG;MAChD,IAAI,CAACoJ,YAAY,CAACjU,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;QACxCC,IAAI,EAAEgU,SAAS,IAAI,IAAI,CAACF,iBAAiB,CAAC9T,IAAI,CAAC,CAAC,GAAGgU,SAAS,CAACC,MAAM,CAACzB,CAAC,IAAIA,CAAC,KAAK7H,QAAQ,CAAC,CAAC;OAC1F,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACiH,aAAa,CAACQ,EAAE,CAAC,gBAAgB,EAAE4B,SAAS,IAAG;MAClD,IAAI,CAACF,iBAAiB,CAAC9T,IAAI,CAACgU,SAAS,CAAC;IACxC,CAAC,CAAC;IAEF,IAAI,CAACpC,aAAa,CAACQ,EAAE,CAAC,oBAAoB,EAAE,CAAC;MAAEzH,QAAQ;MAAEuJ;IAAO,CAAE,KAAI;MACpE,IAAI,CAAC1P,MAAM,CAAC2P,IAAI,CAACD,OAAO,GAAG,kDAAkD,CAAC,CAC3EE,KAAK,CACLtU,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CACbU,SAAS,CAAC,MAAM,IAAI,CAAC6E,MAAM,CAACsB,aAAa,CAAC,WAAW,GAAGyE,QAAQ,GAAG,eAAe,CAAC,CAAC;IACzF,CAAC,CAAC;EACJ;EAEAa,iBAAiBA,CAAA;IACf,IAAI,CAACoG,aAAa,EAAEgB,IAAI,EAAE,CAACV,KAAK,CAACzN,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC,CAAC;EAC/D;EAAC,QAAAjE,CAAA;qBA9CUqM,eAAe,EAAApM,sDAAA,CAAAI,qDAAA,GAAAJ,sDAAA,CAAA8F,mDAAA;EAAA;EAAA,QAAAxF,EAAA;WAAf8L,eAAe;IAAArG,OAAA,EAAfqG,eAAe,CAAApG,IAAA;IAAAqG,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;ACFd,MAAOuH,cAAc;EAAA,QAAA7T,CAAA;qBAAd6T,cAAc;EAAA;EAAA,QAAAtT,EAAA;UAAdsT,cAAc;IAAArT,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAE,QAAA,WAAA4R,wBAAA1R,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BnC,4DAAA,QAAG;QAAAA,oDAAA,mBAAY;QAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEGXA,4DAAA,aAAuD;IAE/CA,uDAAA,0BAA2C;IAC/CA,0DAAA,EAAM;;;;;;ADCZ,MAAO8T,mBAAmB;EAAA,QAAA/T,CAAA;qBAAnB+T,mBAAmB;EAAA;EAAA,QAAAxT,EAAA;UAAnBwT,mBAAmB;IAAAvT,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA8R,6BAAA5R,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPhCnC,4DAAA,SAAI;QAAAA,oDAAA,kBAAW;QAAAA,0DAAA,EAAK;QACpBA,4DAAA,aAAuB;QAEfA,wDAAA,IAAAgU,kCAAA,iBAIM;QAMVhU,0DAAA,EAAS;;;QAV2BA,uDAAA,GAAqB;QAArBA,wDAAA,eAAAA,6DAAA,IAAAkU,GAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;ACIvD,MAAOC,wBAAwB;EAAA,QAAApU,CAAA;qBAAxBoU,wBAAwB;EAAA;EAAA,QAAA7T,EAAA;UAAxB6T,wBAAwB;IAAA5T,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAE,QAAA,WAAAmS,kCAAAjS,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPrCnC,4DAAA,QAAG;QAAAA,oDAAA,8BAAuB;QAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;ACCiD;AAGQ;;;;;;;;ICM3EA,4DAAA,SAA+B;IACvBA,oDAAA,GAAiB;IAAAA,0DAAA,EAAK;IAC1BA,4DAAA,SAAI;IAAAA,oDAAA,GAAc;IAAAA,0DAAA,EAAK;IACvBA,4DAAA,SAAI;IAAQA,wDAAA,mBAAAwU,+DAAA;MAAA,MAAAC,WAAA,GAAAzU,2DAAA,CAAA2U,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAA5R,MAAA,GAAAjD,2DAAA;MAAA,OAASA,yDAAA,CAAAiD,MAAA,CAAA+R,cAAA,CAAAJ,OAAA,CAAoB;IAAA,EAAC;IAAsB5U,oDAAA,iBAAU;IAAAA,0DAAA,EAAS;;;;IAF/EA,uDAAA,GAAiB;IAAjBA,+DAAA,CAAA4U,OAAA,CAAA1K,QAAA,CAAiB;IACjBlK,uDAAA,GAAc;IAAdA,+DAAA,CAAA4U,OAAA,CAAAnV,KAAA,CAAc;;;ADD5B,MAAOyV,uBAAuB;EASlCpW,YAAoBqW,YAA0B,EAAU9H,YAA4B;IAAhE,KAAA8H,YAAY,GAAZA,YAAY;IAAwB,KAAA9H,YAAY,GAAZA,YAAY;IARpE,KAAA+H,KAAK,GAAW,EAAE;IAClB,KAAAC,UAAU,GAAoC,IAAIhB,2DAAU,EAAuB;IACnF,KAAAiB,cAAc,GAAG,CACf,OAAO,EACP,WAAW,EACX,QAAQ,CACT;EAEuF;EAExF9V,QAAQA,CAAA;IACN,IAAI,CAACgN,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAAC2I,YAAY,CAAC3I,iBAAiB,EAAE,CAAClN,SAAS,CAAC;MAC9CC,IAAI,EAAE6V,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA;KAC7B,CAAC;EACJ;EAEAJ,cAAcA,CAAC7V,IAAU;IACvB,MAAMuO,MAAM,GAAG;MACb6H,KAAK,EAAE,uBAAuB;MAC9B5H,YAAY,EAAE;QACZzD,QAAQ,EAAE/K,IAAI,CAAC+K,QAAQ;QACvBoL,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCE,aAAa,EAAE,CAAC,GAAGrW,IAAI,CAACM,KAAK;;KAEhC;IACD,IAAI,CAAC4V,UAAU,GAAG,IAAI,CAAChI,YAAY,CAACT,IAAI,CAAC0H,iGAAmB,EAAE5G,MAAM,CAAC;IACrE,IAAI,CAAC2H,UAAU,CAACI,MAAM,EAAEnW,SAAS,CAAC;MAChCC,IAAI,EAAEA,CAAA,KAAK;QACT,MAAMiW,aAAa,GAAG,IAAI,CAACH,UAAU,CAACvH,OAAO,EAAE0H,aAAa;QAC5D,IAAI,CAAC,IAAI,CAACE,UAAU,CAACF,aAAa,EAAErW,IAAI,CAACM,KAAK,CAAC,EAAE;UAC/C,IAAI,CAAC0V,YAAY,CAAC1I,eAAe,CAACtN,IAAI,CAAC+K,QAAQ,EAAEsL,aAAc,CAAC,CAAClW,SAAS,CAAC;YACzEC,IAAI,EAAEE,KAAK,IAAIN,IAAI,CAACM,KAAK,GAAGA;WAC7B,CAAC;;MAEN;KACD,CAAC;EACJ;EAEQiW,UAAUA,CAACC,IAAS,EAAEC,IAAS;IACrC,OAAOlL,IAAI,CAACC,SAAS,CAACgL,IAAI,CAACE,IAAI,EAAE,CAAC,KAAKnL,IAAI,CAACC,SAAS,CAACiL,IAAI,CAACC,IAAI,EAAE,CAAC;EACpE;EAAC,QAAA9V,CAAA;qBA7CUmV,uBAAuB,EAAAlV,+DAAA,CAAAI,wEAAA,GAAAJ,+DAAA,CAAA8F,+DAAA;EAAA;EAAA,QAAAxF,EAAA;UAAvB4U,uBAAuB;IAAA3U,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6T,iCAAA3T,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXpCnC,4DAAA,aAAyD;QAIjBA,oDAAA,eAAQ;QAAAA,0DAAA,EAAK;QACrCA,4DAAA,YAAwB;QAAAA,oDAAA,mBAAY;QAAAA,0DAAA,EAAK;QACzCA,uDAAA,YAA6B;QACjCA,0DAAA,EAAK;QAETA,4DAAA,YAAO;QACHA,wDAAA,KAAA+V,sCAAA,gBAIK;QACT/V,0DAAA,EAAQ;;;QALiBA,uDAAA,IAAQ;QAARA,wDAAA,YAAAoC,GAAA,CAAAgT,KAAA,CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACD;AAC4B;AACM;AAC/B;AACS;AACjB;AAC6B;AACH;AACS;AACF;AACG;AACN;AACC;AAC7B;AAC6B;AACX;AACa;AACzB;;;AAEzD,MAAMwB,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,UAAU;EAAEtS,SAAS,EAAE0R,+DAAa;EAAEa,WAAW,EAAE,CAAClS,2FAAyB;AAAC,CAAG,EACzF;EAAEiS,IAAI,EAAE,OAAO;EAAEtS,SAAS,EAAEqP,mEAAcA;AAAA,CAAE,EAC5C;EACEiD,IAAI,EAAE,EAAE;EACRE,qBAAqB,EAAE,QAAQ;EAC/BD,WAAW,EAAE,CAAC5S,yDAAS,CAAC;EACxB8S,QAAQ,EAAE,CACR;IAAEH,IAAI,EAAE,EAAE;IAAEtS,SAAS,EAAE2R,2FAAmBA;EAAA,CAAE,EAC5C;IAAEW,IAAI,EAAE,SAAS;IAAEtS,SAAS,EAAE2R,2FAAmBA;EAAA,CAAE,EACnD;IAAEW,IAAI,EAAE,mBAAmB;IAAEtS,SAAS,EAAE4R,iGAAqB;IAAEc,OAAO,EAAE,CAACnO,wFAAsB;EAAC,CAAE,EAClG;IAAE+N,IAAI,EAAE,aAAa;IAAEtS,SAAS,EAAEkS,2FAAmB;IAAES,aAAa,EAAE,CAAC5S,8FAA0B;EAAC,CAAE,EACpG;IAAEuS,IAAI,EAAE,eAAe;IAAEtS,SAAS,EAAEmS,0FAAqBA;EAAA,CAAE,EAE3D;IAAEG,IAAI,EAAE,OAAO;IAAEtS,SAAS,EAAE6R,kEAAcA;EAAA,CAAE,EAC5C;IAAES,IAAI,EAAE,UAAU;IAAEtS,SAAS,EAAE8R,2EAAiBA;EAAA,CAAE,EAClD;IAAEQ,IAAI,EAAE,OAAO;IAAEtS,SAAS,EAAEuP,0FAAmB;IAAEgD,WAAW,EAAE,CAAClT,4DAAU;EAAC,CAAE,EAC5E;IAAEiT,IAAI,EAAE,WAAW;IAAEtS,SAAS,EAAEoS,+EAAkB;IAAEG,WAAW,EAAE,CAAClT,4DAAU;EAAC,CAAE;CAGlF,EACD;EAAEiT,IAAI,EAAE,QAAQ;EAAEtS,SAAS,EAAE+R,uFAAkBA;AAAA,CAAE,EACjD;EAAEO,IAAI,EAAE,WAAW;EAAEtS,SAAS,EAAEgS,oFAAiBA;AAAA,CAAE,EACnD;EAAEM,IAAI,EAAE,cAAc;EAAEtS,SAAS,EAAEiS,6FAAoBA;AAAA,CAAE,EAGzD;EAAEK,IAAI,EAAE,IAAI;EAAEtS,SAAS,EAAEgS,oFAAiB;EAAEY,SAAS,EAAE;AAAM,CAAE,CAEhE;AAMK,MAAOC,gBAAgB;EAAA,QAAArX,CAAA;qBAAhBqX,gBAAgB;EAAA;EAAA,QAAA9W,EAAA;UAAhB8W;EAAgB;EAAA,QAAAnP,EAAA;cAHjB+N,0DAAY,CAAC9N,OAAO,CAAC0O,MAAM,CAAC,EAC5BZ,0DAAY;EAAA;;;uHAEXoB,gBAAgB;IAAAhP,OAAA,GAAAhI,0DAAA;IAAAwI,OAAA,GAFjBoN,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC5ClB,MAAOqB,YAAY;EACvBvY,YAAoBG,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;EAElC;EACAO,QAAQA,CAAA;IACN,IAAI,CAACwK,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,MAAMsN,UAAU,GAAG9M,YAAY,CAACqB,OAAO,CAAC,MAAM,CAAE;IAChD,IAAI,CAACyL,UAAU,EAAE;IACjB,MAAMnY,IAAI,GAASuL,IAAI,CAACM,KAAK,CAACsM,UAAU,CAAC;IACzC,IAAI,CAACrY,cAAc,CAAC+K,cAAc,CAAC7K,IAAI,CAAC;EAC1C;EAAC,QAAAY,CAAA;qBAbUsX,YAAY,EAAArX,+DAAA,CAAAI,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAAZ+W,YAAY;IAAA9W,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAsV,sBAAApV,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTzBnC,4DAAA,kBAAc;QACRA,oDAAA,iBAAU;QAAAA,0DAAA,EAAK;QAGrBA,uDAAA,cAAmB;QACnBA,4DAAA,aAAmC;QAG/BA,uDAAA,oBAA+B;QACjCA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkD;AACiB;AAEnB;AACT;AACgC;AAC5B;AACe;AACZ;AACY;AACgB;AACzB;AACS;AACV;AACmB;AACS;AACF;AACA;AACG;AACP;AACG;AACD;AACZ;AACwB;AACG;AACd;AAC5B;AAC2B;AACU;AACrB;AACJ;AACQ;AACO;AACX;AACiB;AACA;AACmC;AAChE;AACA;;AAiDnD,MAAOuY,SAAS;EAAA,QAAAxY,CAAA;qBAATwY,SAAS;EAAA;EAAA,QAAAjY,EAAA;UAATiY,SAAS;IAAAC,SAAA,GAFRnB,wDAAY;EAAA;EAAA,QAAApP,EAAA;eANb,CACT;MAAEwQ,OAAO,EAAEhB,oEAAiB;MAAEiB,QAAQ,EAAE5T,8EAAgB;MAAE6T,KAAK,EAAE;IAAI,CAAE,EACvE;MAAEF,OAAO,EAAEhB,oEAAiB;MAAEiB,QAAQ,EAAEzS,0EAAc;MAAE0S,KAAK,EAAE;IAAI,CAAE,EACrE;MAAEF,OAAO,EAAEhB,oEAAiB;MAAEiB,QAAQ,EAAElS,kFAAkB;MAAEmS,KAAK,EAAE;IAAI,CAAE,EACzE;MAAEF,OAAO,EAAEP,gEAAkB;MAAEQ,QAAQ,EAAEzK,yFAAwBA;IAAA,CAAE,CACpE;IAAA7F,OAAA,GAbCoP,qEAAa,EACbJ,iEAAgB,EAChBM,mEAAgB,EAChBC,0FAAuB,EACvBE,wDAAW,EACXC,gEAAmB,EACnB9P,gEAAY;EAAA;;;uHAUHuQ,SAAS;IAAAK,YAAA,GA7ClBvB,wDAAY,EACZO,4DAAY,EACZ3B,+DAAa,EACb8B,2EAAiB,EACjB7B,2FAAmB,EACnBE,kEAAc,EACdC,2EAAiB,EACjBE,oFAAiB,EACjBC,8FAAoB,EACpBwB,4FAAmB,EACnBvB,4FAAmB,EACnBwB,+FAAoB,EACpB/U,uFAAkB,EAClBlC,0FAAmB,EACnB8S,0FAAmB,EACnBjV,6EAAgB,EAChBqW,sGAAuB,EACvBf,yGAAwB,EACxBG,2FAAmB,EACnBlH,oGAAsB,EACtBsJ,0FAAqB,EACrBC,+EAAkB,EAClBwB,gGAAoB,EACpBC,gGAAoB,EACpBC,mIAA+B,EAC/BC,mEAAc,EACd1E,mEAAc;IAAAxL,OAAA,GAGdoP,qEAAa,EACbJ,iEAAgB,EAChBM,mEAAgB,EAChBC,0FAAuB,EACvBE,wDAAW,EACXC,gEAAmB,EACnB9P,gEAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;AC9E+D;AAC3C;;AAO9B,MAAOmQ,oBAAoB;EALjCrZ,YAAA;IAMY,KAAAia,kBAAkB,GAA2C,IAAIF,uDAAY,EAAE;IAGzF,KAAAG,QAAQ,GAAY,KAAK;;EAEzBxZ,QAAQA,CAAA;IACN,IAAI,CAACyZ,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;EAC/B;EAEAD,KAAKA,CAACE,KAAW;IACf,MAAMC,IAAI,GAAGhK,MAAM,CAACC,MAAM,CAAC8J,KAAK,CAAC;IAEjC,MAAME,SAAS,GAAG,CAChB;MAAEC,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,EACpB;MAAED,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAE,CAErB;IAED;IACA,MAAMC,cAAc,GAA8B,EAAE;IAEpDJ,IAAI,CAACpH,OAAO,CAAEyH,OAAO,IAAI;MACvB,MAAMC,GAAG,GAAGC,QAAQ,CAACF,OAAO,CAACC,GAAG,CAAC;MACjC,IAAI,CAACE,KAAK,CAACF,GAAG,CAAC,EAAE;QACf,KAAK,MAAMG,KAAK,IAAIR,SAAS,EAAE;UAC7B,IAAIK,GAAG,IAAIG,KAAK,CAACP,GAAG,IAAII,GAAG,GAAGG,KAAK,CAACN,GAAG,EAAE;YACvC,MAAMnU,GAAG,GAAG,GAAGyU,KAAK,CAACP,GAAG,IAAIO,KAAK,CAACN,GAAG,EAAE;YACvCC,cAAc,CAACpU,GAAG,CAAC,GAAG,CAACoU,cAAc,CAACpU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;;;;IAI5D,CAAC,CAAC;IAEF;IACA,MAAM0U,YAAY,GAAG1K,MAAM,CAAC2K,IAAI,CAACP,cAAc,CAAC,CAAC7V,GAAG,CAAEyB,GAAG,KAAM;MAC7D2M,CAAC,EAAE3M,GAAG;MACN4U,CAAC,EAAER,cAAc,CAACpU,GAAG;KACtB,CAAC,CAAC;IACHO,OAAO,CAACC,GAAG,CAACkU,YAAY,CAAC;IACzB,IAAI,CAACG,SAAS,CAACH,YAAY,CAAC;EAC9B;EACAG,SAASA,CAACC,SAAqC;IAC7C,MAAMC,IAAI,GAAG,IAAI;IACjB,MAAMC,OAAO,GAA2B;MACtCnB,KAAK,EAAE;QACL9V,IAAI,EAAE,KAAK;QACXkX,MAAM,EAAE,KAAK;QAEbC,MAAM,EAAE;UACNC,KAAKA,CAACC,KAAK,EAAEC,YAAY,EAAE/M,MAAM;YAC/ByM,IAAI,CAACpB,kBAAkB,CAAC2B,IAAI,CAAChN,MAAM,CAACA,MAAM,CAACiN,MAAM,CAACjN,MAAM,CAACkN,WAAW,CAAC,CAACxB,IAAI,CAAC1L,MAAM,CAACmN,cAAc,CAAC,CAAC;UACpG;;OAEH;MACDvN,KAAK,EAAE;QACLwN,IAAI,EAAE;OACP;MACDC,WAAW,EAAE;QAEXC,GAAG,EAAE;UACHC,UAAU,EAAE;;OAEf;MACDN,MAAM,EAAE,CAAC;QACPvB,IAAI,EAAEc;OACP,CAAC;MACFgB,KAAK,EACL;QACE5N,KAAK,EAAE;UACLwN,IAAI,EAAE,aAAa;UACnBK,KAAK,EAAE;YACLnO,KAAK,EAAE,SAAS;YAChBoO,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,8BAA8B;YAC1CC,UAAU,EAAE,GAAG;YACfC,QAAQ,EAAE;;;OAGf;MACDC,KAAK,EACL;QACElO,KAAK,EAAE;UACLwN,IAAI,EAAE,aAAa;UACnBK,KAAK,EAAE;YACLnO,KAAK,EAAE,SAAS;YAChBoO,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,8BAA8B;YAC1CC,UAAU,EAAE,GAAG;YACfC,QAAQ,EAAE;;;;KAMjB;IAED,IAAI,CAAC,IAAI,CAACvC,QAAQ,EAAE;MAClB,IAAI,CAACyC,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,EAAEvB,OAAO,CAAC;MAC5E,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtB,IAAI,CAAC5C,QAAQ,GAAG,IAAI;MACpBrT,OAAO,CAACC,GAAG,CAACsU,SAAS,CAAC;KAEvB,MACI;MACH,IAAI,CAACuB,QAAQ,CAACI,OAAO,EAAE;MACvB,IAAI,CAACJ,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,EAAEvB,OAAO,CAAC;MAE5E,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtBjW,OAAO,CAACC,GAAG,CAACsU,SAAS,CAAC;MACtB;;EAEJ;EAAC,QAAAna,CAAA;qBA3HUoY,oBAAoB;EAAA;EAAA,QAAA7X,EAAA;UAApB6X,oBAAoB;IAAA5X,SAAA;IAAAC,MAAA;MAAA0Y,YAAA;IAAA;IAAA4C,OAAA;MAAA/C,kBAAA;IAAA;IAAAjX,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA8Z,8BAAA5Z,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjCnC,uDAAA,aAEM;;;;;;;;;;;;;;;;;;;;;;ACFyE;AAC3C;;AAO9B,MAAOqY,+BAA+B;EAL5CvZ,YAAA;IAOY,KAAAkd,wBAAwB,GAAyB,IAAInD,uDAAY,EAAE;IAI7E,KAAAG,QAAQ,GAAY,KAAK;;EACzBxZ,QAAQA,CAAA;IACN,IAAI,CAACyZ,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;EAC/B;EACAD,KAAKA,CAACE,KAAU;IACd,MAAMC,IAAI,GAAGhK,MAAM,CAACC,MAAM,CAAC8J,KAAK,CAAC;IAEjC;IACA,IAAI8C,kBAAkB,GAAG,CAAC;IAC1B,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAIC,cAAc,GAAG,CAAC;IAEtBhD,IAAI,CAACpH,OAAO,CAAEyH,OAAO,IAAI;MACvB,MAAMvU,MAAM,GAAGuU,OAAO,CAACvU,MAAM,CAACmX,WAAW,EAAE,CAAC,CAAC;MAC7C,IAAInX,MAAM,KAAK,gBAAgB,EAAE;QAC/B+W,kBAAkB,EAAE;OACrB,MAAM,IAAI/W,MAAM,KAAK,QAAQ,EAAE;QAC9BgX,WAAW,EAAE;OACd,MAAM,IAAIhX,MAAM,KAAK,SAAS,EAAE;QAC/BiX,YAAY,EAAE;OACf,MAAM,IAAIjX,MAAM,KAAK,WAAW,EAAE;QACjCkX,cAAc,EAAE;;IAEpB,CAAC,CAAC;IAEF;IACA,MAAME,sBAAsB,GAAG,CAC7BL,kBAAkB,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,CAC9D;IACD,IAAI,CAACnC,SAAS,CAACqC,sBAAsB,CAAC;EACxC;EACArC,SAASA,CAACqC,sBAAgC;IAExC,MAAMnC,IAAI,GAAG,IAAI;IAEjB,MAAMC,OAAO,GAA2B;MACtCO,MAAM,EAAE2B,sBAAsB;MAC9BrD,KAAK,EAAE;QACL9V,IAAI,EAAE,KAAK;QACXkX,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE;UACNiC,kBAAkB,EAAE,SAAAA,CAAU/B,KAAK,EAAEC,YAAY,EAAE/M,MAAM;YACvDyM,IAAI,CAAC6B,wBAAwB,CAACtB,IAAI,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAChN,MAAM,CAACmN,cAAc,CAAC,CAAC;YAC/G;UACF;;OAEH;;MACDvN,KAAK,EAAE;QACLwN,IAAI,EAAE;OACP;MACD0B,MAAM,EAAE,CAAC,gBAAgB,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW;KAG5D;IACD,IAAI,CAAC,IAAI,CAACxD,QAAQ,EAAE;MAClB,IAAI,CAACyC,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,EAAEvB,OAAO,CAAC;MACjF,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtB,IAAI,CAAC5C,QAAQ,GAAG,IAAI;MACpBrT,OAAO,CAACC,GAAG,CAAC0W,sBAAsB,CAAC;KAEpC,MACI;MACH,IAAI,CAACb,QAAQ,CAACI,OAAO,EAAE;MACvB,IAAI,CAACJ,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,EAAEvB,OAAO,CAAC;MAEjF,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtBjW,OAAO,CAACC,GAAG,CAAC0W,sBAAsB,CAAC;MACnC3W,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoT,QAAQ,CAAC;;EAE9B;EAAC,QAAAjZ,CAAA;qBA5EUsY,+BAA+B;EAAA;EAAA,QAAA/X,EAAA;UAA/B+X,+BAA+B;IAAA9X,SAAA;IAAAC,MAAA;MAAA0Y,YAAA;IAAA;IAAA4C,OAAA;MAAAE,wBAAA;IAAA;IAAAla,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwa,yCAAAta,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5CnC,uDAAA,aAEM;;;;;;;;;;;;;;;;;;;;;;ACFwF;AAC1D;;AAO9B,MAAOoY,oBAAoB;EALjCtZ,YAAA;IAMY,KAAA4d,qBAAqB,GAAyB,IAAI7D,uDAAY,EAAE;IAK1E,KAAAG,QAAQ,GAAY,KAAK;;EAGzBxZ,QAAQA,CAAA;IACN,IAAI,CAACyZ,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;EAC/B;EACAD,KAAKA,CAAC0D,KAAW;IACf,MAAMvD,IAAI,GAAGhK,MAAM,CAACC,MAAM,CAACsN,KAAK,CAAC;IAEjC;IACA,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,WAAW,GAAG,CAAC;IAEnBzD,IAAI,CAACpH,OAAO,CAAEyH,OAAO,IAAI;MACvB,MAAMrS,MAAM,GAAGqS,OAAO,CAACqD,GAAG,CAACT,WAAW,EAAE,CAAC,CAAC;MAC1C,IAAIjV,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,MAAM,EAAE;QACvCwV,SAAS,EAAE;OACZ,MAAM,IAAIxV,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,QAAQ,EAAE;QAChDyV,WAAW,EAAE;;IAEjB,CAAC,CAAC;IAEF;IACA,MAAME,UAAU,GAAG,CAACH,SAAS,EAAEC,WAAW,CAAC;IAC3C,IAAI,CAAC5C,SAAS,CAAC8C,UAAU,CAAC;EAC5B;EAEA9C,SAASA,CAAC8C,UAAoB;IAC5B,MAAM5C,IAAI,GAAG,IAAI;IAEjB,MAAMC,OAAO,GAA2B;MACtCO,MAAM,EAAEoC,UAAU;MAClB9D,KAAK,EAAE;QACL9V,IAAI,EAAE,KAAK;QACXkX,MAAM,EAAE,KAAK;QACbC,MAAM,EAAE;UACNiC,kBAAkB,EAAE,SAAAA,CAAU/B,KAAK,EAAEC,YAAY,EAAE/M,MAAM;YACvDyM,IAAI,CAACuC,qBAAqB,CAAChC,IAAI,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAChN,MAAM,CAACmN,cAAc,CAAC,CAAC;YAC1E;UACF;;OAGH;;MAEDvN,KAAK,EAAE;QACLwN,IAAI,EAAE;OACP;MACD0B,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ;KAE1B;IAED,IAAI,CAAC,IAAI,CAACxD,QAAQ,EAAE;MAClB,IAAI,CAACyC,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,EAAEvB,OAAO,CAAC;MAC5E,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtB,IAAI,CAAC5C,QAAQ,GAAG,IAAI;MACpBrT,OAAO,CAACC,GAAG,CAACmX,UAAU,CAAC;KAExB,MACI;MACH,IAAI,CAACtB,QAAQ,CAACI,OAAO,EAAE;MACvB,IAAI,CAACJ,QAAQ,GAAG,IAAI3C,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,EAAEvB,OAAO,CAAC;MAE5E,IAAI,CAACqB,QAAQ,CAACG,MAAM,EAAE;MACtBjW,OAAO,CAACC,GAAG,CAACmX,UAAU,CAAC;MACvBpX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoT,QAAQ,CAAC;;EAE9B;EAAC,QAAAjZ,CAAA;qBAxEUqY,oBAAoB;EAAA;EAAA,QAAA9X,EAAA;UAApB8X,oBAAoB;IAAA7X,SAAA;IAAAC,MAAA;MAAA0Y,YAAA;IAAA;IAAA4C,OAAA;MAAAY,qBAAA;IAAA;IAAA5a,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+a,8BAAA7a,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjCnC,uDAAA,aAEM;;;;;;;;;;;;;;;;;;;;;;;;ACDiD;AAEmE;AACnC;;;;;;AAEvF;AACA;AAMM,MAAO2W,kBAAkB;EAO7B7X,YAAA;IACE;EAAA;EAEFoe,qBAAqBA,CAAC9V,MAAc;IAClC;IACA,IAAI0V,GAAG,GAAG,GAAG;IACb,IAAI1V,MAAM,KAAK,QAAQ,EAAE;MACvB0V,GAAG,GAAG,QAAQ;;IAEhB,MAAMK,YAAY,GAAG/N,MAAM,CAACC,MAAM,CAAC4N,0DAAQ,CAAC,CAACzJ,MAAM,CAAEiG,OAAO,IAAI;MAC9D,OAAOA,OAAO,CAACqD,GAAG,KAAKA,GAAG;IAC5B,CAAC,CAAC;IACFnX,OAAO,CAACC,GAAG,CAACuX,YAAY,CAAC;IACzB,IAAI,CAACC,SAAS,GAAGD,YAA+B;IAChD,IAAI,CAACE,WAAW,CAACpE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;IACtC,IAAI,CAACE,cAAc,CAACrE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;EAC3C;EACAG,wBAAwBA,CAACrY,MAAc;IACrC;IACA,MAAMiY,YAAY,GAAG/N,MAAM,CAACC,MAAM,CAAC4N,0DAAQ,CAAC,CAACzJ,MAAM,CAAEiG,OAAO,IAAI;MAC9D,OAAOA,OAAO,CAACvU,MAAM,KAAKA,MAAM;IAClC,CAAC,CAAC;IACFS,OAAO,CAACC,GAAG,CAACuX,YAAY,CAAC;IACzB,IAAI,CAACC,SAAS,GAAGD,YAA+B;IAChD,IAAI,CAACE,WAAW,CAACpE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;IACtC,IAAI,CAACI,WAAW,CAACvE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;EACxC;EACA;EACAK,kBAAkBA,CAACrE,IAA8B;IAC/C,MAAMsE,QAAQ,GAAGtE,IAAI,CAACrH,CAAC,CAAC,CAAC;IACzB,MAAM4L,aAAa,GAAGD,QAAQ,CAACxS,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMnE,MAAM,GAAG4S,QAAQ,CAACgE,aAAa,CAAC,CAAC,CAAC,CAAC;IACzC,MAAM3W,MAAM,GAAG2S,QAAQ,CAACgE,aAAa,CAAC,CAAC,CAAC,CAAC;IAEzC;IACA,MAAMR,YAAY,GAAG/N,MAAM,CAACC,MAAM,CAAC4N,0DAAQ,CAAC,CAACzJ,MAAM,CAAEiG,OAAO,IAAI;MAC9D,MAAMC,GAAG,GAAGC,QAAQ,CAACF,OAAO,CAACC,GAAG,CAAC;MACjC,OAAO,CAACE,KAAK,CAACF,GAAG,CAAC,IAAIA,GAAG,IAAI3S,MAAM,IAAI2S,GAAG,IAAI1S,MAAM;IACtD,CAAC,CAAC;IAEF;IAEA;IACA,IAAI,CAACoW,SAAS,GAAGD,YAA+B;IAChD;IACA,IAAI,CAACK,WAAW,CAACvE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;IACtC,IAAI,CAACE,cAAc,CAACrE,KAAK,CAAC,IAAI,CAACmE,SAAS,CAAC;EAC3C;EACA5d,QAAQA,CAAA;IACN,IAAI,CAAC4d,SAAS,GAAGH,0DAA2B;EAE9C;EAAC,QAAAld,CAAA;qBA1DU4W,kBAAkB;EAAA;EAAA,QAAArW,EAAA;UAAlBqW,kBAAkB;IAAApW,SAAA;IAAAqd,SAAA,WAAAC,yBAAA1b,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;kEAKlBkW,kIAA+B;kEAC/BD,+FAAoB;;;;;;;;;;;;;;QCnBjCpY,4DAAA,aAAuB;QAGwCA,wDAAA,gCAAA8d,4EAAAC,MAAA;UAAA,OAAsB3b,GAAA,CAAAqb,kBAAA,CAAAM,MAAA,CAA0B;QAAA,EAAC;QAAC/d,0DAAA,EAAoB;QAEjIA,4DAAA,aAAsB;QAE4BA,wDAAA,mCAAAge,+EAAAD,MAAA;UAAA,OAAyB3b,GAAA,CAAA8a,qBAAA,CAAAa,MAAA,CAA6B;QAAA,EAAC;QAAC/d,0DAAA,EAAoB;QAE5HA,4DAAA,aAAiC;QAC2BA,wDAAA,sCAAAie,8FAAAF,MAAA;UAAA,OAA4B3b,GAAA,CAAAmb,wBAAA,CAAAQ,MAAA,CAAgC;QAAA,EAAC;QAAC/d,0DAAA,EAAgC;;;QAPvIA,uDAAA,GAA0B;QAA1BA,wDAAA,iBAAAoC,GAAA,CAAAgb,SAAA,CAA0B;QAIxBpd,uDAAA,GAA0B;QAA1BA,wDAAA,iBAAAoC,GAAA,CAAAgb,SAAA,CAA0B;QAGdpd,uDAAA,GAA0B;QAA1BA,wDAAA,iBAAAoC,GAAA,CAAAgb,SAAA,CAA0B;;;;;;;;;;;;;;;;;;;;;;;;ACH3D,MAAO7G,iBAAiB;EAAA,QAAAxW,CAAA;qBAAjBwW,iBAAiB;EAAA;EAAA,QAAAjW,EAAA;UAAjBiW,iBAAiB;IAAAhW,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAic,2BAAA/b,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BnC,4DAAA,aAAuB;QACfA,oDAAA,gBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,gBAAmD;QAAAA,oDAAA,2BAAoB;QAAAA,0DAAA,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEDpFA,qEAAA,GAA4B;IACxBA,4DAAA,YAAwB;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAK;IACrDA,4DAAA,WAA4B;IAAAA,oDAAA,uEAAgE;IAAAA,0DAAA,EAAI;IAChGA,4DAAA,QAAG;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAI;IACtBA,4DAAA,SAAI;IACIA,oDAAA,2EAAoE;IAAAA,0DAAA,EAAK;IAC7EA,4DAAA,UAAI;IAAAA,oDAAA,uEAA+D;IAAAA,0DAAA,EAAK;IACxEA,4DAAA,UAAI;IAAAA,oDAAA,gGAAwF;IAAAA,0DAAA,EAAK;IAGrGA,4DAAA,YAAgC;IAAAA,oDAAA,2FAChC;IAAAA,0DAAA,EAAI;IACJA,4DAAA,eAAyD;IACzDA,oDAAA,IACA;IAAAA,0DAAA,EAAO;IAEXA,mEAAA,EAAe;;;;IAfaA,uDAAA,GAAwB;IAAxBA,gEAAA,YAAAc,MAAA,CAAAkD,KAAA,CAAAuJ,OAAA,KAAwB;IAYhDvN,uDAAA,IACA;IADAA,gEAAA,MAAAc,MAAA,CAAAkD,KAAA,CAAAqa,OAAA,MACA;;;ADPE,MAAO7H,oBAAoB;EAE/B1X,YAAoBqF,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IACxB,MAAMma,UAAU,GAAG,IAAI,CAACna,MAAM,CAACoa,oBAAoB,EAAE;IACrD,IAAI,CAACva,KAAK,GAAGsa,UAAU,EAAEE,MAAM,EAAE1a,KAAK,GAAG,OAAO,CAAC;IACjD6B,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC5B,KAAK,CAAC;EACzB;EACAxE,QAAQA,CAAA,GAER;EAAC,QAAAO,CAAA;qBATUyW,oBAAoB,EAAAxW,+DAAA,CAAAI,mDAAA;EAAA;EAAA,QAAAE,EAAA;UAApBkW,oBAAoB;IAAAjW,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwc,8BAAAtc,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRjCnC,4DAAA,SAAI;QAAAA,oDAAA,gFAAyE;QAAAA,0DAAA,EAAK;QAClFA,wDAAA,IAAA0e,4CAAA,2BAgBe;;;QAhBA1e,uDAAA,GAAW;QAAXA,wDAAA,SAAAoC,GAAA,CAAA4B,KAAA,CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;IEQdhE,4DAAA,SAA2C;IACvCA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAA2e,QAAA,MACJ;;;;;IAJR3e,4DAAA,aAA0D;IAElDA,wDAAA,IAAA4e,uCAAA,gBAEK;IACT5e,0DAAA,EAAK;;;;IAHqBA,uDAAA,GAAmB;IAAnBA,wDAAA,YAAAc,MAAA,CAAA+d,gBAAA,CAAmB;;;ADD/C,MAAOvI,kBAAkB;EAI7BxX,YAAoBuK,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAwV,gBAAgB,GAAa,EAAE;IAC/B,KAAAtV,OAAO,GAAG,6BAA6B;EACC;EACxC/J,QAAQA,CAAA,GAER;EACAsf,WAAWA,CAAA;IACT,IAAI,CAACzV,IAAI,CAACH,GAAG,CAAC,IAAI,CAACK,OAAO,GAAG,iBAAiB,CAAC,CAACjK,SAAS,CAAC;MACxDC,IAAI,EAAEwK,QAAQ,IAAIpE,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAAC;MACvC/F,KAAK,EAAEA,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK;KAClC,CAAC;EACJ;EAEA+a,WAAWA,CAAA;IACT,IAAI,CAAC1V,IAAI,CAACH,GAAG,CAAC,IAAI,CAACK,OAAO,GAAG,mBAAmB,CAAC,CAACjK,SAAS,CAAC;MAC1DC,IAAI,EAAEwK,QAAQ,IAAIpE,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAAC;MACvC/F,KAAK,EAAEA,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK;KAClC,CAAC;EACJ;EAEAgb,WAAWA,CAAA;IACT,IAAI,CAAC3V,IAAI,CAACH,GAAG,CAAC,IAAI,CAACK,OAAO,GAAG,oBAAoB,CAAC,CAACjK,SAAS,CAAC;MAC3DC,IAAI,EAAEwK,QAAQ,IAAIpE,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAAC;MACvC/F,KAAK,EAAEA,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK;KAClC,CAAC;EACJ;EAEAib,WAAWA,CAAA;IACT,IAAI,CAAC5V,IAAI,CAACH,GAAG,CAAC,IAAI,CAACK,OAAO,GAAG,YAAY,CAAC,CAACjK,SAAS,CAAC;MACnDC,IAAI,EAAEwK,QAAQ,IAAIpE,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAAC;MACvC/F,KAAK,EAAEA,KAAK,IAAI2B,OAAO,CAACC,GAAG,CAAC5B,KAAK;KAClC,CAAC;EACJ;EAEAkb,qBAAqBA,CAAA;IACnB,IAAI,CAAC7V,IAAI,CAACS,IAAI,CAAC,IAAI,CAACP,OAAO,GAAG,kBAAkB,EAAE,EAAE,CAAC,CAACjK,SAAS,CAAC;MAC9DC,IAAI,EAAEwK,QAAQ,IAAIpE,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAAC;MACvC/F,KAAK,EAAEA,KAAK,IAAG;QACb2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC;QAClB,IAAI,CAAC6a,gBAAgB,GAAG7a,KAAK;MAC/B;KACD,CAAC;EACJ;EAAC,QAAAjE,CAAA;qBA5CUuW,kBAAkB,EAAAtW,+DAAA,CAAAI,4DAAA;EAAA;EAAA,QAAAE,EAAA;UAAlBgW,kBAAkB;IAAA/V,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkd,4BAAAhd,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BnC,qEAAA,GAAc;QACVA,4DAAA,gBAAqE;QAAxBA,wDAAA,mBAAAof,oDAAA;UAAA,OAAShd,GAAA,CAAA0c,WAAA,EAAa;QAAA,EAAC;QAAC9e,oDAAA,qBAAc;QAAAA,0DAAA,EAAS;QAC5FA,4DAAA,gBAAqE;QAAxBA,wDAAA,mBAAAqf,oDAAA;UAAA,OAASjd,GAAA,CAAA2c,WAAA,EAAa;QAAA,EAAC;QAAC/e,oDAAA,qBAAc;QAAAA,0DAAA,EAAS;QAC5FA,4DAAA,gBAAqE;QAAxBA,wDAAA,mBAAAsf,oDAAA;UAAA,OAASld,GAAA,CAAA4c,WAAA,EAAa;QAAA,EAAC;QAAChf,oDAAA,qBAAc;QAAAA,0DAAA,EAAS;QAC5FA,4DAAA,gBAAqE;QAAxBA,wDAAA,mBAAAuf,oDAAA;UAAA,OAASnd,GAAA,CAAA6c,WAAA,EAAa;QAAA,EAAC;QAACjf,oDAAA,qBAAc;QAAAA,0DAAA,EAAS;QAC5FA,4DAAA,gBAA+E;QAAlCA,wDAAA,mBAAAwf,oDAAA;UAAA,OAASpd,GAAA,CAAA8c,qBAAA,EAAuB;QAAA,EAAC;QAAClf,oDAAA,iCAAyB;QAAAA,0DAAA,EAAS;QAEjHA,wDAAA,KAAAyf,kCAAA,iBAMM;QACVzf,mEAAA,EAAe;;;QAPYA,uDAAA,IAAiC;QAAjCA,wDAAA,SAAAoC,GAAA,CAAAyc,gBAAA,CAAAa,MAAA,KAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IENxD1f,4DAAA,aAAqE;IAC7DA,oDAAA,sBAAe;IAAAA,0DAAA,EAAK;IACxBA,4DAAA,SAAI;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;IAChBA,4DAAA,YAAwB;IAAAA,oDAAA,qBAAc;IAAAA,0DAAA,EAAK;IAC3CA,4DAAA,WAAgB;IAAAA,oDAAA,wEAAiE;IAAAA,0DAAA,EAAI;IACrFA,4DAAA,aAAyB;IACbA,wDAAA,mBAAA2f,sDAAA;MAAA3f,2DAAA,CAAA4f,GAAA;MAAA,MAAAC,MAAA,GAAA7f,2DAAA;MAAA,OAASA,yDAAA,CAAA6f,MAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAAsC9f,oDAAA,cAAK;IAAAA,0DAAA,EAAS;IACnFA,4DAAA,iBAAuE;IAA/DA,wDAAA,mBAAA+f,sDAAA;MAAA/f,2DAAA,CAAA4f,GAAA;MAAA,MAAAI,MAAA,GAAAhgB,2DAAA;MAAA,OAASA,yDAAA,CAAAggB,MAAA,CAAAC,cAAA,EAAgB;IAAA,EAAC;IAAsCjgB,oDAAA,iBAAQ;IAAAA,0DAAA,EAAS;IACzFA,4DAAA,iBAAqE;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAS;;;;;;IAIhGA,4DAAA,cAA4C;IAGlBA,wDAAA,4BAAAkgB,oEAAAnC,MAAA;MAAA/d,2DAAA,CAAAmgB,GAAA;MAAA,MAAAC,MAAA,GAAApgB,2DAAA;MAAA,OAAkBA,yDAAA,CAAAogB,MAAA,CAAAC,kBAAA,CAAAtC,MAAA,CAA0B;IAAA,EAAC;IAAC/d,0DAAA,EAAe;;;;;;IAKvFA,4DAAA,cAAyC;IAGlBA,wDAAA,yBAAAsgB,8DAAAvC,MAAA;MAAA/d,2DAAA,CAAAugB,GAAA;MAAA,MAAAC,MAAA,GAAAxgB,2DAAA;MAAA,OAAeA,yDAAA,CAAAwgB,MAAA,CAAAC,eAAA,CAAA1C,MAAA,CAAuB;IAAA,EAAC;IAAC/d,0DAAA,EAAY;;;ADhBzE,MAAOiW,aAAa;EAIxBnX,YAAoBuK,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAqX,SAAS,GAAY,KAAK;IAC1B,KAAAC,YAAY,GAAG,KAAK;EAIpB;EACAnhB,QAAQA,CAAA;IACN;EAAA;EAGFygB,cAAcA,CAAA;IACZ,IAAI,CAACU,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,CAACD,SAAS,GAAG,KAAK;EACxB;EACAZ,WAAWA,CAAA;IACT,IAAI,CAACY,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;IAChC,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEAN,kBAAkBA,CAAC7F,KAAc;IAC/B,IAAI,CAACmG,YAAY,GAAGnG,KAAK;EAC3B;EACAiG,eAAeA,CAACjG,KAAc;IAC5B,IAAI,CAACkG,SAAS,GAAGlG,KAAK;EAExB;EAAC,QAAAza,CAAA;qBAnCUkW,aAAa,EAAAjW,+DAAA,CAAAI,4DAAA;EAAA;EAAA,QAAAE,EAAA;UAAb2V,aAAa;IAAA1V,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2e,uBAAAze,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR1BnC,4DAAA,aAA4B;QACxBA,wDAAA,IAAA6gB,4BAAA,kBAUM;QAEN7gB,wDAAA,IAAA8gB,4BAAA,iBAOM;QACN9gB,wDAAA,IAAA+gB,4BAAA,iBAMM;QACV/gB,0DAAA,EAAM;;;QA3BIA,uDAAA,GAAiC;QAAjCA,wDAAA,UAAAoC,GAAA,CAAAue,YAAA,KAAAve,GAAA,CAAAse,SAAA,CAAiC;QAYjC1gB,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoC,GAAA,CAAAue,YAAA,CAAkB;QAQlB3gB,uDAAA,GAAe;QAAfA,wDAAA,SAAAoC,GAAA,CAAAse,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IENjB1gB,4DAAA,aAAkD;IAC9CA,uDAAA,0BAAqD;IACzDA,0DAAA,EAAM;;;;IADeA,uDAAA,GAAiB;IAAjBA,wDAAA,WAAAghB,SAAA,CAAiB;;;;;;IAK9ChhB,4DAAA,cAA8D;IAEtDA,wDAAA,2BAAAihB,mEAAAlD,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAC,MAAA,GAAA7f,2DAAA;MAAA,OAAaA,yDAAA,CAAA6f,MAAA,CAAA1M,UAAA,CAAA+N,WAAA,GAAAnD,MAAA,CAA8B;IAAA,EAAP,yBAAAoD,iEAAApD,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAI,MAAA,GAAAhgB,2DAAA;MAAA,OAAgBA,yDAAA,CAAAggB,MAAA,CAAAoB,WAAA,CAAArD,MAAA,CAAmB;IAAA,EAAnC;IAExC/d,0DAAA,EAAa;;;;IAHDA,uDAAA,GAAsB;IAAtBA,wDAAA,uBAAsB,eAAA+C,MAAA,CAAAoQ,UAAA,CAAAkO,UAAA,kBAAAte,MAAA,CAAAoQ,UAAA,CAAAmO,YAAA,aAAAve,MAAA,CAAAoQ,UAAA,CAAA+N,WAAA;;;ADZhC,MAAO9K,cAAc;EAOzBtX,YAAoBiK,aAA6B;IAA7B,KAAAA,aAAa,GAAbA,aAAa;IALjC,KAAA6H,SAAS,GAAG,OAAO;IACnB,KAAA3J,UAAU,GAAG,CAAC;IACd,KAAAC,QAAQ,GAAG,CAAC;EAGyC;EAErD1H,QAAQA,CAAA;IACN,IAAI,CAAC+hB,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACxY,aAAa,CAAC4H,QAAQ,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC3J,UAAU,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC5H,SAAS,CAAC;MACpFC,IAAI,EAAEwK,QAAQ,IAAG;QACf,IAAI,CAAC6E,OAAO,GAAG7E,QAAQ,CAACgE,MAAM;QAC9B,IAAI,CAACoF,UAAU,GAAGpJ,QAAQ,CAACoJ,UAAU;MACvC;KACD,CAAC;EACJ;EAEAiO,WAAWA,CAAC5G,KAAU;IACpB,IAAI,IAAI,CAACvT,UAAU,KAAKuT,KAAK,CAACgH,IAAI,EAAE;MAClC,IAAI,CAACva,UAAU,GAAGuT,KAAK,CAACgH,IAAI;MAC5B,IAAI,CAACD,SAAS,EAAE;;EAEpB;EAAC,QAAAxhB,CAAA;qBA3BUqW,cAAc,EAAApW,+DAAA,CAAAI,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAAd8V,cAAc;IAAA7V,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwf,wBAAAtf,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BnC,4DAAA,aAA8B;QACtBA,oDAAA,GAAoE;QAAAA,0DAAA,EAAK;QAGjFA,4DAAA,aAA4B;QAGiCA,wDAAA,2BAAA0hB,wDAAA3D,MAAA;UAAA,OAAA3b,GAAA,CAAAwO,SAAA,GAAAmN,MAAA;QAAA,EAAuB,mBAAA4D,gDAAA;UAAA,OAAUvf,GAAA,CAAAmf,SAAA,EAAW;QAAA,EAArB;QAAuBvhB,oDAAA,qBACvF;QAAAA,0DAAA,EAAS;QACjBA,4DAAA,gBAAiG;QAA9CA,wDAAA,2BAAA4hB,wDAAA7D,MAAA;UAAA,OAAA3b,GAAA,CAAAwO,SAAA,GAAAmN,MAAA;QAAA,EAAuB,mBAAA8D,gDAAA;UAAA,OAAUzf,GAAA,CAAAmf,SAAA,EAAW;QAAA,EAArB;QAAuBvhB,oDAAA,0BACtF;QAAAA,0DAAA,EAAS;QAI5BA,4DAAA,cAAsB;QAClBA,wDAAA,KAAA8hB,8BAAA,iBAEM;QACV9hB,0DAAA,EAAM;QAGVA,wDAAA,KAAA+hB,8BAAA,iBAKM;;;QAzBE/hB,uDAAA,GAAoE;QAApEA,+DAAA,CAAAoC,GAAA,CAAAwO,SAAA,wDAAoE;QAMf5Q,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAoC,GAAA,CAAAwO,SAAA,CAAuB;QAErB5Q,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAoC,GAAA,CAAAwO,SAAA,CAAuB;QAMxC5Q,uDAAA,GAAU;QAAVA,wDAAA,YAAAoC,GAAA,CAAAwM,OAAA,CAAU;QAMZ5O,uDAAA,GAAgB;QAAhBA,wDAAA,SAAAoC,GAAA,CAAA+Q,UAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;ACrBY;;;;;;AAUlE,MAAOmF,cAAc;EAIzBxZ,YAAmBkjB,eAA+B,EAAU7d,MAAc,EAAUJ,MAAqB;IAAtF,KAAAie,eAAe,GAAfA,eAAe;IAA0B,KAAA7d,MAAM,GAANA,MAAM;IAAkB,KAAAJ,MAAM,GAANA,MAAM;IAHhF,KAAAke,WAAW,GAAG,IAAIpJ,uDAAY,EAAE;IAE1C,KAAAhP,KAAK,GAAQ,EAAE;EAGf;EACArK,QAAQA,CAAA;IACN;IACA,IAAI,CAACwiB,eAAe,CAAC5iB,YAAY,GAAG,IAAI,CAAC4iB,eAAe,CAAC5iB,YAAY;EACvE;EAEAwK,KAAKA,CAAA;IACH,IAAI,CAACoY,eAAe,CAACpY,KAAK,CAAC,IAAI,CAACC,KAAK,CAAC,CAACvK,SAAS,CAAC;MAC/CC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAAC4E,MAAM,CAACsB,aAAa,CAAC,UAAU;MAChD;KACD,CAAC;EAEJ;;EAEAyc,MAAMA,CAAA;IACJ,IAAI,CAACD,WAAW,CAACvH,IAAI,CAAC,KAAK,CAAC;EAC9B;EAAC,QAAA3a,CAAA;qBAtBUuY,cAAc,EAAAtY,+DAAA,CAAAI,qEAAA,GAAAJ,+DAAA,CAAA8F,mDAAA,GAAA9F,+DAAA,CAAAqI,qDAAA;EAAA;EAAA,QAAA/H,EAAA;UAAdgY,cAAc;IAAA/X,SAAA;IAAAub,OAAA;MAAAmG,WAAA;IAAA;IAAAngB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkgB,wBAAAhgB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BnC,4DAAA,iBAAkE;QAAxCA,wDAAA,sBAAAoiB,iDAAA;UAAA,OAAYhgB,GAAA,CAAAwH,KAAA,EAAO;QAAA,EAAC;QAE1C5J,4DAAA,YAAqC;QAAAA,oDAAA,YAAK;QAAAA,0DAAA,EAAK;QAC/CA,uDAAA,SAAI;QAEJA,4DAAA,aAAsB;QAEQA,oDAAA,eAAQ;QAAAA,0DAAA,EAAQ;QACtCA,4DAAA,eAC2B;QADJA,wDAAA,2BAAAqiB,uDAAAtE,MAAA;UAAA,OAAA3b,GAAA,CAAAyH,KAAA,CAAAK,QAAA,GAAA6T,MAAA;QAAA,EAA4B;QAAnD/d,0DAAA,EAC2B;QAE/BA,4DAAA,cAA2B;QACDA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAQ;QACtCA,4DAAA,gBAC2B;QADJA,wDAAA,2BAAAsiB,wDAAAvE,MAAA;UAAA,OAAA3b,GAAA,CAAAyH,KAAA,CAAA0Y,QAAA,GAAAxE,MAAA;QAAA,EAA4B;QAAnD/d,0DAAA,EAC2B;QAGnCA,4DAAA,cAAyB;QAC8BA,oDAAA,aAAK;QAAAA,0DAAA,EAAS;QACjEA,4DAAA,kBAAiE;QAAjCA,wDAAA,mBAAAwiB,iDAAA;UAAA,OAASpgB,GAAA,CAAA8f,MAAA,EAAQ;QAAA,EAAC;QAAeliB,oDAAA,cAAM;QAAAA,0DAAA,EAAS;;;QAXrDA,uDAAA,GAA4B;QAA5BA,wDAAA,YAAAoC,GAAA,CAAAyH,KAAA,CAAAK,QAAA,CAA4B;QAK5BlK,uDAAA,GAA4B;QAA5BA,wDAAA,YAAAoC,GAAA,CAAAyH,KAAA,CAAA0Y,QAAA,CAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEb/DviB,4DAAA,aAAmE;IAE3DA,uDAAA,aAAoG;IACpGA,4DAAA,YAAyD;IAEyBA,uDAAA,WAC3C;IAAAA,0DAAA,EAAS;IAEhDA,4DAAA,YAA6B;IACjBA,wDAAA,mBAAAyiB,2DAAA;MAAAziB,2DAAA,CAAA0iB,GAAA;MAAA,MAAA3f,MAAA,GAAA/C,2DAAA;MAAA,OAASA,yDAAA,CAAA+C,MAAA,CAAA4f,UAAA,CAAA5f,MAAA,CAAA2M,MAAA,CAAkB;IAAA,EAAC;IAChC1P,uDAAA,WAA2B;IAC/BA,0DAAA,EAAS;IAETA,4DAAA,aAA6B;IAGrBA,uDAAA,aAA8B;IAClCA,0DAAA,EAAS;IAIrBA,4DAAA,eAA4B;;IAGhBA,uDAAA,aAA+B;IACnCA,0DAAA,EAAO;IACPA,oDAAA,IACJ;IAAAA,0DAAA,EAAK;IACLA,4DAAA,aAA6C;IAAAA,oDAAA,IAAe;IAAAA,0DAAA,EAAI;;;;;IA1B3DA,uDAAA,GAAgD;IAAhDA,mEAAA,QAAAc,MAAA,CAAA4O,MAAA,CAAAkT,QAAA,yBAAA5iB,2DAAA,CAAgD;IAACA,mEAAA,QAAAc,MAAA,CAAA4O,MAAA,CAAA+D,OAAA,CAAwB;IAG9DzT,uDAAA,GAAyC;IAAzCA,oEAAA,4BAAAc,MAAA,CAAA4O,MAAA,CAAAM,QAAA,KAAyC;IAIQhQ,uDAAA,GAAyC;IAAzCA,wDAAA,YAAAA,6DAAA,KAAAkU,GAAA,EAAApT,MAAA,CAAA4O,MAAA,CAAAsT,KAAA,EAAyC;IAK1FhjB,uDAAA,GAAyC;IAAzCA,oEAAA,4BAAAc,MAAA,CAAA4O,MAAA,CAAAM,QAAA,KAAyC;IAAChQ,wDAAA,gBAAAA,6DAAA,KAAAijB,GAAA,EAAiC;IASjFjjB,uDAAA,GAAqF;IAArFA,yDAAA,eAAAkjB,OAAA,GAAAljB,yDAAA,SAAAc,MAAA,CAAAwI,eAAA,CAAAgK,YAAA,oBAAA4P,OAAA,CAAAtjB,QAAA,CAAAkB,MAAA,CAAA4O,MAAA,CAAAM,QAAA,EAAqF;IAG3FhQ,uDAAA,GACJ;IADIA,gEAAA,MAAAc,MAAA,CAAA4O,MAAA,CAAA+D,OAAA,QAAA3S,MAAA,CAAA4O,MAAA,CAAAgK,GAAA,MACJ;IAC6C1Z,uDAAA,GAAe;IAAfA,+DAAA,CAAAc,MAAA,CAAA4O,MAAA,CAAA0T,IAAA,CAAe;;;ADf9D,MAAOpL,mBAAmB;EAG9BlZ,YAAoBiK,aAA6B,EAAUhF,MAAqB,EACvEuF,eAAgC;IADrB,KAAAP,aAAa,GAAbA,aAAa;IAA0B,KAAAhF,MAAM,GAANA,MAAM;IACxD,KAAAuF,eAAe,GAAfA,eAAe;EAAqB;EAC3C9J,QAAQA,CAAA;IACN;EAAA;EAGFmjB,UAAUA,CAACjT,MAAc;IACvB,IAAIA,MAAM,CAACsT,KAAK,EAAE;MAChB,IAAI,CAACtS,UAAU,CAAChB,MAAM,CAAC;KACxB,MACI;MACH,IAAI,CAACe,OAAO,CAACf,MAAM,CAAC;;EAE1B;EAEAe,OAAOA,CAACf,MAAc;IACpB,IAAI,CAAC3G,aAAa,CAAC0H,OAAO,CAACf,MAAM,CAACM,QAAQ,CAAC,CAAC1Q,SAAS,CAAC;MACpDC,IAAI,EAAEA,CAAA,KAAK;QACT;QACA,IAAI,CAACmQ,MAAM,CAACsT,KAAK,GAAG,IAAI;MAC1B;KACD,CAAC;EACJ;EACAtS,UAAUA,CAAChB,MAAc;IACvB,IAAI,CAAC3G,aAAa,CAAC2H,UAAU,CAAChB,MAAM,CAACM,QAAQ,CAAC,CAAC1Q,SAAS,CAAC;MACvDC,IAAI,EAAEA,CAAA,KAAK;QACT;QACA,IAAI,CAACmQ,MAAM,CAACsT,KAAK,GAAG,KAAK;MAC3B;KACD,CAAC;EACJ;EAAC,QAAAjjB,CAAA;qBAjCUiY,mBAAmB,EAAAhY,+DAAA,CAAAI,4EAAA,GAAAJ,+DAAA,CAAA8F,qDAAA,GAAA9F,+DAAA,CAAAqI,8EAAA;EAAA;EAAA,QAAA/H,EAAA;UAAnB0X,mBAAmB;IAAAzX,SAAA;IAAAC,MAAA;MAAAkP,MAAA;IAAA;IAAA5N,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAohB,6BAAAlhB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCbhCnC,wDAAA,IAAAsjB,kCAAA,mBA8BM;;;QA9B8CtjB,wDAAA,SAAAoC,GAAA,CAAAsN,MAAA,CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjB;AAGoB;AACY;AACnC;AAE2C;AAK3D;;;;;;;;;;;;;;;ICNZ1P,4DAAA,cAA4F;IACxFA,uDAAA,YAA8C;IAACA,oDAAA,eACnD;IAAAA,0DAAA,EAAM;;;;;IAGFA,4DAAA,QAA6B;IAAAA,oDAAA,GAC7B;;IAAAA,0DAAA,EAAI;;;;IADyBA,uDAAA,GAC7B;IAD6BA,gEAAA,KAAAA,yDAAA,OAAA0jB,MAAA,CAAAhU,MAAA,CAAAiU,UAAA,OAC7B;;;;;IAHJ3jB,4DAAA,UAAgF;IACpEA,oDAAA,mBAAY;IAAAA,0DAAA,EAAS;IAC7BA,wDAAA,IAAA4jB,wCAAA,eACI;IACR5jB,0DAAA,EAAM;;;;IAFEA,uDAAA,GAAuB;IAAvBA,wDAAA,SAAA+C,MAAA,CAAA2M,MAAA,CAAAiU,UAAA,CAAuB;;;;;;;;;;;IAsB3B3jB,4DAAA,qBAAqI;IAA7BA,wDAAA,mBAAA6jB,iEAAA;MAAA7jB,2DAAA,CAAA8jB,IAAA;MAAA,MAAAC,MAAA,GAAA/jB,2DAAA;MAAA,OAASA,yDAAA,CAAA+jB,MAAA,CAAApB,UAAA,CAAAoB,MAAA,CAAArU,MAAA,CAAkB;IAAA,EAAC;IAAC1P,oDAAA,YAAK;IAAAA,0DAAA,EAAS;;;;IAApFA,wDAAA,YAAAA,6DAAA,IAAAijB,GAAA,EAAAhgB,MAAA,CAAAyM,MAAA,CAAAsT,KAAA,EAAwC;;;;;;IACvGhjB,4DAAA,iBAAkJ;IAA7BA,wDAAA,mBAAAgkB,iEAAA;MAAAhkB,2DAAA,CAAAikB,IAAA;MAAA,MAAAC,OAAA,GAAAlkB,2DAAA;MAAA,OAASA,yDAAA,CAAAkkB,OAAA,CAAAvB,UAAA,CAAAuB,OAAA,CAAAxU,MAAA,CAAkB;IAAA,EAAC;IAAC1P,oDAAA,WAAI;IAAAA,0DAAA,EAAS;;;;IAAnFA,wDAAA,YAAAA,6DAAA,IAAAijB,GAAA,EAAApD,MAAA,CAAAnQ,MAAA,CAAAsT,KAAA,EAAwC;;;;;IAmBxHhjB,uDAAA,kBAAsF;;;;IAArDA,wDAAA,UAAAogB,MAAA,CAAA+D,MAAA,CAAgB;;;AD7B3D,MAAOhO,qBAAqB;EAQhCrX,YAAoBiK,aAA6B,EAAUhF,MAAqB,EAASuF,eAAgC,EAAUzF,KAAqB,EAC9IugB,cAA+B,EAAUnlB,cAA8B;IAD7D,KAAA8J,aAAa,GAAbA,aAAa;IAA0B,KAAAhF,MAAM,GAANA,MAAM;IAAwB,KAAAuF,eAAe,GAAfA,eAAe;IAA2B,KAAAzF,KAAK,GAALA,KAAK;IAC9H,KAAAugB,cAAc,GAAdA,cAAc;IAA2B,KAAAnlB,cAAc,GAAdA,cAAc;IAPjE,KAAAyQ,MAAM,GAAW,EAAY;IAC7B,KAAAyU,MAAM,GAAkB,EAAE;IAE1B,KAAAvS,QAAQ,GAAc,EAAE;IAKtB,IAAI,CAAC3S,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EAAE,IAAI,CAACA,IAAI,GAAGA,IAAI;MAC5B;KACD,CAAC;EACJ;EAEAK,QAAQA,CAAA;IAEN,IAAI,CAACqE,KAAK,CAACuV,IAAI,CAAC9Z,SAAS,CAAC;MACxBC,IAAI,EAAE6Z,IAAI,IAAG;QACX,IAAI,CAAC1J,MAAM,GAAG0J,IAAI,CAAC,CAAC,CAAC,EACnBzT,OAAO,CAACC,GAAG,CAACwT,IAAI,CAAC,CAAC,CAAC,CAAC;MACxB;KAED,CAAC;IAEF,IAAI,CAACvV,KAAK,CAACwgB,WAAW,CAAC/kB,SAAS,CAAC;MAC/BC,IAAI,EAAEgQ,MAAM,IAAG;QACbA,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC+U,SAAS,CAAC/U,MAAM,CAAC,KAAK,CAAC,CAAC;MAChD;KACD,CAAC;IAEF,IAAI,CAACgV,SAAS,EAAE;EAClB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACJ,cAAc,CAACrZ,iBAAiB,EAAE;EACzC;EAEA0Z,YAAYA,CAAA;IACV,IAAI,IAAI,CAAC/U,MAAM,EACb,IAAI,CAAC0U,cAAc,CAAC9R,gBAAgB,CAAC,IAAI,CAAC5C,MAAM,CAACM,QAAQ,CAAC,CAAC1Q,SAAS,CAAC;MACnEC,IAAI,EAAEqS,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA;KACnC,CAAC;EACN;EAEA0S,SAASA,CAACI,OAAe;IACvB,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC7U,IAAI,CAACgC,CAAC,IAAIA,CAAC,CAAC2S,OAAO,KAAKA,OAAO,CAAE,CAACG,MAAM,GAAG,IAAI;;EAExE;EAEAC,cAAcA,CAAC1L,IAAkB;IAC/B,IAAI,CAAC2L,SAAS,GAAG3L,IAAI;IACrB,IAAI,IAAI,CAAC2L,SAAS,CAACL,OAAO,KAAK,UAAU,IAAI,IAAI,CAACvlB,IAAI,EAAE;MACtD,IAAI,CAACilB,cAAc,CAACxZ,mBAAmB,CAAC,IAAI,CAACzL,IAAI,EAAE,IAAI,CAACuQ,MAAM,CAACM,QAAQ,CAAC;KACzE,MAAM;MACL,IAAI,CAACoU,cAAc,CAACrZ,iBAAiB,EAAE;;EAE3C;EAEAwZ,SAASA,CAAA;IACP,IAAI,CAAC,IAAI,CAAC7U,MAAM,EAAE;IAClB,KAAK,MAAMsV,KAAK,IAAI,IAAI,CAACtV,MAAM,EAAEuV,MAAM,EAAE;MACvC,IAAI,CAACd,MAAM,CAAC9e,IAAI,CAAC,IAAIme,iDAAS,CAAC;QAAE0B,GAAG,EAAEF,KAAK,CAACjS,GAAG;QAAEoS,KAAK,EAAEH,KAAK,CAACjS;MAAG,CAAE,CAAC,CAAC;;EAEzE;EAEA4P,UAAUA,CAACjT,MAAc;IACvB,IAAIA,MAAM,CAACsT,KAAK,EAAE;MAChB,IAAI,CAACtS,UAAU,CAAChB,MAAM,CAAC;KACxB,MACI;MACH,IAAI,CAACe,OAAO,CAACf,MAAM,CAAC;;EAExB;EAEAe,OAAOA,CAACf,MAAc;IACpB,IAAI,CAAC3G,aAAa,CAAC0H,OAAO,CAACf,MAAM,CAACM,QAAQ,CAAC,CAAC1Q,SAAS,CAAC;MACpDC,IAAI,EAAEA,CAAA,KAAK;QACT;QACA,IAAI,CAACmQ,MAAM,CAACsT,KAAK,GAAG,IAAI;MAC1B;KACD,CAAC;EACJ;EACAtS,UAAUA,CAAChB,MAAc;IACvB,IAAI,CAAC3G,aAAa,CAAC2H,UAAU,CAAChB,MAAM,CAACM,QAAQ,CAAC,CAAC1Q,SAAS,CAAC;MACvDC,IAAI,EAAEA,CAAA,KAAK;QACT;QACA,IAAI,CAACmQ,MAAM,CAACsT,KAAK,GAAG,KAAK;MAC3B;KACD,CAAC;EACJ;EAAC,QAAAjjB,CAAA;qBA7FUoW,qBAAqB,EAAAnW,+DAAA,CAAAI,4EAAA,GAAAJ,+DAAA,CAAA8F,qDAAA,GAAA9F,+DAAA,CAAAqI,8EAAA,GAAArI,+DAAA,CAAAsI,2DAAA,GAAAtI,+DAAA,CAAAuI,8EAAA,GAAAvI,+DAAA,CAAAwI,4EAAA;EAAA;EAAA,QAAAlI,EAAA;UAArB6V,qBAAqB;IAAA5V,SAAA;IAAAqd,SAAA,WAAAyH,4BAAAljB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;QCxBlCnC,4DAAA,aAAiB;QAGLA,uDAAA,aACiD;QACjDA,4DAAA,aAAuB;QACnBA,wDAAA,IAAAslB,oCAAA,iBAEM;;QACNtlB,wDAAA,IAAAulB,oCAAA,iBAIM;;QACNvlB,4DAAA,UAAK;QACOA,oDAAA,iBAAS;QAAAA,0DAAA,EAAS;QAC1BA,4DAAA,SAAG;QAAAA,oDAAA,IAAmC;QAAAA,0DAAA,EAAI;QAE9CA,4DAAA,WAAK;QACOA,oDAAA,YAAI;QAAAA,0DAAA,EAAS;QACrBA,4DAAA,SAAG;QAAAA,oDAAA,IAAc;QAAAA,0DAAA,EAAI;QAMzBA,4DAAA,WAAK;QACOA,oDAAA,qBAAa;QAAAA,0DAAA,EAAS;QAC9BA,4DAAA,SAAG;QAAAA,oDAAA,IAAuC;;QAAAA,0DAAA,EAAI;QAGtDA,4DAAA,cAAiE;QAEzDA,wDAAA,KAAAwlB,wCAAA,oBAAmJ;QACnJxlB,wDAAA,KAAAylB,wCAAA,qBAA+J;QAC/JzlB,4DAAA,kBAAgE;QAAxDA,wDAAA,mBAAA0lB,wDAAA;UAAA,OAAStjB,GAAA,CAAAkiB,SAAA,CAAU,UAAU,CAAC;QAAA,EAAC;QAAyBtkB,oDAAA,eAAO;QAAAA,0DAAA,EAAS;QAKhGA,4DAAA,eAAmE;QAEnBA,wDAAA,uBAAA2lB,yDAAA5H,MAAA;UAAA,OAAa3b,GAAA,CAAA0iB,cAAA,CAAA/G,MAAA,CAAsB;QAAA,EAAC;QACxE/d,4DAAA,UAAI;QAAAA,oDAAA,mBAAW;QAAAA,0DAAA,EAAK;QACpBA,4DAAA,SAAG;QAAAA,oDAAA,IAAuB;QAAAA,0DAAA,EAAI;QAC9BA,4DAAA,UAAI;QAAAA,oDAAA,mBAAW;QAAAA,0DAAA,EAAK;QACpBA,4DAAA,SAAG;QAAAA,oDAAA,IAAqB;QAAAA,0DAAA,EAAI;QAEhCA,4DAAA,eAA8D;QAArCA,wDAAA,uBAAA4lB,yDAAA7H,MAAA;UAAA,OAAa3b,GAAA,CAAA0iB,cAAA,CAAA/G,MAAA,CAAsB;QAAA,EAAC;QACzD/d,4DAAA,UAAI;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,SAAG;QAAAA,oDAAA,IAAoB;QAAAA,0DAAA,EAAI;QAE/BA,4DAAA,mBAA2E;QAArCA,wDAAA,uBAAA6lB,yDAAA9H,MAAA;UAAA,OAAa3b,GAAA,CAAA0iB,cAAA,CAAA/G,MAAA,CAAsB;QAAA,EAAC;QACtE/d,wDAAA,KAAA8lB,yCAAA,sBAAsF;QAC1F9lB,0DAAA,EAAM;QACNA,4DAAA,eAA6D;QAArCA,wDAAA,uBAAA+lB,yDAAAhI,MAAA;UAAA,OAAa3b,GAAA,CAAA0iB,cAAA,CAAA/G,MAAA,CAAsB;QAAA,EAAC;QACxD/d,uDAAA,+BAAwE;QAC5EA,0DAAA,EAAM;;;;;;QAtDDA,uDAAA,GAA8C;QAA9CA,wDAAA,QAAAoC,GAAA,CAAAsN,MAAA,CAAAkT,QAAA,yBAAA5iB,2DAAA,CAA8C,QAAAoC,GAAA,CAAAsN,MAAA,CAAA+D,OAAA;QAG5BzT,uDAAA,GAAuE;QAAvEA,wDAAA,UAAAgmB,OAAA,GAAAhmB,yDAAA,QAAAoC,GAAA,CAAAkH,eAAA,CAAAgK,YAAA,oBAAA0S,OAAA,CAAApmB,QAAA,CAAAwC,GAAA,CAAAsN,MAAA,CAAAM,QAAA,EAAuE;QAGpFhQ,uDAAA,GAAwE;QAAxEA,wDAAA,YAAAimB,OAAA,GAAAjmB,yDAAA,QAAAoC,GAAA,CAAAkH,eAAA,CAAAgK,YAAA,oBAAA2S,OAAA,CAAArmB,QAAA,CAAAwC,GAAA,CAAAsN,MAAA,CAAAM,QAAA,GAAwE;QAOvEhQ,uDAAA,GAAmC;QAAnCA,gEAAA,KAAAoC,GAAA,CAAAsN,MAAA,CAAA0T,IAAA,QAAAhhB,GAAA,CAAAsN,MAAA,CAAAwW,OAAA,KAAmC;QAInClmB,uDAAA,GAAc;QAAdA,+DAAA,CAAAoC,GAAA,CAAAsN,MAAA,CAAAgK,GAAA,CAAc;QAQd1Z,uDAAA,GAAuC;QAAvCA,+DAAA,CAAAA,yDAAA,SAAAoC,GAAA,CAAAsN,MAAA,CAAA0W,OAAA,iBAAuC;QAK5BpmB,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoC,GAAA,CAAAsN,MAAA,CAAAsT,KAAA,CAAkB;QACvBhjB,uDAAA,GAAqB;QAArBA,wDAAA,UAAAoC,GAAA,CAAAsN,MAAA,CAAAsT,KAAA,CAAqB;QAQjChjB,uDAAA,GAAkC;QAAlCA,oEAAA,sBAAAoC,GAAA,CAAAsN,MAAA,CAAA+D,OAAA,KAAkC;QAEhCzT,uDAAA,GAAuB;QAAvBA,+DAAA,CAAAoC,GAAA,CAAAsN,MAAA,CAAA2W,YAAA,CAAuB;QAEvBrmB,uDAAA,GAAqB;QAArBA,+DAAA,CAAAoC,GAAA,CAAAsN,MAAA,CAAA4W,UAAA,CAAqB;QAIrBtmB,uDAAA,GAAoB;QAApBA,+DAAA,CAAAoC,GAAA,CAAAsN,MAAA,CAAA6W,SAAA,CAAoB;QAGbvmB,uDAAA,GAAqB;QAArBA,wDAAA,SAAAwmB,GAAA,CAAA3B,MAAA,CAAqB;QAGV7kB,uDAAA,GAA4B;QAA5BA,wDAAA,aAAAoC,GAAA,CAAAsN,MAAA,CAAAM,QAAA,CAA4B;;;mBDlCrD3I,0DAAY,EAAAoB,qDAAA,EAAAA,kDAAA,EAAAA,uDAAA,EAAAA,sDAAA,EAAElB,2DAAU,EAAAmB,6DAAA,EAAAA,gEAAA,EAAE6a,qDAAa,EAAA5a,wDAAA,EAAEb,uDAAa,EAAAkf,qDAAA,EAAEvD,+FAAuB;IAAAyD,MAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;AElB/D;;;;;;;;;;;;;ICEpBlnB,4DAAA,cAA0D;IAC3CA,oDAAA,oBAAa;IAAAA,0DAAA,EAAS;IAAAA,oDAAA,8DAAuD;IAAAA,0DAAA,EAAI;;;;;;IAPxGA,4DAAA,aAAgC;IAEpBA,oDAAA,mBAAY;IAAAA,0DAAA,EAAK;IAGzBA,4DAAA,aAA6B;IACzBA,wDAAA,IAAAmnB,wCAAA,iBAEM;IACVnnB,0DAAA,EAAM;IAENA,4DAAA,aAAkC;IAE1BA,uDAAA,aACuC;IACvCA,4DAAA,aAAuB;IAEPA,oDAAA,iBAAS;IAAAA,0DAAA,EAAS;IAC1BA,4DAAA,SAAG;IAAAA,oDAAA,IAAmC;IAAAA,0DAAA,EAAI;IAE9CA,4DAAA,WAAK;IACOA,oDAAA,YAAI;IAAAA,0DAAA,EAAS;IACrBA,4DAAA,SAAG;IAAAA,oDAAA,IAAc;IAAAA,0DAAA,EAAI;IAEzBA,4DAAA,WAAK;IACOA,oDAAA,oBAAY;IAAAA,0DAAA,EAAS;IAC7BA,4DAAA,SAAG;IAAAA,oDAAA,IAA+B;;IAAAA,0DAAA,EAAI;IAE1CA,4DAAA,WAAK;IACOA,oDAAA,qBAAa;IAAAA,0DAAA,EAAS;IAC9BA,4DAAA,SAAG;IAAAA,oDAAA,IAAuC;;IAAAA,0DAAA,EAAI;IAGtDA,4DAAA,cAAyB;IAC6EA,oDAAA,oBACvF;IAAAA,0DAAA,EAAS;IAKhCA,4DAAA,cAA6B;IAGsBA,wDAAA,sBAAAonB,6DAAA;MAAApnB,2DAAA,CAAA4f,GAAA;MAAA,MAAAC,MAAA,GAAA7f,2DAAA;MAAA,OAAYA,yDAAA,CAAA6f,MAAA,CAAA5P,YAAA,EAAc;IAAA,EAAC;IAC9DjQ,4DAAA,cAAiB;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAK;IACjCA,4DAAA,oBACa;IADkBA,wDAAA,2BAAAqnB,sEAAAtJ,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAI,MAAA,GAAAhgB,2DAAA;MAAA,OAAaA,yDAAA,CAAAggB,MAAA,CAAAtQ,MAAA,CAAA2W,YAAA,GAAAtI,MAAA,CAA2B;IAAA,EAAP;IACnD/d,0DAAA,EAAW;IACxBA,4DAAA,cAAiB;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAK;IACjCA,4DAAA,oBACa;IADkBA,wDAAA,2BAAAsnB,sEAAAvJ,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAQ,MAAA,GAAApgB,2DAAA;MAAA,OAAaA,yDAAA,CAAAogB,MAAA,CAAA1Q,MAAA,CAAA4W,UAAA,GAAAvI,MAAA,CAAyB;IAAA,EAAP;IACjD/d,0DAAA,EAAW;IACxBA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,oBAAwF;IAAzDA,wDAAA,2BAAAunB,sEAAAxJ,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAA8D,MAAA,GAAA1jB,2DAAA;MAAA,OAAaA,yDAAA,CAAA0jB,MAAA,CAAAhU,MAAA,CAAA6W,SAAA,GAAAxI,MAAA,CAAwB;IAAA,EAAP;IAA2B/d,0DAAA,EAAW;IACnGA,4DAAA,cAAiB;IAAAA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAK;IACxCA,4DAAA,eAAgD;IAC1BA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAChCA,4DAAA,iBAAmF;IAA5EA,wDAAA,2BAAAwnB,mEAAAzJ,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAY,MAAA,GAAAxgB,2DAAA;MAAA,OAAaA,yDAAA,CAAAwgB,MAAA,CAAA9Q,MAAA,CAAA0T,IAAA,GAAArF,MAAA,CAAmB;IAAA,EAAP;IAAhC/d,0DAAA,EAAmF;IACnFA,4DAAA,iBAAqB;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACtCA,4DAAA,iBAAyF;IAAlFA,wDAAA,2BAAAynB,mEAAA1J,MAAA;MAAA/d,2DAAA,CAAA4f,GAAA;MAAA,MAAAmE,MAAA,GAAA/jB,2DAAA;MAAA,OAAaA,yDAAA,CAAA+jB,MAAA,CAAArU,MAAA,CAAAwW,OAAA,GAAAnI,MAAA,CAAsB;IAAA,EAAP;IAAnC/d,0DAAA,EAAyF;IAIrGA,4DAAA,eAA2B;IACvBA,uDAAA,4BAAuD;IAC3DA,0DAAA,EAAM;;;;;IAzD0BA,uDAAA,GAAoB;IAApBA,wDAAA,SAAA0iB,GAAA,CAAAhe,KAAA,CAAoB;IAO/C1E,uDAAA,GAA8C;IAA9CA,wDAAA,QAAAc,MAAA,CAAA4O,MAAA,CAAAkT,QAAA,yBAAA5iB,2DAAA,CAA8C,QAAAc,MAAA,CAAA4O,MAAA,CAAA+D,OAAA;IAKxCzT,uDAAA,GAAmC;IAAnCA,gEAAA,KAAAc,MAAA,CAAA4O,MAAA,CAAA0T,IAAA,QAAAtiB,MAAA,CAAA4O,MAAA,CAAAwW,OAAA,KAAmC;IAInClmB,uDAAA,GAAc;IAAdA,+DAAA,CAAAc,MAAA,CAAA4O,MAAA,CAAAgK,GAAA,CAAc;IAId1Z,uDAAA,GAA+B;IAA/BA,+DAAA,CAAAA,yDAAA,SAAAc,MAAA,CAAA4O,MAAA,CAAAiU,UAAA,EAA+B;IAI/B3jB,uDAAA,GAAuC;IAAvCA,+DAAA,CAAAA,yDAAA,SAAAc,MAAA,CAAA4O,MAAA,CAAA0W,OAAA,iBAAuC;IAItCpmB,uDAAA,GAA4B;IAA5BA,wDAAA,cAAA0iB,GAAA,CAAAhe,KAAA,CAA4B;IAQnC1E,uDAAA,GAAkC;IAAlCA,oEAAA,sBAAAc,MAAA,CAAA4O,MAAA,CAAA+D,OAAA,KAAkC;IAGAzT,uDAAA,GAAiC;IAAjCA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAA2W,YAAA,CAAiC;IAGjCrmB,uDAAA,GAA+B;IAA/BA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAA4W,UAAA,CAA+B;IAG/BtmB,uDAAA,GAA8B;IAA9BA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAA6W,SAAA,CAA8B;IAIlDvmB,uDAAA,GAAyB;IAAzBA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAA0T,IAAA,CAAyB;IAEzBpjB,uDAAA,GAA4B;IAA5BA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAAwW,OAAA,CAA4B;IAKzBlmB,uDAAA,GAAiB;IAAjBA,wDAAA,WAAAc,MAAA,CAAA4O,MAAA,CAAiB;;;AD/C7C,MAAO+G,mBAAmB;EAEmBiR,kBAAkBA,CAAC3J,MAAW;IAC7E,IAAI,IAAI,CAACtZ,QAAQ,EAAEC,KAAK,EAAE;MACxBqZ,MAAM,CAAC4J,WAAW,GAAG,IAAI;;EAE7B;EAGA;;;EAGA7oB,YAAoBG,cAA8B,EAAU2oB,cAA8B,EAAU7jB,MAAqB;IAArG,KAAA9E,cAAc,GAAdA,cAAc;IAA0B,KAAA2oB,cAAc,GAAdA,cAAc;IAA0B,KAAA7jB,MAAM,GAANA,MAAM;IAJ1G,KAAA5E,IAAI,GAAgB,IAAI;IAKtBF,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MAClDC,IAAI,EAAEJ,IAAI,IAAI,IAAI,CAACA,IAAI,GAAGA;KAC3B,CAAC;EAEJ;EACAK,QAAQA,CAAA;IACN,IAAI,CAACqoB,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAAC,IAAI,CAAC1oB,IAAI,EAAE;IAChB,IAAI,CAACyoB,cAAc,CAAC5e,SAAS,CAAC,IAAI,CAAC7J,IAAI,CAAC+K,QAAQ,CAAC,CAAC5K,SAAS,CAAC;MAC1DC,IAAI,EAAEmQ,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA;KAC/B,CAAC;EACJ;EACAO,YAAYA,CAAA;IACV,IAAI,CAAC2X,cAAc,CAAC3X,YAAY,CAAC,IAAI,CAACxL,QAAQ,EAAEqjB,KAAK,CAAC,CAACxoB,SAAS,CAAC;MAC/DC,IAAI,EAAEQ,CAAC,IAAG;QACR,IAAI,CAACgE,MAAM,CAACgkB,OAAO,CAAC,6BAA6B,CAAC;QAClD,IAAI,CAACtjB,QAAQ,EAAEujB,KAAK,CAAC,IAAI,CAACtY,MAAM,CAAC;MAEnC;KACD,CAAC;EACJ;EAAC,QAAA3P,CAAA;qBApCU0W,mBAAmB,EAAAzW,+DAAA,CAAAI,4EAAA,GAAAJ,+DAAA,CAAA8F,4EAAA,GAAA9F,+DAAA,CAAAqI,qDAAA;EAAA;EAAA,QAAA/H,EAAA;UAAnBmW,mBAAmB;IAAAlW,SAAA;IAAAqd,SAAA,WAAAqK,0BAAA9lB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;iBAAnBC,GAAA,CAAAslB,kBAAA,CAAA3J,MAAA,CAA0B;QAAA,UAAA/d,6DAAA;;;;;;;;QCfvCA,wDAAA,IAAAmoB,kCAAA,mBAkEM;;;QAlEYnoB,wDAAA,SAAAoC,GAAA,CAAAsN,MAAA,CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEoBd1P,4DAAA,iBAAiE;IAC7DA,oDAAA,GACJ;IAAAA,0DAAA,EAAS;;;;IAFiCA,wDAAA,UAAAooB,SAAA,CAAAN,KAAA,CAAsB;IAC5D9nB,uDAAA,GACJ;IADIA,gEAAA,MAAAooB,SAAA,CAAAC,OAAA,MACJ;;;;;IAgBRroB,4DAAA,cAAgD;IAE5CA,uDAAA,0BAAqD;IACzDA,0DAAA,EAAM;;;;IADeA,uDAAA,GAAiB;IAAjBA,wDAAA,WAAAsoB,SAAA,CAAiB;;;;;;IAI1CtoB,4DAAA,cAA2D;IAEnDA,wDAAA,2BAAAuoB,8EAAAxK,MAAA;MAAA/d,2DAAA,CAAAwoB,GAAA;MAAA,MAAA9E,MAAA,GAAA1jB,2DAAA;MAAA,OAAaA,yDAAA,CAAA0jB,MAAA,CAAAvQ,UAAA,CAAA+N,WAAA,GAAAnD,MAAA,CAA8B;IAAA,EAAP,yBAAA0K,4EAAA1K,MAAA;MAAA/d,2DAAA,CAAAwoB,GAAA;MAAA,MAAAzE,MAAA,GAAA/jB,2DAAA;MAAA,OAAgBA,yDAAA,CAAA+jB,MAAA,CAAA3C,WAAA,CAAArD,MAAA,CAAmB;IAAA,EAAnC;IAExC/d,0DAAA,EAAa;;;;IAHDA,uDAAA,GAAsB;IAAtBA,wDAAA,uBAAsB,eAAA0oB,MAAA,CAAAvV,UAAA,CAAAkO,UAAA,kBAAAqH,MAAA,CAAAvV,UAAA,CAAAmO,YAAA,aAAAoH,MAAA,CAAAvV,UAAA,CAAA+N,WAAA;;;;;;IA7C1ClhB,4DAAA,aAA+C;IAMQA,wDAAA,sBAAA2oB,4DAAA;MAAA3oB,2DAAA,CAAA4oB,IAAA;MAAA,MAAAC,OAAA,GAAA7oB,2DAAA;MAAA,OAAYA,yDAAA,CAAA6oB,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IACzE9oB,4DAAA,aAA8B;IACSA,oDAAA,gBAAS;IAAAA,0DAAA,EAAQ;IACpDA,4DAAA,eAAkJ;IAAhCA,wDAAA,2BAAA+oB,kEAAAhL,MAAA;MAAA/d,2DAAA,CAAA4oB,IAAA;MAAA,MAAAI,OAAA,GAAAhpB,2DAAA;MAAA,OAAaA,yDAAA,CAAAgpB,OAAA,CAAAja,UAAA,CAAAhI,MAAA,GAAAgX,MAAA,CACvI;IAAA,EADyJ;IAAjJ/d,0DAAA,EAAkJ;IAGtJA,4DAAA,aAA8B;IACSA,oDAAA,cAAO;IAAAA,0DAAA,EAAQ;IAClDA,4DAAA,gBAAkJ;IAAhCA,wDAAA,2BAAAipB,mEAAAlL,MAAA;MAAA/d,2DAAA,CAAA4oB,IAAA;MAAA,MAAAM,OAAA,GAAAlpB,2DAAA;MAAA,OAAaA,yDAAA,CAAAkpB,OAAA,CAAAna,UAAA,CAAA/H,MAAA,GAAA+W,MAAA,CACvI;IAAA,EADyJ;IAAjJ/d,0DAAA,EAAkJ;IAGtJA,4DAAA,cAA8B;IACSA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IAChDA,4DAAA,iBAAqI;IAAhCA,wDAAA,2BAAAmpB,oEAAApL,MAAA;MAAA/d,2DAAA,CAAA4oB,IAAA;MAAA,MAAAQ,OAAA,GAAAppB,2DAAA;MAAA,OAAaA,yDAAA,CAAAopB,OAAA,CAAAra,UAAA,CAAA3H,MAAA,GAAA2W,MAAA,CAC1H;IAAA,EAD4I;IAChI/d,wDAAA,KAAAqpB,4CAAA,oBAES;IACbrpB,0DAAA,EAAS;IAGbA,4DAAA,kBAAoD;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAS;IAC1EA,4DAAA,kBAAyE;IAAjEA,wDAAA,mBAAAspB,4DAAA;MAAAtpB,2DAAA,CAAA4oB,IAAA;MAAA,MAAAW,OAAA,GAAAvpB,2DAAA;MAAA,OAASA,yDAAA,CAAAupB,OAAA,CAAAC,YAAA,EAAc;IAAA,EAAC;IAAyCxpB,oDAAA,qBAAa;IAAAA,0DAAA,EAAS;IAUnGA,4DAAA,eAAiB;IACbA,wDAAA,KAAAypB,yCAAA,kBAGM;IACVzpB,0DAAA,EAAM;IAENA,wDAAA,KAAA0pB,yCAAA,kBAKM;IACV1pB,0DAAA,EAAM;;;;IAzCwHA,uDAAA,GAA+B;IAA/BA,wDAAA,YAAAc,MAAA,CAAAiO,UAAA,CAAAhI,MAAA,CAA+B;IAK/B/G,uDAAA,GAA+B;IAA/BA,wDAAA,YAAAc,MAAA,CAAAiO,UAAA,CAAA/H,MAAA,CAA+B;IAK5ChH,uDAAA,GAA+B;IAA/BA,wDAAA,YAAAc,MAAA,CAAAiO,UAAA,CAAA3H,MAAA,CAA+B;IACrGpH,uDAAA,GAAa;IAAbA,wDAAA,YAAAc,MAAA,CAAA6oB,UAAA,CAAa;IAkBxB3pB,uDAAA,GAAU;IAAVA,wDAAA,YAAAc,MAAA,CAAA8N,OAAA,CAAU;IAMG5O,uDAAA,GAAgB;IAAhBA,wDAAA,SAAAc,MAAA,CAAAqS,UAAA,CAAgB;;;ADhCvD,MAAO+C,mBAAmB;EAM9BpX,YAAoBiK,aAA6B;IAA7B,KAAAA,aAAa,GAAbA,aAAa;IALjC,KAAA6F,OAAO,GAAa,EAAE;IAGtB,KAAA+a,UAAU,GAAG,CAAC;MAAE7B,KAAK,EAAE,MAAM;MAAEO,OAAO,EAAE;IAAO,CAAE,EAAE;MAAEP,KAAK,EAAE,QAAQ;MAAEO,OAAO,EAAE;IAAS,CAAE,CAAC;IAGzF,IAAI,CAACtZ,UAAU,GAAG,IAAI,CAAChG,aAAa,CAACiG,aAAa,EAAE;EACtD;EAEAxP,QAAQA,CAAA;IACN;IACA,IAAI,CAACspB,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,IAAI,CAAC/Z,UAAU,EAAE;MACnB,IAAI,CAAChG,aAAa,CAACkG,aAAa,CAAC,IAAI,CAACF,UAAU,CAAC;MACjD,IAAI,CAAChG,aAAa,CAACoG,UAAU,CAAC,IAAI,CAACJ,UAAU,CAAC,CAACzP,SAAS,CAAC;QACvDC,IAAI,EAAGwK,QAAmE,IAAI;UAC5E,IAAIA,QAAQ,CAACgE,MAAM,IAAIhE,QAAQ,CAACoJ,UAAU,EAAE;YAC1C,IAAI,CAACvE,OAAO,GAAG7E,QAAQ,CAACgE,MAAM;YAC9B,IAAI,CAACoF,UAAU,GAAGpJ,QAAQ,CAACoJ,UAAU;;QAEzC;OACD,CAAC;;EAEN;EAEAqW,YAAYA,CAAA;IACV,IAAI,CAACza,UAAU,GAAG,IAAI,CAAChG,aAAa,CAACmG,eAAe,EAAE;IACtD,IAAI,CAAC4Z,WAAW,EAAE;EACpB;EAEA1H,WAAWA,CAAC5G,KAAU;IACpB,IAAI,IAAI,CAACzL,UAAU,IAAI,IAAI,CAACA,UAAU,EAAE9H,UAAU,KAAKuT,KAAK,CAACgH,IAAI,EAAE;MACjE,IAAI,CAACzY,aAAa,CAACkG,aAAa,CAAC,IAAI,CAACF,UAAU,CAAC;MACjD,IAAI,CAACA,UAAU,CAAC9H,UAAU,GAAGuT,KAAK,CAACgH,IAAI;MACvC,IAAI,CAACsH,WAAW,EAAE;;EAEtB;EAAC,QAAA/oB,CAAA;qBAxCUmW,mBAAmB,EAAAlW,+DAAA,CAAAI,4EAAA;EAAA;EAAA,QAAAE,EAAA;UAAnB4V,mBAAmB;IAAA3V,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA2nB,6BAAAznB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZhCnC,wDAAA,IAAA6pB,kCAAA,kBAkDM;;;QAlDuB7pB,wDAAA,SAAAoC,GAAA,CAAA2M,UAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;ACAE;AAEM;AACT;;;;;;;;;ICDpC/O,4DAAA,UAAmE;IAC/DA,oDAAA,iEACJ;IAAAA,0DAAA,EAAM;;;;;IAakBA,4DAAA,eAC4C;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAO;;;;;IAC3DA,4DAAA,eAC4C;IAAAA,oDAAA,GACT;;IAAAA,0DAAA,EAAO;;;;IADEA,uDAAA,GACT;IADSA,gEAAA,WAAAA,yDAAA,OAAA8pB,UAAA,CAAA7X,QAAA,OACT;;;;;IAdvDjS,4DAAA,SAAoE;IAGxDA,uDAAA,cACwB;IAC5BA,0DAAA,EAAO;IACPA,4DAAA,cAAuB;IAGiBA,oDAAA,GAAiC;;IAAAA,0DAAA,EAAO;IACpEA,wDAAA,KAAA+pB,kDAAA,mBAC2D;IAC3D/pB,wDAAA,KAAAgqB,kDAAA,mBAE0C;IAC9ChqB,0DAAA,EAAQ;IAEZA,4DAAA,SAAG;IAAAA,oDAAA,IAAmB;IAAAA,0DAAA,EAAI;;;;;IAdEA,uDAAA,GAAuD;IAAvDA,mEAAA,QAAA8pB,UAAA,CAAAG,cAAA,yBAAAjqB,2DAAA,CAAuD;IAM/CA,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAA,yDAAA,OAAA8pB,UAAA,CAAAI,WAAA,EAAiC;IAClClqB,uDAAA,GACc;IADdA,wDAAA,UAAA8pB,UAAA,CAAA7X,QAAA,IAAA6X,UAAA,CAAAK,cAAA,KAAAnK,MAAA,CAAA9V,QAAA,CACc;IACblK,uDAAA,GACa;IADbA,wDAAA,SAAA8pB,UAAA,CAAA7X,QAAA,IAAA6X,UAAA,CAAAK,cAAA,KAAAnK,MAAA,CAAA9V,QAAA,CACa;IAI9ClK,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA8pB,UAAA,CAAAhc,OAAA,CAAmB;;;;;IAlBtC9N,4DAAA,aAA6E;IACzEA,wDAAA,IAAAoqB,0CAAA,kBAoBK;;IACTpqB,0DAAA,EAAK;;;;IArBuBA,uDAAA,GAA0C;IAA1CA,wDAAA,YAAAA,yDAAA,OAAAiD,MAAA,CAAAmhB,cAAA,CAAAnT,cAAA,EAA0C;;;;;IA+BjDjR,uDAAA,YAAqD;;;ADxB5E,MAAOyjB,uBAAuB;EAMlC3kB,YAAmBslB,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;IAHjC,KAAAiG,cAAc,GAAG,EAAE;IACnB,KAAAC,OAAO,GAAG,KAAK;EAEuC;EAEtD9qB,QAAQA,CAAA,GACR;EAEA+S,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACrI,QAAQ,EAAE;IACpB,IAAI,CAACogB,OAAO,GAAG,IAAI;IACnB,IAAI,CAAClG,cAAc,CAAC7R,WAAW,CAAC,IAAI,CAACrI,QAAQ,EAAE,IAAI,CAACmgB,cAAc,CAAC,CAACE,IAAI,CAAC,MAAK;MAC5E,IAAI,CAACC,WAAW,EAAExC,KAAK,EAAE;IAC3B,CAAC,CAAC,CAACtW,OAAO,CAAC,MAAM,IAAI,CAAC4Y,OAAO,GAAG,KAAK,CAAC;EACxC;EAAC,QAAAvqB,CAAA;qBAjBU0jB,uBAAuB,EAAAzjB,+DAAA,CAAAI,uEAAA;EAAA;EAAA,QAAAE,EAAA;UAAvBmjB,uBAAuB;IAAAljB,SAAA;IAAAqd,SAAA,WAAA6M,8BAAAtoB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;QCdpCnC,4DAAA,aAA0D;QAElDA,wDAAA,IAAA0qB,sCAAA,iBAEM;;QAEN1qB,wDAAA,IAAA2qB,qCAAA,gBAsBK;;QACT3qB,0DAAA,EAAM;QAENA,4DAAA,aAAyB;QACOA,wDAAA,sBAAA4qB,0DAAA;UAAA,OAAYxoB,GAAA,CAAAmQ,WAAA,EAAa;QAAA,EAAC;QAClDvS,4DAAA,cAAyB;QACiBA,wDAAA,2BAAA6qB,iEAAA9M,MAAA;UAAA,OAAA3b,GAAA,CAAAioB,cAAA,GAAAtM,MAAA;QAAA,EAA4B;QAAlE/d,0DAAA,EACuE;QACvEA,4DAAA,eAAgC;QAExBA,oDAAA,cAAK;QAAAA,wDAAA,KAAA8qB,qCAAA,gBAAqD;QAC9D9qB,0DAAA,EAAS;;;;;;QAtCiDA,uDAAA,GAAmC;QAAnCA,wDAAA,cAAA+qB,GAAA,CAAAC,YAAA,CAAmC;QACnGhrB,uDAAA,GAA2D;QAA3DA,wDAAA,WAAAirB,OAAA,GAAAjrB,yDAAA,OAAAoC,GAAA,CAAAgiB,cAAA,CAAAnT,cAAA,oBAAAga,OAAA,CAAAvL,MAAA,QAA2D;QAI5D1f,uDAAA,GAAyD;QAAzDA,wDAAA,SAAAA,yDAAA,OAAAoC,GAAA,CAAAgiB,cAAA,CAAAnT,cAAA,EAAAyO,MAAA,KAAyD;QA4BhB1f,uDAAA,GAA4B;QAA5BA,wDAAA,YAAAoC,GAAA,CAAAioB,cAAA,CAA4B;QAGtDrqB,uDAAA,GAA0C;QAA1CA,wDAAA,cAAA2U,GAAA,CAAAuW,KAAA,IAAA9oB,GAAA,CAAAkoB,OAAA,CAA0C;QACrCtqB,uDAAA,GAAa;QAAbA,wDAAA,SAAAoC,GAAA,CAAAkoB,OAAA,CAAa;;;mBD1BlCjjB,yDAAY,EAAAvB,oDAAA,EAAAA,iDAAA,EAAAA,sDAAA,EAAEgC,sDAAa,EAAAO,oDAAA,EAAEwP,uDAAW,EAAAvP,4DAAA,EAAAA,gEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,6DAAA,EAAAA,mDAAA,EAAAA,kDAAA;IAAA4e,MAAA;IAAAyE,eAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;AEVL;AACnB;AAM+B;;;;;;;;;;ICRvD3rB,4DAAA,cAA4D;IACxDA,uDAAA,cAAwE;IACxEA,4DAAA,cAAyB;IACgCA,wDAAA,mBAAA6rB,kEAAA;MAAA,MAAApX,WAAA,GAAAzU,2DAAA,CAAAwmB,GAAA;MAAA,MAAAsF,QAAA,GAAArX,WAAA,CAAAI,SAAA;MAAA,MAAA6T,MAAA,GAAA1oB,2DAAA;MAAA,OAASA,yDAAA,CAAA0oB,MAAA,CAAArY,YAAA,CAAAyb,QAAA,CAAmB;IAAA,EAAC;IAE9E9rB,oDAAA,aACJ;IAAAA,0DAAA,EAAS;IACTA,4DAAA,iBAAgG;IAA9DA,wDAAA,mBAAA+rB,kEAAA;MAAA,MAAAtX,WAAA,GAAAzU,2DAAA,CAAAwmB,GAAA;MAAA,MAAAsF,QAAA,GAAArX,WAAA,CAAAI,SAAA;MAAA,MAAAuL,MAAA,GAAApgB,2DAAA;MAAA,OAASA,yDAAA,CAAAogB,MAAA,CAAA7P,WAAA,CAAAub,QAAA,CAAAjZ,EAAA,CAAqB;IAAA,EAAC;IAA+B7S,uDAAA,YAChE;IAAAA,0DAAA,EAAS;;;;IAPxCA,uDAAA,GAAmB;IAAnBA,mEAAA,QAAA8rB,QAAA,CAAA/Y,GAAA,EAAA/S,2DAAA,CAAmB;IAEOA,uDAAA,GAAyB;IAAzBA,wDAAA,aAAA8rB,QAAA,CAAAE,MAAA,CAAyB,YAAAF,QAAA,CAAAE,MAAA;IAI5ChsB,uDAAA,GAAyB;IAAzBA,wDAAA,aAAA8rB,QAAA,CAAAE,MAAA,CAAyB;;;;;IAR7ChsB,4DAAA,aAAgC;IAC5BA,wDAAA,IAAAisB,yCAAA,iBAUM;IACVjsB,0DAAA,EAAM;;;;IAXwCA,uDAAA,GAAgB;IAAhBA,wDAAA,YAAAc,MAAA,CAAA4O,MAAA,CAAAuV,MAAA,CAAgB;;;;;IA+C1CjlB,4DAAA,aAA8C;IAAAA,oDAAA,GAAiD;;IAAAA,0DAAA,EAAK;;;;IAAtDA,uDAAA,GAAiD;IAAjDA,gEAAA,KAAAA,yDAAA,QAAAksB,OAAA,kBAAAA,OAAA,CAAAC,IAAA,kBAAAD,OAAA,CAAAC,IAAA,CAAAlf,IAAA,8BAAiD;;;;;IAFnGjN,4DAAA,SAAyC;IACzBA,oDAAA,GAAsB;IAAAA,0DAAA,EAAS;IAC3CA,wDAAA,IAAAosB,+CAAA,iBAAoG;IACxGpsB,0DAAA,EAAK;;;;;IAFWA,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAksB,OAAA,kBAAAA,OAAA,CAAAC,IAAA,kBAAAD,OAAA,CAAAC,IAAA,CAAAE,IAAA,CAAsB;IAC7BrsB,uDAAA,GAAgC;IAAhCA,wDAAA,SAAA0jB,MAAA,CAAA4I,QAAA,kBAAA5I,MAAA,CAAA4I,QAAA,CAAAlS,OAAA,kBAAAsJ,MAAA,CAAA4I,QAAA,CAAAlS,OAAA,CAAAmS,OAAA,CAAgC;;;;;;;;;;;IAfrDvsB,4DAAA,cAAkF;IAE1EA,oDAAA,mBAAY;IAAAA,0DAAA,EAAK;IACrBA,4DAAA,QAAG;IAAAA,oDAAA,GAA2C;IAAAA,0DAAA,EAAI;IAElDA,4DAAA,gBAAqB;IAGOA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,UAAI;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAK;IAGrBA,4DAAA,aAAO;IACHA,wDAAA,KAAAwsB,0CAAA,iBAGK;IACTxsB,0DAAA,EAAQ;IAGZA,4DAAA,WAAK;IAEGA,oDAAA,yBACA;IAAAA,4DAAA,eAAsB;IAClBA,uDAAA,eACM;IACVA,0DAAA,EAAM;IAEVA,4DAAA,kBAC0D;IADNA,wDAAA,mBAAAysB,8DAAA;MAAAzsB,2DAAA,CAAAikB,IAAA;MAAA,MAAAC,OAAA,GAAAlkB,2DAAA;MAAA,OAAAA,yDAAA,CAAAkkB,OAAA,CAAAoI,QAAA,kBAASpI,OAAA,CAAAoI,QAAA,CAAAI,SAAA,EAAqB;IAAA,EAAC;IAE/E1sB,uDAAA,gBAAkC;IAACA,oDAAA,oBACvC;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBACwC;IADYA,wDAAA,mBAAA2sB,8DAAA;MAAA3sB,2DAAA,CAAAikB,IAAA;MAAA,MAAAiF,OAAA,GAAAlpB,2DAAA;MAAA,OAAAA,yDAAA,CAAAkpB,OAAA,CAAAoD,QAAA,kBAASpD,OAAA,CAAAoD,QAAA,CAAAM,SAAA,EAAqB;IAAA,EAAC;IAE/E5sB,uDAAA,gBAA+B;IAACA,oDAAA,oBACpC;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAC0C;IADSA,wDAAA,mBAAA6sB,8DAAA;MAAA7sB,2DAAA,CAAAikB,IAAA;MAAA,MAAAmF,OAAA,GAAAppB,2DAAA;MAAA,OAAAA,yDAAA,CAAAopB,OAAA,CAAAkD,QAAA,kBAASlD,OAAA,CAAAkD,QAAA,CAAAQ,UAAA,EAAsB;IAAA,EAAC;IAE/E9sB,uDAAA,gBAAiC;IAACA,oDAAA,oBACtC;IAAAA,0DAAA,EAAS;;;;;IApCVA,uDAAA,GAA2C;IAA3CA,gEAAA,mBAAA+C,MAAA,CAAAupB,QAAA,kBAAAvpB,MAAA,CAAAupB,QAAA,CAAAS,KAAA,kBAAAhqB,MAAA,CAAAupB,QAAA,CAAAS,KAAA,CAAArN,MAAA,KAA2C;IAUjB1f,uDAAA,GAAkB;IAAlBA,wDAAA,YAAA+C,MAAA,CAAAupB,QAAA,kBAAAvpB,MAAA,CAAAupB,QAAA,CAAAS,KAAA,CAAkB;IAWU/sB,uDAAA,GAAiD;IAAjDA,wDAAA,YAAAA,6DAAA,IAAAkU,GAAA,GAAAnR,MAAA,CAAAupB,QAAA,kBAAAvpB,MAAA,CAAAupB,QAAA,CAAAU,QAAA,SAAiD;IAKlGhtB,uDAAA,GAAqD;IAArDA,wDAAA,eAAA+C,MAAA,CAAAupB,QAAA,mBAAArG,OAAA,GAAAljB,MAAA,CAAAupB,QAAA,CAAAW,mBAAA,qBAAAhH,OAAA,CAAAvG,MAAA,EAAqD;IAIrD1f,uDAAA,GAAmC;IAAnCA,wDAAA,eAAA+C,MAAA,CAAAupB,QAAA,kBAAAvpB,MAAA,CAAAupB,QAAA,CAAAY,WAAA,EAAmC;IAInCltB,uDAAA,GAAqC;IAArCA,wDAAA,eAAA+C,MAAA,CAAAupB,QAAA,kBAAAvpB,MAAA,CAAAupB,QAAA,CAAAS,KAAA,kBAAAhqB,MAAA,CAAAupB,QAAA,CAAAS,KAAA,CAAArN,MAAA,EAAqC;;;;;;;;ADtD/C,MAAOzH,oBAAoB;EAO/BnZ,YAAoBG,cAA8B,EAAU8J,aAA6B,EAAU5E,MAAc;IAA7F,KAAAlF,cAAc,GAAdA,cAAc;IAA0B,KAAA8J,aAAa,GAAbA,aAAa;IAA0B,KAAA5E,MAAM,GAANA,MAAM;IAJzG,KAAAgpB,mBAAmB,GAAG,KAAK;IAC3B,KAAA5jB,OAAO,GAAGH,qEAAW,CAACI,MAAM;IAI1B,IAAI,CAACvK,cAAc,CAACG,YAAY,CAACC,IAAI,CAACT,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACU,SAAS,CAAC;MACvDC,IAAI,EAAEJ,IAAI,IAAG;QACX,IAAIA,IAAI,EAAE,IAAI,CAACA,IAAI,GAAGA,IAAI;MAC5B;KACD,CAAC;EAEJ;EACAK,QAAQA,CAAA;IACN,IAAI,CAAC4tB,iBAAiB,EAAE;EAC1B;EACAC,YAAYA,CAACC,CAAM;IACjB,IAAI,CAACH,mBAAmB,GAAGG,CAAC;EAC9B;EAGAjd,YAAYA,CAAC2U,KAAY;IACvB,IAAI,CAACjc,aAAa,CAACsH,YAAY,CAAC2U,KAAK,CAACnS,EAAE,CAAC,CAACvT,SAAS,CAAC;MAClDC,IAAI,EAAEQ,CAAC,IAAG;QACR,IAAI,IAAI,CAACZ,IAAI,IAAI,IAAI,CAACuQ,MAAM,EAAE;UAC5B,IAAI,CAACvQ,IAAI,CAACyjB,QAAQ,GAAGoC,KAAK,CAACjS,GAAG;UAC9B,IAAI,CAAC9T,cAAc,CAAC+K,cAAc,CAAC,IAAI,CAAC7K,IAAI,CAAC;UAC7C,IAAI,CAACuQ,MAAM,CAACkT,QAAQ,GAAGoC,KAAK,CAACjS,GAAG;UAChC,IAAI,CAACrD,MAAM,CAACuV,MAAM,CAACjT,OAAO,CAACub,CAAC,IAAG;YAC7B,IAAIA,CAAC,CAACvB,MAAM,EAAEuB,CAAC,CAACvB,MAAM,GAAG,KAAK;YAC9B,IAAIuB,CAAC,CAAC1a,EAAE,KAAKmS,KAAK,CAACnS,EAAE,EAAE0a,CAAC,CAACvB,MAAM,GAAG,IAAI;UACxC,CAAC,CAAC;UACF,IAAI,CAAC7nB,MAAM,CAACsB,aAAa,CAAC,cAAc,CAAC;;MAG7C;KACD,CAAC;EACJ;EAEA8K,WAAWA,CAACD,OAAe;IACzB,IAAI,CAACvH,aAAa,CAACwH,WAAW,CAACD,OAAO,CAAC,CAAChR,SAAS,CAAC;MAChDC,IAAI,EAAEQ,CAAC,IAAG;QACR,IAAI,IAAI,CAAC2P,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACuV,MAAM,GAAG,IAAI,CAACvV,MAAM,EAAEuV,MAAM,CAACzR,MAAM,CAACzB,CAAC,IAAIA,CAAC,CAACc,EAAE,KAAKvC,OAAO,CAAC;;MAE1E;KACD,CAAC;EACJ;EAKA8c,iBAAiBA,CAAA;IACf,IAAI,CAACd,QAAQ,GAAG,IAAIV,yDAAY,CAAC;MAC/B7Y,GAAG,EAAE,IAAI,CAACxJ,OAAO,GAAG,iBAAiB;MACrCikB,SAAS,EAAE,SAAS,GAAG,IAAI,CAACruB,IAAI,EAAEkH,KAAK;MACvCkmB,OAAO,EAAE,IAAI;MACbkB,eAAe,EAAE,CAAC,OAAO,CAAC;MAC1BC,iBAAiB,EAAE,IAAI;MACvBC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,EAAE,GAAG,IAAI,GAAG;KAC1B,CAAC;IAEF,IAAI,CAACtB,QAAQ,CAACuB,iBAAiB,GAAI1B,IAAI,IAAI;MACzCA,IAAI,CAAC2B,eAAe,GAAG,KAAK;IAC9B,CAAC;IAED,IAAI,CAACxB,QAAQ,CAACyB,aAAa,GAAG,CAACC,IAAI,EAAEjkB,QAAQ,EAAE7E,MAAM,EAAEkO,OAAO,KAAI;MAChE,IAAIrJ,QAAQ,EAAE;QACZ,MAAMib,KAAK,GAAGta,IAAI,CAACM,KAAK,CAACjB,QAAQ,CAAC;QAClC,IAAI,CAAC2F,MAAM,EAAEuV,MAAM,CAAC5f,IAAI,CAAC2f,KAAK,CAAC;;IAEnC,CAAC;EACH;EAAC,QAAAjlB,CAAA;qBA3EUkY,oBAAoB,EAAAjY,+DAAA,CAAAI,4EAAA,GAAAJ,+DAAA,CAAA8F,4EAAA,GAAA9F,+DAAA,CAAAqI,mDAAA;EAAA;EAAA,QAAA/H,EAAA;UAApB2X,oBAAoB;IAAA1X,SAAA;IAAAC,MAAA;MAAAkP,MAAA;IAAA;IAAA5N,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgsB,8BAAA9rB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBjCnC,wDAAA,IAAAkuB,mCAAA,iBAYM;QAENluB,4DAAA,aAAsB;QAIVA,oDAAA,iBAAU;QAAAA,0DAAA,EAAK;QAEnBA,4DAAA,aACkF;QADdA,wDAAA,sBAAAmuB,sDAAApQ,MAAA;UAAA,OAAY3b,GAAA,CAAAirB,YAAA,CAAAtP,MAAA,CAAoB;QAAA,EAAC;QAEjG/d,uDAAA,WAAkC;QAClCA,oDAAA,yBACJ;QAAAA,0DAAA,EAAM;QAENA,oDAAA,iBACA;QAAAA,uDAAA,eAAkE;QAElEA,oDAAA,gBACA;QAAAA,uDAAA,gBAAyD;QAC7DA,0DAAA,EAAM;QAENA,wDAAA,KAAAouB,oCAAA,kBA0CM;QAEVpuB,0DAAA,EAAM;;;QA7EYA,wDAAA,SAAAoC,GAAA,CAAAsN,MAAA,CAAY;QAoBL1P,uDAAA,GAAkD;QAAlDA,wDAAA,YAAAA,6DAAA,IAAAijB,GAAA,EAAA7gB,GAAA,CAAA+qB,mBAAA,EAAkD,aAAA/qB,GAAA,CAAAkqB,QAAA;QAOlCtsB,uDAAA,GAAqB;QAArBA,wDAAA,aAAAoC,GAAA,CAAAkqB,QAAA,CAAqB;QAGrBtsB,uDAAA,GAAqB;QAArBA,wDAAA,aAAAoC,GAAA,CAAAkqB,QAAA,CAAqB;QAGPtsB,uDAAA,GAA6B;QAA7BA,wDAAA,SAAAoC,GAAA,CAAAkqB,QAAA,kBAAAlqB,GAAA,CAAAkqB,QAAA,CAAAS,KAAA,kBAAA3qB,GAAA,CAAAkqB,QAAA,CAAAS,KAAA,CAAArN,MAAA,CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEnBpF1f,4DAAA,cAA4D;IACpDA,oDAAA,kBAAW;IAAAA,0DAAA,EAAK;;;;;IAmBJA,4DAAA,UAA+C;IAC3CA,uDAAA,cACqF;IACrFA,4DAAA,aAAQ;IAAAA,oDAAA,GAAyC;;IAAAA,0DAAA,EAAS;;;;IADtDA,uDAAA,GAA0D;IAA1DA,mEAAA,QAAAquB,UAAA,CAAAC,iBAAA,yBAAAtuB,2DAAA,CAA0D;IACtDA,uDAAA,GAAyC;IAAzCA,+DAAA,CAAAA,yDAAA,OAAAquB,UAAA,CAAA1b,iBAAA,EAAyC;;;;;IAGjD3S,uDAAA,cAC+E;IAC/EA,4DAAA,aAAQ;IAAAA,oDAAA,GAAsC;;IAAAA,0DAAA,EAAS;;;;IADnDA,mEAAA,QAAAquB,UAAA,CAAApE,cAAA,yBAAAjqB,2DAAA,CAAuD;IACnDA,uDAAA,GAAsC;IAAtCA,+DAAA,CAAAA,yDAAA,OAAAquB,UAAA,CAAAlE,cAAA,EAAsC;;;;;;;;;;;IAb1DnqB,4DAAA,aAEsC;IAC9BA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,SAAI;IACAA,wDAAA,IAAAuuB,6CAAA,kBAIM;IACNvuB,wDAAA,IAAAwuB,qDAAA,iCAAAxuB,oEAAA,CAIc;IAClBA,0DAAA,EAAK;IACLA,4DAAA,SAAI;IAAAA,oDAAA,GAAiC;;IAAAA,0DAAA,EAAK;IAC1CA,4DAAA,UAAI;IACQA,wDAAA,mBAAA0uB,iEAAA3Q,MAAA;MAAA,OAASA,MAAA,CAAA4Q,eAAA,EAAwB;IAAA,EAAC,mBAAAD,iEAAA;MAAA,MAAAja,WAAA,GAAAzU,2DAAA,CAAAikB,IAAA;MAAA,MAAAoK,UAAA,GAAA5Z,WAAA,CAAAI,SAAA;MAAA,MAAAqP,OAAA,GAAAlkB,2DAAA;MAAA,OAAUA,yDAAA,CAAAkkB,OAAA,CAAAtR,aAAA,CAAAyb,UAAA,CAAAxb,EAAA,CAAyB;IAAA,EAAnC;IACf7S,oDAAA,cAAM;IAAAA,0DAAA,EAAS;;;;;;IAlB9CA,mEAAA,eAAA6f,MAAA,CAAAxN,SAAA,8BAAAgc,UAAA,CAAA1b,iBAAA,iBAAA0b,UAAA,CAAAlE,cAAA,CAAwH;IADxHnqB,wDAAA,WAAA6f,MAAA,CAAAyK,OAAA,CAAkB,gBAAAtqB,6DAAA,IAAAkU,GAAA;IAGdlU,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAquB,UAAA,CAAAvgB,OAAA,CAAmB;IAEb9N,uDAAA,GAA6B;IAA7BA,wDAAA,SAAA6f,MAAA,CAAAxN,SAAA,cAA6B,aAAAuc,GAAA;IAWnC5uB,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAA,yDAAA,OAAAquB,UAAA,CAAAnE,WAAA,EAAiC;;;;;IA3BrDlqB,4DAAA,cAAmG;IAI5DA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;IACnCA,4DAAA,aAAuB;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAK;IACrCA,4DAAA,aAAuB;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAK;IAC3CA,uDAAA,cAA4B;IAChCA,0DAAA,EAAK;IAETA,4DAAA,iBAA4B;IACxBA,wDAAA,KAAA6uB,uCAAA,mBAqBK;IACT7uB,0DAAA,EAAQ;;;;IAtBuCA,uDAAA,IAAW;IAAXA,wDAAA,YAAA+C,MAAA,CAAA6O,QAAA,CAAW;;;;;;IA0BlE5R,4DAAA,cAA0G;IAElGA,wDAAA,2BAAA8uB,sEAAA/Q,MAAA;MAAA/d,2DAAA,CAAA+uB,IAAA;MAAA,MAAA7F,OAAA,GAAAlpB,2DAAA;MAAA,OAAaA,yDAAA,CAAAkpB,OAAA,CAAA/V,UAAA,CAAA+N,WAAA,GAAAnD,MAAA,CAA8B;IAAA,EAAP,yBAAAiR,oEAAAjR,MAAA;MAAA/d,2DAAA,CAAA+uB,IAAA;MAAA,MAAAxF,OAAA,GAAAvpB,2DAAA;MAAA,OAAgBA,yDAAA,CAAAupB,OAAA,CAAAnI,WAAA,CAAArD,MAAA,CAAmB;IAAA,EAAnC;IAExC/d,0DAAA,EAAa;;;;IAHDA,uDAAA,GAAsB;IAAtBA,wDAAA,uBAAsB,eAAAiD,MAAA,CAAAkQ,UAAA,CAAAkO,UAAA,kBAAApe,MAAA,CAAAkQ,UAAA,CAAAmO,YAAA,aAAAre,MAAA,CAAAkQ,UAAA,CAAA+N,WAAA;;;AD9ChC,MAAO7K,iBAAiB;EAQ5BvX,YAAoBslB,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;IAPlC,KAAAxS,QAAQ,GAAe,EAAE;IAEzB,KAAAS,SAAS,GAAG,QAAQ;IACpB,KAAApL,UAAU,GAAG,CAAC;IACd,KAAAC,QAAQ,GAAG,CAAC;IACZ,KAAAojB,OAAO,GAAG,KAAK;EAEwC;EAEvD9qB,QAAQA,CAAA;IACN,IAAI,CAACilB,YAAY,EAAE;IACnB9e,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B;EAEA6e,YAAYA,CAAA;IACV,IAAI,CAAC6F,OAAO,GAAG,IAAI;IACnB,IAAI,CAAClG,cAAc,CAAChS,WAAW,CAAC,IAAI,CAACnL,UAAU,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACmL,SAAS,CAAC,CAAC/S,SAAS,CAAC;MACxFC,IAAI,EAAEwK,QAAQ,IAAG;QACf,IAAI,CAAC6H,QAAQ,GAAG7H,QAAQ,CAACgE,MAAM;QAC/B,IAAI,CAACoF,UAAU,GAAGpJ,QAAQ,CAACoJ,UAAU;QACrC,IAAI,CAACmX,OAAO,GAAG,KAAK;QACpB3kB,OAAO,CAACC,GAAG,CAACmE,QAAQ,CAACgE,MAAM,CAAC;MAC9B;KACD,CAAC;EACJ;EAEA6E,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACuR,cAAc,CAACxR,aAAa,CAACC,EAAE,CAAC,CAACvT,SAAS,CAAC;MAC9CC,IAAI,EAAEQ,CAAC,IAAI,IAAI,CAAC6R,QAAQ,EAAEqd,MAAM,CAAC,IAAI,CAACrd,QAAQ,CAACsd,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACtc,EAAE,KAAKA,EAAE,CAAC,EAAE,CAAC;KAC9E,CAAC;EACJ;EAEAuO,WAAWA,CAAC5G,KAAU;IACpB,IAAI,IAAI,CAACvT,UAAU,KAAKuT,KAAK,CAACgH,IAAI,EAAE;MAClC,IAAI,CAACva,UAAU,GAAGuT,KAAK,CAACgH,IAAI;MAC5B,IAAI,CAACiD,YAAY,EAAE;;EAEvB;EAAC,QAAA1kB,CAAA;qBAtCUsW,iBAAiB,EAAArW,+DAAA,CAAAI,uEAAA;EAAA;EAAA,QAAAE,EAAA;UAAjB+V,iBAAiB;IAAA9V,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAmtB,2BAAAjtB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9BnC,4DAAA,aAA2B;QAE+BA,wDAAA,2BAAAqvB,2DAAAtR,MAAA;UAAA,OAAA3b,GAAA,CAAAiQ,SAAA,GAAA0L,MAAA;QAAA,EAAuB,mBAAAuR,mDAAA;UAAA,OAAUltB,GAAA,CAAAqiB,YAAA,EAAc;QAAA,EAAxB;QACrEzkB,uDAAA,WAA8B;QAACA,oDAAA,eACnC;QAAAA,0DAAA,EAAS;QACTA,4DAAA,gBAAkG;QAAjDA,wDAAA,2BAAAuvB,2DAAAxR,MAAA;UAAA,OAAA3b,GAAA,CAAAiQ,SAAA,GAAA0L,MAAA;QAAA,EAAuB,mBAAAyR,mDAAA;UAAA,OAAUptB,GAAA,CAAAqiB,YAAA,EAAc;QAAA,EAAxB;QACpEzkB,uDAAA,WAAmC;QAACA,oDAAA,cACxC;QAAAA,0DAAA,EAAS;QACTA,4DAAA,gBAAmG;QAAjDA,wDAAA,2BAAAyvB,2DAAA1R,MAAA;UAAA,OAAA3b,GAAA,CAAAiQ,SAAA,GAAA0L,MAAA;QAAA,EAAuB,mBAAA2R,mDAAA;UAAA,OAAUttB,GAAA,CAAAqiB,YAAA,EAAc;QAAA,EAAxB;QACrEzkB,uDAAA,WAAiC;QAACA,oDAAA,gBACtC;QAAAA,0DAAA,EAAS;QAIjBA,wDAAA,KAAA2vB,iCAAA,iBAEM;QAEN3vB,wDAAA,KAAA4vB,iCAAA,kBAmCM;QAEN5vB,wDAAA,KAAA6vB,iCAAA,kBAKM;;;QA1DoD7vB,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAoC,GAAA,CAAAiQ,SAAA,CAAuB;QAGxBrS,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAoC,GAAA,CAAAiQ,SAAA,CAAuB;QAGtBrS,uDAAA,GAAuB;QAAvBA,wDAAA,YAAAoC,GAAA,CAAAiQ,SAAA,CAAuB;QAM/DrS,uDAAA,GAAwC;QAAxCA,wDAAA,UAAAoC,GAAA,CAAAwP,QAAA,IAAAxP,GAAA,CAAAwP,QAAA,CAAA8N,MAAA,OAAwC;QAIA1f,uDAAA,GAAuC;QAAvCA,wDAAA,SAAAoC,GAAA,CAAAwP,QAAA,IAAAxP,GAAA,CAAAwP,QAAA,CAAA8N,MAAA,OAAuC;QAqCxD1f,uDAAA,GAA+D;QAA/DA,wDAAA,UAAAoC,GAAA,CAAAkoB,OAAA,IAAAloB,GAAA,CAAA+Q,UAAA,IAAA/Q,GAAA,CAAAwP,QAAA,IAAAxP,GAAA,CAAAwP,QAAA,CAAA8N,MAAA,KAA+D;;;;;;;;;;;;;;;;;;;;;;;;AC/ClG,MAAOtS,sBAAsB;EAOjCtO,YAAmBuW,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAN7B,KAAA/H,KAAK,GAAG,EAAE;IACV,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,SAAS,GAAG,EAAE;IACd,KAAAC,aAAa,GAAG,EAAE;IAClB,KAAAM,MAAM,GAAG,KAAK;EAE+B;EAE7CpJ,OAAOA,CAAA;IACL,IAAI,CAACoJ,MAAM,GAAG,IAAI;IAClB,IAAI,CAACsH,UAAU,CAACnI,IAAI,EAAE;EACxB;EAEA4iB,OAAOA,CAAA;IACL,IAAI,CAACza,UAAU,CAACnI,IAAI,EAAE;EACxB;EAAC,QAAAnN,CAAA;qBAhBUqN,sBAAsB,EAAApN,+DAAA,CAAAI,2DAAA;EAAA;EAAA,QAAAE,EAAA;UAAtB8M,sBAAsB;IAAA7M,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA8tB,gCAAA5tB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRnCnC,4DAAA,aAA0B;QACYA,oDAAA,GAAS;QAAAA,0DAAA,EAAK;QAEpDA,4DAAA,aAAwB;QACjBA,oDAAA,GAAW;QAAAA,0DAAA,EAAI;QAEtBA,4DAAA,aAA0B;QACwBA,wDAAA,mBAAAgwB,wDAAA;UAAA,OAAS5tB,GAAA,CAAAuC,OAAA,EAAS;QAAA,EAAC;QAAC3E,oDAAA,GAAa;QAAAA,0DAAA,EAAS;QACxFA,4DAAA,gBAAiE;QAApBA,wDAAA,mBAAAiwB,wDAAA;UAAA,OAAS7tB,GAAA,CAAA0tB,OAAA,EAAS;QAAA,EAAC;QAAC9vB,oDAAA,IAAiB;QAAAA,0DAAA,EAAS;;;QAPzDA,uDAAA,GAAS;QAATA,+DAAA,CAAAoC,GAAA,CAAAkL,KAAA,CAAS;QAGxCtN,uDAAA,GAAW;QAAXA,+DAAA,CAAAoC,GAAA,CAAAmL,OAAA,CAAW;QAGoDvN,uDAAA,GAAa;QAAbA,+DAAA,CAAAoC,GAAA,CAAAoL,SAAA,CAAa;QACdxN,uDAAA,GAAiB;QAAjBA,+DAAA,CAAAoC,GAAA,CAAAqL,aAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEA9EzN,4DAAA,cAA4D;IAEpDA,wDAAA,oBAAAkwB,2DAAA;MAAA,MAAAzb,WAAA,GAAAzU,2DAAA,CAAA4f,GAAA;MAAA,MAAAuQ,OAAA,GAAA1b,WAAA,CAAAI,SAAA;MAAA,MAAAgL,MAAA,GAAA7f,2DAAA;MAAA,OAAUA,yDAAA,CAAA6f,MAAA,CAAAuQ,aAAA,CAAAD,OAAA,CAAmB;IAAA,EAAC;IADlCnwB,0DAAA,EACyF;IACzFA,4DAAA,YAAO;IAAAA,oDAAA,GAAQ;IAAAA,0DAAA,EAAQ;;;;;IAFyBA,uDAAA,GAAwC;IAAxCA,wDAAA,YAAA+C,MAAA,CAAAyS,aAAA,CAAA5V,QAAA,CAAAuwB,OAAA,EAAwC,aAAAA,OAAA,gBAAAptB,MAAA,CAAAmH,QAAA;IAEjFlK,uDAAA,GAAQ;IAARA,+DAAA,CAAAmwB,OAAA,CAAQ;;;ADHrB,MAAO7b,mBAAmB;EAK9BxV,YAAmBuW,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAJ7B,KAAAnL,QAAQ,GAAG,EAAE;IACb,KAAAoL,cAAc,GAAU,EAAE;IAC1B,KAAAE,aAAa,GAAU,EAAE;EAEoB;EAE7C4a,aAAaA,CAACC,YAAoB;IAChC,MAAMlgB,KAAK,GAAG,IAAI,CAACqF,aAAa,CAACpF,OAAO,CAACigB,YAAY,CAAC;IACtDlgB,KAAK,KAAK,CAAC,CAAC,GAAG,IAAI,CAACqF,aAAa,CAACyZ,MAAM,CAAC9e,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAACqF,aAAa,CAACnQ,IAAI,CAACgrB,YAAY,CAAC;EAC5F;EAAC,QAAAtwB,CAAA;qBAVUuU,mBAAmB,EAAAtU,+DAAA,CAAAI,2DAAA;EAAA;EAAA,QAAAE,EAAA;UAAnBgU,mBAAmB;IAAA/T,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAquB,6BAAAnuB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhCnC,4DAAA,aAA0B;QACYA,oDAAA,GAA2B;QAAAA,0DAAA,EAAK;QAClEA,4DAAA,gBAAwG;QAA5BA,wDAAA,mBAAAuwB,qDAAA;UAAA,OAASnuB,GAAA,CAAAiT,UAAA,CAAAnI,IAAA,EAAiB;QAAA,EAAC;QACnGlN,4DAAA,cAAiD;QAAAA,oDAAA,aAAO;QAAAA,0DAAA,EAAO;QAGvEA,4DAAA,aAAwB;QAEhBA,wDAAA,IAAAwwB,kCAAA,iBAIM;QACVxwB,0DAAA,EAAO;QAEXA,4DAAA,cAA0B;QACwBA,wDAAA,mBAAAywB,sDAAA;UAAA,OAASruB,GAAA,CAAAiT,UAAA,CAAAnI,IAAA,EAAiB;QAAA,EAAC;QAAClN,oDAAA,cAAM;QAAAA,0DAAA,EAAS;;;QAfvDA,uDAAA,GAA2B;QAA3BA,gEAAA,oBAAAoC,GAAA,CAAA8H,QAAA,KAA2B;QAOhBlK,uDAAA,GAAiB;QAAjBA,wDAAA,YAAAoC,GAAA,CAAAkT,cAAA,CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEL9DtV,4DAAA,YAC8B;IAC1BA,uDAAA,cAA8D;IAClEA,0DAAA,EAAI;;;;;IAEJA,4DAAA,YAAqH;IACjHA,uDAAA,cAA8D;IAClEA,0DAAA,EAAI;;;;;IAoBYA,4DAAA,YAA0D;IACYA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;;;;;IAE/EA,4DAAA,YAA0D;IACgBA,oDAAA,gBAAS;IAAAA,0DAAA,EAAI;;;;;;;;IAd3FA,qEAAA,GAA2D;IACvDA,4DAAA,YAAqB;IACmDA,oDAAA,cAAO;IAAAA,0DAAA,EAAI;IAEnFA,4DAAA,YAAqB;IACiDA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;IAE/EA,4DAAA,YAAqB;IACoDA,oDAAA,eAAQ;IAAAA,0DAAA,EAAI;IAErFA,wDAAA,KAAA0wB,2CAAA,iBAEK;IACL1wB,wDAAA,KAAA2wB,2CAAA,iBAEK;IACT3wB,mEAAA,EAAe;;;IANNA,uDAAA,IAAkC;IAAlCA,wDAAA,eAAAA,6DAAA,IAAAkU,GAAA,EAAkC;IAGlClU,uDAAA,GAAkC;IAAlCA,wDAAA,eAAAA,6DAAA,IAAAkU,GAAA,EAAkC;;;;;;IAY3ClU,4DAAA,cAAyC;IACRA,oDAAA,GAAyB;IAAAA,0DAAA,EAAK;IAC3DA,4DAAA,aAA4B;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAK;IAC1DA,uDAAA,SAAI;IACJA,4DAAA,YAAmD;IAACA,oDAAA,oBAAY;IAAAA,0DAAA,EAAI;IACpEA,4DAAA,YAA4C;IAAnBA,wDAAA,mBAAA4wB,sDAAA;MAAA5wB,2DAAA,CAAAugB,GAAA;MAAA,MAAAC,MAAA,GAAAxgB,2DAAA;MAAA,OAASA,yDAAA,CAAAwgB,MAAA,CAAA3V,MAAA,EAAQ;IAAA,EAAC;IAAE7K,oDAAA,cAAM;IAAAA,0DAAA,EAAI;;;;IAJ1BA,uDAAA,GAAyB;IAAzBA,gEAAA,aAAA6wB,OAAA,CAAApd,OAAA,KAAyB;IAC1BzT,uDAAA,GAAyB;IAAzBA,gEAAA,MAAA6wB,OAAA,CAAA3mB,QAAA,KAAyB;;;;;IAL7DlK,4DAAA,cAAsF;IAClFA,uDAAA,cACoE;IACpEA,wDAAA,IAAA8wB,kCAAA,mBAMM;IACV9wB,0DAAA,EAAM;;;;IATGA,uDAAA,GAA8C;IAA9CA,mEAAA,QAAA6wB,OAAA,CAAAjO,QAAA,yBAAA5iB,2DAAA,CAA8C;;;AD/B7D,MAAO4X,YAAY;EAKvB9Y,YAAmBkjB,eAA+B,EAAU7d,MAAc,EAASJ,MAAsB;IAAtF,KAAAie,eAAe,GAAfA,eAAe;IAA0B,KAAA7d,MAAM,GAANA,MAAM;IAAiB,KAAAJ,MAAM,GAANA,MAAM;IAHzF,KAAA8F,KAAK,GAAQ,EAAE;EAKf;EACArK,QAAQA,CAAA;IACN;IACA;EAAA;EAEF;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAqL,MAAMA,CAAA;IACJ,IAAI,CAACmX,eAAe,CAACnX,MAAM,EAAE;IAC7B,IAAI,CAAC1G,MAAM,CAACsB,aAAa,CAAC,WAAW,CAAC;EACxC;EAAC,QAAA1F,CAAA;qBA7BU6X,YAAY,EAAA5X,+DAAA,CAAAI,qEAAA,GAAAJ,+DAAA,CAAA8F,mDAAA,GAAA9F,+DAAA,CAAAqI,qDAAA;EAAA;EAAA,QAAA/H,EAAA;UAAZsX,YAAY;IAAArX,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA8uB,sBAAA5uB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZzBnC,4DAAA,aAC6F;QAEzFA,wDAAA,IAAAgxB,yBAAA,eAGI;;QAEJhxB,wDAAA,IAAAixB,yBAAA,eAEI;;QAGAjxB,4DAAA,gBACmF;QAC/EA,uDAAA,cAAyC;QAC7CA,0DAAA,EAAS;QAETA,4DAAA,aAAqD;QAE7CA,wDAAA,KAAAkxB,qCAAA,2BAgBe;;QACflxB,4DAAA,aAAqB;QACkDA,oDAAA,cAAM;QAAAA,0DAAA,EAAI;QAIrFA,wDAAA,KAAAmxB,4BAAA,kBAUM;;QACVnxB,0DAAA,EAAM;;;QAlDNA,uDAAA,GAA6C;QAA7CA,wDAAA,UAAAA,yDAAA,OAAAoC,GAAA,CAAA4f,eAAA,CAAA5iB,YAAA,EAA6C;QAK7CY,uDAAA,GAA0C;QAA1CA,wDAAA,SAAAA,yDAAA,OAAAoC,GAAA,CAAA4f,eAAA,CAAA5iB,YAAA,EAA0C;QAYnBY,uDAAA,GAA0C;QAA1CA,wDAAA,SAAAA,yDAAA,QAAAoC,GAAA,CAAA4f,eAAA,CAAA5iB,YAAA,EAA0C;QAsBtCY,uDAAA,GAA6C;QAA7CA,wDAAA,SAAAA,yDAAA,SAAAoC,GAAA,CAAA4f,eAAA,CAAA5iB,YAAA,EAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CD;AAGgC;;;;;;;;;;;ICwBnGY,4DAAA,SAA2C;IACvCA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAA2e,QAAA,MACJ;;;;;IAJR3e,4DAAA,cAA0C;IAElCA,wDAAA,IAAAsxB,sCAAA,iBAEK;IACTtxB,0DAAA,EAAK;;;;IAHqBA,uDAAA,GAAmB;IAAnBA,wDAAA,YAAAc,MAAA,CAAA+d,gBAAA,CAAmB;;;ADhB/C,MAAO9G,iBAAiB;EAM5BjZ,YAAoBG,cAA8B,EAAU8E,MAAqB,EACvEwtB,EAAe,EAAUptB,MAAc;IAD7B,KAAAlF,cAAc,GAAdA,cAAc;IAA0B,KAAA8E,MAAM,GAANA,MAAM;IACxD,KAAAwtB,EAAE,GAAFA,EAAE;IAAuB,KAAAptB,MAAM,GAANA,MAAM;IAN/B,KAAAqtB,cAAc,GAAG,IAAI3Y,uDAAY,EAAE;IAC7C,KAAA4Y,YAAY,GAAc,IAAIL,qDAAS,CAAC,EAAE,CAAC;IAC3C,KAAAvvB,OAAO,GAAS,IAAIwJ,IAAI,EAAE;EAI2B;EAErD7L,QAAQA,CAAA;IACN,IAAI,CAACkyB,cAAc,EAAE;IACrB,IAAI,CAAC7vB,OAAO,CAAC8vB,WAAW,CAAC,IAAI,CAAC9vB,OAAO,CAAC+vB,WAAW,EAAE,GAAG,EAAE,CAAC;EAC3D;EAEAF,cAAcA,CAAA;IACZ,IAAI,CAACD,YAAY,GAAG,IAAI,CAACF,EAAE,CAAC1f,KAAK,CAAC;MAChCzK,MAAM,EAAE,CAAC,MAAM,CAAC;MAChB8C,QAAQ,EAAE,CAAC,EAAE,EAAEmnB,sDAAU,CAACQ,QAAQ,CAAC;MACnCpe,OAAO,EAAE,CAAC,EAAE,EAAE4d,sDAAU,CAACQ,QAAQ,CAAC;MAClCC,WAAW,EAAE,CAAC,EAAE,EAAET,sDAAU,CAACQ,QAAQ,CAAC;MACtCzO,IAAI,EAAE,CAAC,EAAE,EAAEiO,sDAAU,CAACQ,QAAQ,CAAC;MAC/B3L,OAAO,EAAE,CAAC,EAAE,EAAEmL,sDAAU,CAACQ,QAAQ,CAAC;MAClCtP,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC8O,sDAAU,CAACQ,QAAQ,EAAER,sDAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EAAEV,sDAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACvFC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACZ,sDAAU,CAACQ,QAAQ,EAAE,IAAI,CAACK,WAAW,CAAC,UAAU,CAAC,CAAC;KAC1E,CAAC;IACF,IAAI,CAACT,YAAY,CAACU,QAAQ,CAAC,UAAU,CAAC,CAACC,YAAY,CAAC9yB,SAAS,CAAC;MAC5DC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACkyB,YAAY,CAACU,QAAQ,CAAC,iBAAiB,CAAC,CAACE,sBAAsB;KACjF,CAAC;EACJ;EAEAH,WAAWA,CAACI,OAAe;IACzB,OAAQ3wB,OAAwB,IAAI;MAClC,OAAOA,OAAO,EAAEmmB,KAAK,KAAKnmB,OAAO,EAAE4wB,MAAM,EAAErpB,GAAG,CAACopB,OAAO,CAAC,EAAExK,KAAK,GAAG,IAAI,GAAG;QAAE0K,UAAU,EAAE;MAAI,CAAE;IAC9F,CAAC;EACH;EAEAroB,QAAQA,CAAA;IACN,MAAMsoB,GAAG,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACjB,YAAY,CAACU,QAAQ,CAAC,aAAa,CAAC,CAACrK,KAAK,CAAC;IAC7E,MAAMzY,MAAM,GAAG;MAAE,GAAG,IAAI,CAACoiB,YAAY,CAAC3J,KAAK;MAAEgK,WAAW,EAAE,IAAI,CAACY,WAAW,CAACD,GAAG;IAAC,CAAE;IACjF,IAAI,CAACxzB,cAAc,CAACkL,QAAQ,CAACkF,MAAM,CAAC,CAAC/P,SAAS,CAAC;MAC7CC,IAAI,EAAEwK,QAAQ,IAAG;QACf,IAAI,CAAC5F,MAAM,CAACsB,aAAa,CAAC,UAAU,CAAC;MACvC,CAAC;MACDzB,KAAK,EAAEA,KAAK,IAAG;QACb,IAAI,CAAC6a,gBAAgB,GAAG7a,KAAK;MAC/B;KACD,CAAC;EACJ;EAEAke,MAAMA,CAAA;IACJ,IAAI,CAACsP,cAAc,CAAC9W,IAAI,CAAC,KAAK,CAAC;EACjC;EAEQgY,WAAWA,CAACD,GAAuB;IACzC,IAAI,CAACA,GAAG,EAAE;IACV,IAAIE,MAAM,GAAG,IAAItnB,IAAI,CAAConB,GAAG,CAAC;IAC1B,OAAO,IAAIpnB,IAAI,CAACsnB,MAAM,CAACC,UAAU,CAACD,MAAM,CAACE,UAAU,EAAE,GAAGF,MAAM,CAACG,iBAAiB,EAAE,CAAC,CAAC,CAACpnB,WAAW,EAAE,CAACqnB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACjH;EAAC,QAAAhzB,CAAA;qBAzDUgY,iBAAiB,EAAA/X,+DAAA,CAAAI,qEAAA,GAAAJ,+DAAA,CAAA8F,qDAAA,GAAA9F,+DAAA,CAAAqI,uDAAA,GAAArI,+DAAA,CAAAsI,mDAAA;EAAA;EAAA,QAAAhI,EAAA;UAAjByX,iBAAiB;IAAAxX,SAAA;IAAAub,OAAA;MAAA0V,cAAA;IAAA;IAAA1vB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgxB,2BAAA9wB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX9BnC,4DAAA,cAAkG;QAAjEA,wDAAA,sBAAAkzB,oDAAA;UAAA,OAAA9wB,GAAA,CAAAqvB,YAAA,CAAAvG,KAAA,IAAkC9oB,GAAA,CAAA+H,QAAA,EAAU;QAAA,EAAC;QAC1EnK,4DAAA,YAAqC;QAAAA,oDAAA,cAAO;QAAAA,0DAAA,EAAK;QACjDA,uDAAA,SAAI;QAEJA,4DAAA,aAAkB;QACqBA,oDAAA,eAAQ;QAAAA,0DAAA,EAAQ;QACnDA,4DAAA,eAAgC;QAC5BA,uDAAA,eAAmF;QAACA,oDAAA,aACxF;QAAAA,0DAAA,EAAQ;QACRA,4DAAA,gBAAgC;QAC5BA,uDAAA,gBAA0F;QAACA,oDAAA,gBAC/F;QAAAA,0DAAA,EAAQ;QAGZA,uDAAA,yBAA8G;QAW9GA,wDAAA,KAAAmzB,iCAAA,kBAMM;QAGNnzB,4DAAA,eAAoC;QACoDA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAS;QACrGA,4DAAA,kBAAsE;QAAjCA,wDAAA,mBAAAozB,oDAAA;UAAA,OAAShxB,GAAA,CAAA8f,MAAA,EAAQ;QAAA,EAAC;QAAeliB,oDAAA,cAAM;QAAAA,0DAAA,EAAS;;;QApCvFA,wDAAA,cAAAoC,GAAA,CAAAqvB,YAAA,CAA0B;QAcZzxB,uDAAA,IAAuD;QAAvDA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,aAAuD;QACvDnyB,uDAAA,GAAsD;QAAtDA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,YAAsD;QACrDnyB,uDAAA,GAA0D;QAA1DA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,gBAA0D,sCAAA/vB,GAAA,CAAAP,OAAA;QAE3D7B,uDAAA,GAAmD;QAAnDA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,SAAmD;QACnDnyB,uDAAA,GAAsD;QAAtDA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,YAAsD;QACtDnyB,uDAAA,GAAuD;QAAvDA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,aAAuD;QAEvDnyB,uDAAA,GAA8D;QAA9DA,wDAAA,gBAAAoC,GAAA,CAAAqvB,YAAA,CAAAU,QAAA,oBAA8D;QAG5DnyB,uDAAA,GAAsB;QAAtBA,wDAAA,SAAAoC,GAAA,CAAAyc,gBAAA,CAAsB;QAU5B7e,uDAAA,GAAgC;QAAhCA,wDAAA,cAAAoC,GAAA,CAAAqvB,YAAA,CAAAvG,KAAA,CAAgC;;;;;;;;;;;;;;;;;;;;;;;;AClCZ;;;AAQ9B,MAAOxU,qBAAqB;EAGhC5X,YAAoBG,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAma,IAAI,GAAmB,EAAE;EAKzB;EACA5Z,QAAQA,CAAA;IAEN,MAAM4Z,IAAI,GAAG,IAAI,CAACna,cAAc,CAAC+M,qBAAqB,EAAE;IACxDrG,OAAO,CAACC,GAAG,CAACwT,IAAI,CAAC;IACjB,IAAIc,SAAS,GAAiC,EAAE;IAEhD,IAAId,IAAI,EAAE;MACR,IAAIia,SAAS,GAAG,CAAC;MACjB,KAAK,MAAMC,QAAQ,IAAIla,IAAI,EAAE;QAAE;QAC7BzT,OAAO,CAACC,GAAG,CAAC0tB,QAAQ,CAACnoB,QAAQ,CAAC;QAE9B,IAAImoB,QAAQ,CAACnoB,QAAQ,KAAK,IAAI,EAAE;UAC9B,MAAMooB,cAAc,GAAGD,QAAQ,CAAC7nB,IAAI;UACpC,MAAM+nB,SAAS,GAAG,IAAInoB,IAAI,CAACkoB,cAAc,CAAC;UAC1C,MAAME,UAAU,GAAGD,SAAS,CAACE,WAAW,EAAE;UAC1C,MAAMC,YAAY,GAAIH,SAAS,CAACI,aAAa,EAAE,IAAK,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;UACrEP,SAAS,GAAGI,UAAU,GAAGE,YAAY;SAGtC,MACI,IAAIN,SAAS,KAAK,CAAC,EAAE;UACxB,MAAMQ,eAAe,GAAGP,QAAQ,CAAC7nB,IAAI;UACrC,MAAMqoB,UAAU,GAAG,IAAIzoB,IAAI,CAACwoB,eAAe,CAAC;UAE5C,MAAME,WAAW,GAAGD,UAAU,CAACJ,WAAW,EAAE;UAC5C,MAAMM,aAAa,GAAIF,UAAU,CAACF,aAAa,EAAE,IAAK,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;UACvE,MAAMK,UAAU,GAAGF,WAAW,GAAGC,aAAa;UAC9CruB,OAAO,CAACC,GAAG,CAAC0tB,QAAQ,CAACppB,QAAQ,CAAC;UAC9BgQ,SAAS,CAAC7U,IAAI,CAAC;YACb0M,CAAC,EAAEuhB,QAAQ,CAACppB,QAAQ;YACpB8P,CAAC,EAAE,CAACqZ,SAAS,EAAEY,UAAU,CAAC,CAAC;WAC5B,CAAC;;UACFZ,SAAS,GAAG,CAAC;;;MAGjB1tB,OAAO,CAACC,GAAG,CAACsU,SAAS,CAAC;MACtB,IAAI,CAACD,SAAS,CAACC,SAAS,CAAC;;EAE7B;EAGAD,SAASA,CAACC,SAAuC;IAC/C,MAAME,OAAO,GAA2B;MACtCO,MAAM,EAAE,CACN;QACEvB,IAAI,EAAEc;OACP,CACF;MACDjB,KAAK,EAAE;QACLoB,MAAM,EAAE,GAAG;QACXlX,IAAI,EAAE,UAAU;QAChB+wB,IAAI,EAAE;UACJC,OAAO,EAAE;;OAEZ;MACDC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;MAC9BrZ,WAAW,EAAE;QACXC,GAAG,EAAE;UACHC,UAAU,EAAE,IAAI;UAChBoZ,UAAU,EAAE,IAAI;UAChBC,cAAc,EAAE,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAE;;OAE7C;;MACDhnB,KAAK,EAAE;QACLwN,IAAI,EAAE;OACP;MACDyZ,MAAM,EAAE;QACN3nB,IAAI,EAAE,IAAI;QACV4nB,mBAAmB,EAAE,IAAI;QACzBC,QAAQ,EAAE,KAAK;QACfC,eAAe,EAAE,MAAM;QACvBC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,SAAS;OACxC;MAEDC,IAAI,EAAE;QACJzxB,IAAI,EAAE,UAAU;QAChB0xB,QAAQ,EAAE;UACRC,gBAAgB,EAAE,CAAC,SAAS,CAAC;UAC7BC,aAAa,EAAE,KAAK;UACpBC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;;OAEf;MACDC,IAAI,EAAE;QACJzZ,KAAK,EAAE;UACL0Z,KAAK,EAAE;YACLtoB,IAAI,EAAE;;SAET;QACDsO,KAAK,EAAE;UACLga,KAAK,EAAE;YACLtoB,IAAI,EAAE;;;OAGX;MACDsO,KAAK,EACL;QACE5B,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,EAAE;QACPjM,KAAK,EAAE;UACLwN,IAAI,EAAE,OAAO;UACbK,KAAK,EAAE;YACLnO,KAAK,EAAE,SAAS;YAChBoO,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,8BAA8B;YAC1CC,UAAU,EAAE,GAAG;YACfC,QAAQ,EAAE;;;OAGf;MACDC,KAAK,EACL;QACElC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,EAAE;QACPjM,KAAK,EAAE;UACLwN,IAAI,EAAE,iBAAiB;UACvBK,KAAK,EAAE;YACLnO,KAAK,EAAE,SAAS;YAChBoO,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,8BAA8B;YAC1CC,UAAU,EAAE,GAAG;YACfC,QAAQ,EAAE;;;;KAMjB;IAED,MAAMtC,KAAK,GAAG,IAAIH,mDAAU,CAAC4C,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,EAAEvB,OAAO,CAAC;IACvEnB,KAAK,CAAC2C,MAAM,EAAE;EAEhB;EAAC,QAAA7b,CAAA;qBA1IU2W,qBAAqB,EAAA1W,+DAAA,CAAAI,qEAAA;EAAA;EAAA,QAAAE,EAAA;UAArBoW,qBAAqB;IAAAnW,SAAA;IAAAuB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAkzB,+BAAAhzB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCnC,uDAAA,aAEM;;;;;;;;;;;;;;;;;;;ACFC,MAAMoJ,WAAW,GAAG;EACvBgsB,UAAU,EAAE,KAAK;EACjB5rB,MAAM,EAAE,6BAA6B;EACrCuH,MAAM,EAAE;CACX;;;;;;;;;;;;;;ACF4C;AAG7CskB,sEAAA,EAAwB,CAACE,eAAe,CAAChd,sDAAS,CAAC,CAChD9G,KAAK,CAAC+jB,GAAG,IAAI7vB,OAAO,CAAC3B,KAAK,CAACwxB,GAAG,CAAC,CAAC","sources":["./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-picker/date-picker.component.ts","./src/app/_forms/date-picker/date-picker.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_guards/register-routeprevent.guard.ts","./src/app/_intercepters/error.interceptor.ts","./src/app/_intercepters/jwt.interceptor.ts","./src/app/_intercepters/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/customRouteReuseStrategy.ts","./src/app/_services/members.service.ts","./src/app/_services/messages.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/charts/age-bar-chart/age-bar-chart.component.ts","./src/app/charts/age-bar-chart/age-bar-chart.component.html","./src/app/charts/relation-status-pie-chart/relation-status-pie-chart.component.ts","./src/app/charts/relation-status-pie-chart/relation-status-pie-chart.component.html","./src/app/charts/sex-pie-chart/sex-pie-chart.component.ts","./src/app/charts/sex-pie-chart/sex-pie-chart.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-error/test-error.component.ts","./src/app/errors/test-error/test-error.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user-tracking/user-tracking.component.ts","./src/app/user-tracking/user-tracking.component.html","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective {\r\n  @Input() appHasRole: string[] = [];\r\n  user: User = {} as User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>,\r\n    private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n        if (user) this.user = user;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.user?.roles.some(r => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-picker',\r\n  templateUrl: './date-picker.component.html',\r\n  styleUrls: ['./date-picker.component.css']\r\n})\r\nexport class DatePickerComponent implements ControlValueAccessor {\r\n  @Input() label = '';\r\n  @Input() maxDate: Date | undefined;\r\n  bsConfig: Partial<BsDatepickerConfig> | undefined; // partial makes all inputs optional  \r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY',\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this.ngControl.control as FormControl;\r\n  }\r\n}","<div class=\"mb-3\">\r\n    <input type=\"text\" [class.is-invalid]=\"control.touched && control.invalid\" class=\"form-control\"\r\n        [formControl]=\"control\" placeholder=\"{{label}}\" bsDatepicker [bsConfig]=\"bsConfig\" [maxDate]=\"maxDate\">\r\n    <div *ngIf=\"control.errors?.['required']\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label = '';\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) { //self for reuse input field which will forgot all data before use again\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  get control(): FormControl {\r\n    return this.ngControl.control as FormControl // typecasting FormControl as this.ngControl.control\r\n  }\r\n}","<div class=\"mb-3\">\r\n    <input type={{type}} [class.is-invalid]=\"control.touched && control.invalid\" class=\"form-control\"\r\n        [formControl]=\"control\" placeholder={{label}}>\r\n    <div class=\"invalid-feedback\" *ngIf=\"control.errors?.['required']\">\r\n        Please enter a {{label}}\r\n    </div>\r\n    <div class=\"invalid-feedback\" *ngIf=\"control.errors?.['minlength']\">\r\n        {{label}} must be at least {{control.errors?.['minlength'].requiredLength}} characters\r\n    </div>\r\n    <div class=\"invalid-feedback\" *ngIf=\"control.errors?.['maxlength']\">\r\n        {{label}} must be at most {{control.errors?.['maxlength'].requiredLength}} characters\r\n    </div>\r\n    <div class=\"invalid-feedback\" *ngIf=\"control.errors?.['notMatching']\">\r\n        Passwords do not match\r\n    </div>\r\n</div>","import { inject } from '@angular/core';\r\nimport { CanActivateFn } from '@angular/router';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs';\r\n\r\nexport const adminGuard: CanActivateFn = (route, state) => {\r\n  const accountService = inject(AccountService);\r\n  const toastr = inject(ToastrService);\r\n\r\n  return accountService.currentUser$.pipe(\r\n    map(user => {\r\n      if (!user) return false;\r\n      if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n        return true;\r\n      } else {\r\n        toastr.error('You cannot enter this area');\r\n        return false;\r\n      }\r\n    })\r\n  )\r\n};\r\n","import { CanActivateFn, Router } from '@angular/router';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { inject } from '@angular/core';\r\nimport { map } from 'rxjs';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const accountService = inject(AccountService);\r\n  const toastr = inject(ToastrService);\r\n  const router = inject(Router)\r\n\r\n\r\n  return accountService.currentUser$.pipe(\r\n    map(user => {\r\n      if (user) return true;\r\n      else {\r\n        // toastr.error('You Shall Not....!')\r\n        router.navigate(['/register']);\r\n\r\n        return false;\r\n      }\r\n    })\r\n  )\r\n};\r\n","import { CanDeactivateFn } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { inject } from '@angular/core';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\nexport const preventUnsavedChangesGuard: CanDeactivateFn<MemberEditComponent> = (component) => {\r\n  const confirmService = inject(ConfirmService);\r\n\r\n  if (component.editForm?.dirty) {\r\n    return confirmService.confirm();\r\n  }\r\n\r\n  return true;\r\n};\r\n","import { CanActivateFn, Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { map } from 'rxjs';\nexport const registerRoutepreventGuard: CanActivateFn = (route, state) => {\n  \n  const accountService = inject(AccountService)\n  const router = inject(Router)\n  // Check if the route is 'register' and prevent access\n\n  return accountService.currentUser$.pipe(\n    map((user: any) => {\n      if (!user) return true;\n      else {\n        // toastr.error('You Shall Not....!')\n        router.navigate(['/members']);\n\n        return false;\n      }\n    })\n  )\n  // if (state.url.includes('register')) {\n  //   router.navigate(['/members']);\n  //   return false;\n  // }\n\n  // Allow access to other routes\n  return true;\n};\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, catchError } from 'rxjs';\r\nimport { NavigationExtras, Route, Router } from '@angular/router';\r\nimport { ToastToken, ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router : Router, private toastr : ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error : HttpErrorResponse )=> {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modelStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modelStateErrors.push(error.error.errors[key])\r\n                  }\r\n                }\r\n                throw modelStateErrors.flat();\r\n              }\r\n              else {\r\n                this.toastr.error(error.error, error.status.toString())\r\n              }\r\n              break;\r\n              case401:\r\n              this.toastr.error('Unauthorised', error.status.toString());\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n                break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = { state: { error: error.error } }\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n\r\n          }\r\n        }\r\n        throw error;\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, take } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService : AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n        if (user) {\r\n          request = request.clone({\r\n            setHeaders: {\r\n              Authorization: `Bearer ${user.token}`\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, delay, finalize } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n\r\n    return next.handle(request).pipe(\r\n      delay(500),\r\n      finalize(() => {\r\n        this.busyService.idle()\r\n      })\r\n    )\r\n\r\n  }\r\n}\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result?: T;\r\n    pagination?: Pagination\r\n}","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 12;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female'\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from \"ngx-timeago\";\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    NgxSpinnerModule.forRoot({\r\n      type: 'ball-atom'\r\n    }),\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    TimeagoModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxSpinnerModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { ResolveFn } from '@angular/router';\r\nimport { Member } from '../_models/member';\r\nimport { inject } from '@angular/core';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\nexport const memberDetailedResolver: ResolveFn<Member> = (route, state) => {\r\n  const memberService = inject(MembersService);\r\n\r\n  return memberService.getMember(route.paramMap.get('username')!)\r\n  // To get load by params.\r\n};\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, map, take } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresenceService } from './presence.service';\r\nimport { UserActivity } from '../_models/userActivity';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new BehaviorSubject<User | null>(null);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n  refreshPhoto: boolean = false;\r\n  constructor(private http: HttpClient, private presenceService: PresenceService) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          //To track login\r\n          this.recordLoginAndLogout(user.username, true);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post<User>(this.baseUrl + 'account/register', model).pipe(\r\n      map(response => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          //To track login\r\n          this.recordLoginAndLogout(user.username, true);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n    this.presenceService.createHubConnection(user);\r\n\r\n    //To track login\r\n\r\n    // console.log(user.username)\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    //To track logout \r\n    this.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n\r\n        if (user) {\r\n          this.recordLoginAndLogout(user.username, false);\r\n          // console.log(user.username)\r\n        }\r\n      }\r\n    });\r\n\r\n    this.currentUserSource.next(null);\r\n    this.presenceService.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token: string) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n\r\n\r\n\r\n  //To track login   logout \r\n  recordLoginAndLogout(user: string, loggedIn: boolean) {\r\n    const currentTimeInUTC = new Date();\r\n    const utcOffset = 330; // GMT +5:30\r\n    // Calculate the time in India by adding the UTC offset\r\n    //(utcOffset * 60 * 1000) converting in milliseconds \r\n    const currentTimeInIndia = new Date(currentTimeInUTC.getTime() + (utcOffset * 60 * 1000));\r\n    const time = currentTimeInIndia.toISOString();\r\n    const loginLogoutPair = {\r\n      username: user,\r\n      time,\r\n      loggedIn,\r\n    };\r\n    const localitem = localStorage.getItem('loginLogoutHistory')\r\n    // console.log(localitem)\r\n\r\n    if (localitem) {\r\n      const loginLogoutHistory = JSON.parse(localitem);\r\n      loginLogoutHistory.push(loginLogoutPair);\r\n\r\n      localStorage.setItem('loginLogoutHistory', JSON.stringify(loginLogoutHistory));\r\n    }\r\n    else {\r\n      const newHistory = [loginLogoutPair]; // new array of login/logout pair\r\n      localStorage.setItem('loginLogoutHistory', JSON.stringify(newHistory));\r\n\r\n    }\r\n    // console.log(loginLogoutPair)\r\n\r\n  }\r\n  getLoginLogoutHistory(): UserActivity[] | null {\r\n    const localItem = localStorage.getItem('loginLogoutHistory');\r\n    if (localItem) {\r\n      const parsedData = JSON.parse(localItem);\r\n      if (Array.isArray(parsedData)) {\r\n        return parsedData as UserActivity[];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // getLoginLogoutHistory(): UserActivity | null {\r\n  //   const localitem = localStorage.getItem('loginLogoutHistory');\r\n  //   // console.log(localitem)\r\n  //   if (localitem) {\r\n  //     return JSON.parse(localitem);\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // // To Record login info \r\n  //   recordLogin(user: string) {\r\n  //     const loginT = new Date().toISOString();\r\n  //     return {\r\n  //       username: user,\r\n  //       loginTime: loginT\r\n  //     };\r\n  //   }\r\n  //   // To Record logout info \r\n  //   recordLogout(user: string) {\r\n  //     const logoutT = new Date().toISOString();\r\n  //     return {\r\n  //       username: user,\r\n  //       logoutTime: logoutT,\r\n  //     };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getLoginLogoutHistory() {\r\n  throw new Error('Function not implemented.');\r\n}\r\n// refreshProfilePhoto() {\r\n//   this.refreshPhoto=true\r\n// }\r\n\r\n// getrefreshProfilePhoto(){ //the receiver component calls this function\r\n//   return this.refreshPhoto //it returns as an observable to which the receiver funtion will subscribe\r\n// }\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<User[]>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post<string[]>(this.baseUrl + 'admin/edit-roles/'\r\n      + username + '?roles=' + roles, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n\r\n  busyReqCount = 0;\r\n  constructor(private spinner : NgxSpinnerService) { }\r\n\r\n  busy() {\r\n    this.busyReqCount++;\r\n    this.spinner.show(undefined, {\r\n      type: 'ball-atom',\r\n      fullScreen: true,\r\n      bdColor: 'rgba(0, 0, 0, 0.2)',\r\n      color: '#343aeb',\r\n      size: 'medium',\r\n    })\r\n  }\r\n\r\n  idle() {\r\n    this.busyReqCount--;\r\n    if (this.busyReqCount <= 0) {\r\n      this.busyReqCount = 0;\r\n      this.spinner.hide();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef?: BsModalRef<ConfirmDialogComponent>;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(\r\n    title = 'Confirmation',\r\n    message = 'Are you sure you want to do this?',\r\n    btnOkText = 'Ok',\r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n    const config = {\r\n      initialState: {\r\n        title,\r\n        message,\r\n        btnOkText,\r\n        btnCancelText\r\n      }\r\n    }\r\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n    return this.bsModelRef.onHidden!.pipe(\r\n      map(() => {\r\n        return this.bsModelRef!.content!.result\r\n      })\r\n    )\r\n  }\r\n}","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from \"@angular/router\";\r\n\r\nexport class CustomRouteReuseStrategy implements RouteReuseStrategy {\r\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n        return false;\r\n    }\r\n    store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle | null): void {\r\n    }\r\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n        return false;\r\n    }\r\n    retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\r\n        return null;\r\n    }\r\n    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n        return false;\r\n    }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { of, map, take } from 'rxjs';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user?: User | null;\r\n  userParams: UserParams | undefined;\r\n\r\n  constructor(private http: HttpClient, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n        if (user)\r\n          this.userParams = new UserParams(user);\r\n        this.user = user;\r\n      }\r\n    })\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(userParams: UserParams) {\r\n    this.userParams = userParams;\r\n  }\r\n\r\n  resetUserParams() {\r\n    if (this.user) {\r\n      this.userParams = new UserParams(this.user);\r\n      return this.userParams;\r\n    }\r\n    return;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    const response = this.memberCache.get(Object.values(userParams).join('-'));\r\n\r\n    if (response) return of(response);\r\n\r\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\r\n\r\n    params = params.append('minAge', userParams.minAge);\r\n    params = params.append('maxAge', userParams.maxAge);\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http).pipe(\r\n      map(response => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      })\r\n    )\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.userName === username);\r\n\r\n    if (member) return of(member);\r\n\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = { ...this.members[index], ...member }\r\n      })\r\n    )\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/addlike/' + username, {})\r\n  }\r\n  removeLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/removelike/' + username, {})\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber: number, pageSize: number) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n\r\n    params = params.append('predicate', predicate);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'likes', params, this.http);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Message } from '../_models/message';\r\nimport { BusyService } from './busy.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, take } from 'rxjs';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { Group } from '../_models/group';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessagesService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection?: HubConnection;\r\n  private messageThreadSouce = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSouce.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.hubConnection.start()\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', messages => {\r\n      this.messageThreadSouce.next(messages);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessage', message => {\r\n      this.messageThread$.pipe(take(1)).subscribe({\r\n        next: messages => {\r\n          this.messageThreadSouce.next([...messages, message])\r\n        }\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe({\r\n          next: messages => {\r\n            messages.forEach(message => {\r\n              if (!message.dateRead) {\r\n                message.dateRead = new Date(Date.now())\r\n              }\r\n            })\r\n            this.messageThreadSouce.next([...messages]);\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSouce.next([]);\r\n      this.hubConnection?.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber: number, pageSize: number, container: string) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection?.invoke('SendMessage', { recipientUsername: username, content })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url: string, params: HttpParams, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>;\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n        map(response => {\r\n            if (response.body) {\r\n                paginatedResult.result = response.body;\r\n            }\r\n            const pagination = response.headers.get('Pagination');\r\n            if (pagination) {\r\n                paginatedResult.pagination = JSON.parse(pagination);\r\n            }\r\n            return paginatedResult;\r\n        })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber);\r\n    params = params.append('pageSize', pageSize);\r\n\r\n    return params;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { BehaviorSubject, take } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection?: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr: ToastrService, private router: Router) { }\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch(error => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe({\r\n        next: usernames => this.onlineUsersSource.next([...usernames, username])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UserIsOffline', username => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe({\r\n        next: usernames => this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('GetOnlineUsers', usernames => {\r\n      this.onlineUsersSource.next(usernames);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\r\n      this.toastr.info(knownAs + ' has sent you a new message! Click me to see it!')\r\n        .onTap\r\n        .pipe(take(1))\r\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=Messages'))\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection?.stop().catch(error => console.log(error));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n","<p>about works!</p>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent {\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading=\"User management\" *appHasRole=\"['Admin']\">\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <!-- <tab heading=\"Photo management\" *appHasRole=\"['Admin', 'Moderator']\">\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab> -->\r\n    </tabset>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css']\r\n})\r\nexport class PhotoManagementComponent {\r\n\r\n}\r\n","<p>photo-management works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: User[] = [];\r\n  bsModalRef: BsModalRef<RolesModalComponent> = new BsModalRef<RolesModalComponent>();\r\n  availableRoles = [\r\n    'Admin',\r\n    'Moderator',\r\n    'Member'\r\n  ]\r\n\r\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe({\r\n      next: users => this.users = users\r\n    })\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        username: user.username,\r\n        availableRoles: this.availableRoles,\r\n        selectedRoles: [...user.roles]\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.onHide?.subscribe({\r\n      next: () => {\r\n        const selectedRoles = this.bsModalRef.content?.selectedRoles;\r\n        if (!this.arrayEqual(selectedRoles, user.roles)) {\r\n          this.adminService.updateUserRoles(user.username, selectedRoles!).subscribe({\r\n            next: roles => user.roles = roles\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private arrayEqual(arr1: any, arr2: any) {\r\n    return JSON.stringify(arr1.sort()) === JSON.stringify(arr2.sort())\r\n  }\r\n}","<div class=\"row border-primary bg-transparent text-dark\">\r\n    <table class=\"table border-primary bg-transparent text-dark\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 30%;\">Username</th>\r\n                <th style=\"width: 40%;\">Active Roles</th>\r\n                <th style=\"width: 30%;\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n                <td>{{user.username}}</td>\r\n                <td>{{user.roles}}</td>\r\n                <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { authGuard } from './_guards/auth.guard';\r\nimport { TestErrorComponent } from './errors/test-error/test-error.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { preventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { memberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { adminGuard } from './_guards/admin.guard';\r\nimport { UserTrackingComponent } from './user-tracking/user-tracking.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { registerRoutepreventGuard } from './_guards/register-routeprevent.guard';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'register', component: HomeComponent, canActivate: [registerRoutepreventGuard]  },\r\n  { path: 'about', component: AboutComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [authGuard],\r\n    children: [\r\n      { path: '', component: MemberListComponent },\r\n      { path: 'members', component: MemberListComponent },\r\n      { path: 'members/:username', component: MemberDetailComponent, resolve: [memberDetailedResolver] },\r\n      { path: 'member/edit', component: MemberEditComponent, canDeactivate: [preventUnsavedChangesGuard] },\r\n      { path: 'user-tracking', component: UserTrackingComponent },\r\n\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent, canActivate: [adminGuard] },\r\n      { path: 'dashboard', component: DashboardComponent, canActivate: [adminGuard] },\r\n\r\n    ]\r\n  },\r\n  { path: 'errors', component: TestErrorComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: 'server-error', component: ServerErrorComponent },\r\n\r\n\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from './_services/account.service';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private accountService : AccountService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.setCurrentUser()\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const userString = localStorage.getItem('user')!\r\n    if (!userString) return;\r\n    const user: User = JSON.parse(userString);\r\n    this.accountService.setCurrentUser(user);\r\n  }\r\n}\r\n","<ngx-spinner >\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n<div class=\"full-screen-container\">\r\n\r\n  <div class=\"container background-container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DatePickerComponent } from './_forms/date-picker/date-picker.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { CustomRouteReuseStrategy } from './_services/customRouteReuseStrategy';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\nimport { ErrorInterceptor } from './_intercepters/error.interceptor';\r\nimport { JwtInterceptor } from './_intercepters/jwt.interceptor';\r\nimport { LoadingInterceptor } from './_intercepters/loading.interceptor';\r\nimport { UserTrackingComponent } from './user-tracking/user-tracking.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AgeBarChartComponent } from './charts/age-bar-chart/age-bar-chart.component';\nimport { SexPieChartComponent } from './charts/sex-pie-chart/sex-pie-chart.component';\nimport { RelationStatusPieChartComponent } from './charts/relation-status-pie-chart/relation-status-pie-chart.component';\nimport { LoginComponent } from './login/login.component';\nimport { AboutComponent } from './about/about.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DatePickerComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n    UserTrackingComponent,\r\n    DashboardComponent,\r\n    AgeBarChartComponent,\r\n    SexPieChartComponent,\r\n    RelationStatusPieChartComponent,\r\n    LoginComponent,\r\n    AboutComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n    { provide: RouteReuseStrategy, useClass: CustomRouteReuseStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport ApexCharts from 'apexcharts';\nimport { Data } from 'src/app/_models/datingData';\n@Component({\n  selector: 'app-age-bar-chart',\n  templateUrl: './age-bar-chart.component.html',\n  styleUrls: ['./age-bar-chart.component.css']\n})\nexport class AgeBarChartComponent implements OnInit {\n  @Output() sendBarToDashboard: EventEmitter<{ x: string, y: number }> = new EventEmitter();\n  @Input() receivedData: Data;\n  data: Data;\n  isLoaded: boolean = false;\n  chartObj: ApexCharts;\n  ngOnInit() {\n    this.chart(this.receivedData);\n  }\n\n  chart(Edata: Data) {\n    const data = Object.values(Edata);\n\n    const ageRanges = [\n      { min: 18, max: 20 },\n      { min: 20, max: 25 },\n      { min: 25, max: 30 },\n      { min: 30, max: 35 },\n      { min: 35, max: 40 },\n      { min: 40, max: 45 },\n      { min: 45, max: 50 },\n      { min: 50, max: 55 },\n      { min: 60, max: 65 },\n      { min: 65, max: 70 },\n      { min: 70, max: 75 },\n      { min: 75, max: 80 },\n      { min: 80, max: 85 },\n\n    ];\n\n    // Initialize an object to store counts for each age range\n    const ageRangeCounts: { [key: string]: number } = {};\n\n    data.forEach((profile) => {\n      const age = parseInt(profile.age);\n      if (!isNaN(age)) {\n        for (const range of ageRanges) {\n          if (age >= range.min && age < range.max) {\n            const key = `${range.min}-${range.max}`;\n            ageRangeCounts[key] = (ageRangeCounts[key] || 0) + 1;\n          }\n        }\n      }\n    });\n\n    // Convert the ageRangeCounts object into an array of objects\n    const ageRangeData = Object.keys(ageRangeCounts).map((key) => ({\n      x: key,\n      y: ageRangeCounts[key],\n    }));\n    console.log(ageRangeData)\n    this.showChart(ageRangeData)\n  }\n  showChart(chartdata: { x: string; y: number }[]) {\n    const that = this;\n    const options: ApexCharts.ApexOptions = {\n      chart: {\n        type: 'bar',\n        height: '600',\n\n        events: {\n          click(event, chartContext, config) {\n            that.sendBarToDashboard.emit(config.config.series[config.seriesIndex].data[config.dataPointIndex])\n          },\n        },\n      },\n      title: {\n        text: 'Age Info',\n      },\n      plotOptions: {\n\n        bar: {\n          horizontal: false\n        },\n      },\n      series: [{\n        data: chartdata\n      }],\n      yaxis:\n      {\n        title: {\n          text: \"No.of.Users\",\n          style: {\n            color: '#F31C1C',\n            fontSize: '12px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fontWeight: 600,\n            cssClass: 'apexcharts-yaxis-title',\n          },\n        },\n      },\n      xaxis:\n      {\n        title: {\n          text: \"Age Classes\",\n          style: {\n            color: '#F31C1C',\n            fontSize: '12px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fontWeight: 600,\n            cssClass: 'apexcharts-yaxis-title',\n          },\n        },\n\n      },\n\n    };\n\n    if (!this.isLoaded) {\n      this.chartObj = new ApexCharts(document.querySelector(\"#barChart\"), options);\n      this.chartObj.render();\n      this.isLoaded = true;\n      console.log(chartdata)\n\n    }\n    else {\n      this.chartObj.destroy();\n      this.chartObj = new ApexCharts(document.querySelector(\"#barChart\"), options);\n\n      this.chartObj.render();\n      console.log(chartdata)\n      // console.log(this.isLoaded)\n    }\n  }\n}\n","<div id=\"barChart\">\n\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport ApexCharts from 'apexcharts';\nimport { Data } from 'src/app/_models/datingData';\n@Component({\n  selector: 'app-relation-status-pie-chart',\n  templateUrl: './relation-status-pie-chart.component.html',\n  styleUrls: ['./relation-status-pie-chart.component.css']\n})\nexport class RelationStatusPieChartComponent implements OnInit {\n  @Input() receivedData: Data;\n  @Output() sendStatusPieToDashboard: EventEmitter<string> = new EventEmitter();\n\n  data: Data;\n  chartObj: ApexCharts;\n  isLoaded: boolean = false;\n  ngOnInit(): void {\n    this.chart(this.receivedData);\n  }\n  chart(Edata:Data) {\n    const data = Object.values(Edata);\n\n    // Initialize variables to count the relationship status categories\n    let seeingSomeoneCount = 0;\n    let singleCount = 0;\n    let marriedCount = 0;\n    let availableCount = 0;\n\n    data.forEach((profile) => {\n      const status = profile.status.toLowerCase(); // Ensure the status values are in lowercase for consistency\n      if (status === 'seeing someone') {\n        seeingSomeoneCount++;\n      } else if (status === 'single') {\n        singleCount++;\n      } else if (status === 'married') {\n        marriedCount++;\n      } else if (status === 'available') {\n        availableCount++;\n      }\n    });\n\n    // Create an array of objects for the pie chart\n    const relationshipStatusData = [\n      seeingSomeoneCount, singleCount, marriedCount, availableCount\n    ];\n    this.showChart(relationshipStatusData)\n  }\n  showChart(relationshipStatusData: number[]) {\n\n    const that = this;\n\n    const options: ApexCharts.ApexOptions = {\n      series: relationshipStatusData,\n      chart: {\n        type: \"pie\",\n        height: '300',\n        events: {\n          dataPointSelection: function (event, chartContext, config) {\n            that.sendStatusPieToDashboard.emit(['seeing someone', 'single', 'married', 'available'][config.dataPointIndex])\n            // console.log([\"Seeing Someone\", \"Single\", \"Married\", \"Available\"][config.dataPointIndex]);\n          },\n        },\n      },\n      title: {\n        text: 'Relation status',\n      },\n      labels: [\"Seeing Someone\", \"Single\", \"Married\", \"Available\"],\n\n\n    };\n    if (!this.isLoaded) {\n      this.chartObj = new ApexCharts(document.querySelector(\"#relationChart\"), options);\n      this.chartObj.render();\n      this.isLoaded = true;\n      console.log(relationshipStatusData)\n\n    }\n    else {\n      this.chartObj.destroy();\n      this.chartObj = new ApexCharts(document.querySelector(\"#relationChart\"), options);\n\n      this.chartObj.render();\n      console.log(relationshipStatusData)\n      console.log(this.isLoaded)\n    }\n  }\n\n}\n","<div id=\"relationChart\">\n\n</div>","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport ApexCharts from 'apexcharts';\nimport { Data } from 'src/app/_models/datingData';\n@Component({\n  selector: 'app-sex-pie-chart',\n  templateUrl: './sex-pie-chart.component.html',\n  styleUrls: ['./sex-pie-chart.component.css']\n})\nexport class SexPieChartComponent implements OnInit {\n  @Output() sendSexPieToDashboard: EventEmitter<string> = new EventEmitter();\n\n\n  data: Data;\n  @Input() receivedData: Data;\n  isLoaded: boolean = false;\n  chartObj: ApexCharts;\n\n  ngOnInit(): void {\n    this.chart(this.receivedData);\n  }\n  chart(Rdata: Data) {\n    const data = Object.values(Rdata);\n\n    // Initialize variables to count the gender categories\n    let maleCount = 0;\n    let femaleCount = 0;\n\n    data.forEach((profile) => {\n      const gender = profile.sex.toLowerCase(); // Ensure the gender values are in lowercase for consistency\n      if (gender === 'm' || gender === 'male') {\n        maleCount++;\n      } else if (gender === 'f' || gender === 'female') {\n        femaleCount++;\n      }\n    });\n\n    // Create an array with the count of males and females\n    const genderData = [maleCount, femaleCount];\n    this.showChart(genderData)\n  }\n\n  showChart(genderData: number[]) {\n    const that = this;\n\n    const options: ApexCharts.ApexOptions = {\n      series: genderData,\n      chart: {\n        type: \"pie\",\n        height: '300',\n        events: {\n          dataPointSelection: function (event, chartContext, config) {\n            that.sendSexPieToDashboard.emit([\"Male\", \"Female\"][config.dataPointIndex])\n            // console.log([\"Male\", \"Female\"][config.dataPointIndex]);\n          },\n        },\n\n      },\n\n      title: {\n        text: 'Sex Info',\n      },\n      labels: [\"Male\", \"Female\"],\n\n    };\n\n    if (!this.isLoaded) {\n      this.chartObj = new ApexCharts(document.querySelector(\"#sexChart\"), options);\n      this.chartObj.render();\n      this.isLoaded = true;\n      console.log(genderData)\n\n    }\n    else {\n      this.chartObj.destroy();\n      this.chartObj = new ApexCharts(document.querySelector(\"#sexChart\"), options);\n\n      this.chartObj.render();\n      console.log(genderData)\n      console.log(this.isLoaded)\n    }\n  }\n}\n","<div id=\"sexChart\">\n\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport jsonData from '../charts/okcupid_profiles.json';\nimport { Data } from '../_models/datingData'\nimport { RelationStatusPieChartComponent } from '../charts/relation-status-pie-chart/relation-status-pie-chart.component';\nimport { SexPieChartComponent } from '../charts/sex-pie-chart/sex-pie-chart.component';\nimport { AgeBarChartComponent } from '../charts/age-bar-chart/age-bar-chart.component';\n// import { readData } from './dataRead'\n// import jsonData from './okcupid_profiles.json';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // jsonData: Data;\n  ChartData: Data;\n  @ViewChild('barchart1') ageBarChart: AgeBarChartComponent;\n  @ViewChild(RelationStatusPieChartComponent) statusPieChart: RelationStatusPieChartComponent;\n  @ViewChild(SexPieChartComponent) sexPieChart: SexPieChartComponent;\n  constructor() {\n    // ...\n  }\n  updateFromSexPieChart(gender: string) {\n    // Filter the data based on the gender\n    let sex = 'm';\n    if (gender === 'female') {\n      sex = 'female'\n    }\n    const filteredData = Object.values(jsonData).filter((profile) => {\n      return profile.sex === sex;\n    });\n    console.log(filteredData)\n    this.ChartData = filteredData as unknown as Data;\n    this.ageBarChart.chart(this.ChartData)\n    this.statusPieChart.chart(this.ChartData)\n  }\n  updateFromStatusPieChart(status: string) {\n    // Filter the data based on the status\n    const filteredData = Object.values(jsonData).filter((profile) => {\n      return profile.status === status;\n    });\n    console.log(filteredData)\n    this.ChartData = filteredData as unknown as Data;\n    this.ageBarChart.chart(this.ChartData)\n    this.sexPieChart.chart(this.ChartData)\n  }\n  // jData: Data = jsonData;\n  updateFromBarChart(data: { x: string; y: number }) {\n    const ageRange = data.x; // e.g., '20-30'\n    const ageRangeParts = ageRange.split('-');\n    const minAge = parseInt(ageRangeParts[0]);\n    const maxAge = parseInt(ageRangeParts[1]);\n\n    // Filter the data based on the age range\n    const filteredData = Object.values(jsonData).filter((profile) => {\n      const age = parseInt(profile.age);\n      return !isNaN(age) && age >= minAge && age <= maxAge;\n    });\n\n    //filteredData contains profiles within the specified age range\n\n    // console.log(\"Filtered Data:\", filteredData);\n    this.ChartData = filteredData as unknown as Data;\n    // this.sendtoPieCharts.emit(this.pieChartData);\n    this.sexPieChart.chart(this.ChartData)\n    this.statusPieChart.chart(this.ChartData)\n  }\n  ngOnInit(): void {\n    this.ChartData = jsonData as unknown as Data;\n\n  }\n\n\n}\n\n\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <app-age-bar-chart [receivedData]=\"ChartData\" #barchart1 (sendBarToDashboard)=\"updateFromBarChart($event)\"></app-age-bar-chart>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"pie-chart-container\">\n        <app-sex-pie-chart [receivedData]=\"ChartData\" (sendSexPieToDashboard)=\"updateFromSexPieChart($event)\"></app-sex-pie-chart>\n      </div>\n      <div class=\"pie-chart-container\">\n        <app-relation-status-pie-chart [receivedData]=\"ChartData\" (sendStatusPieToDashboard)=\"updateFromStatusPieChart($event)\"></app-relation-status-pie-chart>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent {\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not Found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink=\"/\">Return to Home page </button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.['error'];\r\n    console.log(this.error)\r\n  }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<h4>Internal Server Error - refreshing the page will make the error disappear</h4>\r\n<ng-container *ngIf=\"error\">\r\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note : if you are seeing this then angular probably not to blame</p>\r\n    <p>What to do next</p>\r\n    <ol>\r\n        <li>Open chrome dev tools! Then check the failing request in the network</li>\r\n        <li>Examine the request URL - what API endpoint are you requesting?</li>\r\n        <li>Reproduce the problem in postman - if we get same error angular is 100% not the problem </li>\r\n\r\n    </ol>\r\n    <p style=\"font-weight : bold ;\">Folloing is the stack trace - the first lines will tell you which line cause error\r\n    </p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">\r\n    {{error.details}}\r\n    </code>\r\n\r\n</ng-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-error',\r\n  templateUrl: './test-error.component.html',\r\n  styleUrls: ['./test-error.component.css']\r\n})\r\nexport class TestErrorComponent {\r\n\r\n  validationErrors: string[] = [];\r\n  baseUrl = 'https://localhost:5001/api/';\r\n  constructor(private http: HttpClient) { }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe({\r\n      next: response => console.log(response),\r\n      error: error => console.log(error)\r\n    })\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe({\r\n      next: response => console.log(response),\r\n      error: error => console.log(error)\r\n    })\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe({\r\n      next: response => console.log(response),\r\n      error: error => console.log(error)\r\n    })\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe({\r\n      next: response => console.log(response),\r\n      error: error => console.log(error)\r\n    })\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe({\r\n      next: response => console.log(response),\r\n      error: error => {\r\n        console.log(error);\r\n        this.validationErrors = error;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n    <button class=\"btn btn-outline-primary me-3\" (click)=\"get404Error()\">Test 404 Error</button>\r\n    <button class=\"btn btn-outline-primary me-3\" (click)=\"get400Error()\">Test 400 Error</button>\r\n    <button class=\"btn btn-outline-primary me-3\" (click)=\"get500Error()\">Test 500 Error</button>\r\n    <button class=\"btn btn-outline-primary me-3\" (click)=\"get401Error()\">Test 401 Error</button>\r\n    <button class=\"btn btn-outline-primary me-3\" (click)=\"get400ValidationError()\">Test 400 validation Error</button>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  loginMode: boolean = false;\r\n  registerMode = false;\r\n  users: any;\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    // this.getUsers();\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n    this.loginMode = false;\r\n  }\r\n  loginToggle() {\r\n    this.loginMode = !this.loginMode;\r\n    this.registerMode = false;\r\n  }\r\n\r\n  // getUsers() {\r\n  //   this.http.get('https://localhost:5001/api/users').subscribe({\r\n  //     next: res => this.users = res,\r\n  //     error: error => console.log(error),\r\n  //     complete: () => console.log(\"Request Completed ...!\")\r\n\r\n  //   })\r\n  // }\r\n\r\n  cancelRegisterMode(event: boolean) {\r\n    this.registerMode = event;\r\n  }\r\n  cancelLoginMode(event: boolean) {\r\n    this.loginMode = event;\r\n\r\n  }\r\n}\r\n","<div class=\"container mt-3\">\r\n    <div *ngIf=\"!registerMode && !loginMode\" style=\"text-align: center;\">\r\n        <h3>Find your match</h3>\r\n        <h3>Only on</h3>\r\n        <h2 class=\"text-danger\">Heart To Heart</h2>\r\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\r\n        <div class=\"text-center\">\r\n            <button (click)=\"loginToggle()\" class=\"btn btn-success btn-lg me-2\"> Login</button>\r\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg me-2\"> Register</button>\r\n            <button class=\"btn btn-primary btn-info btn-lg\" routerLink=\"/about\" >Learn more</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"loginMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-6\">\r\n                <app-login (cancelLogin)=\"cancelLoginMode($event)\"></app-login>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\nimport { Pagination } from '../_models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent {\r\n  members: Member[] | undefined;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination | undefined;\r\n\r\n  constructor(private memberService: MembersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe({\r\n      next: response => {\r\n        this.members = response.result;\r\n        this.pagination = response.pagination;\r\n      }\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadLikes();\r\n    }\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <div class=\"d-flex\">\r\n        <div class=\"btn-group\" name=\"predicate\">\r\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I\r\n                like</button>\r\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\" [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who\r\n                like me</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-2\" *ngFor=\"let member of members\">\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" [maxSize]=\"10\" previousText=\"&lsaquo;\"\r\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Output() cancelLogin = new EventEmitter();\n\n  model: any = {};\n  constructor(public accountServices: AccountService, private router: Router, private toastr: ToastrService) {\n\n  }\n  ngOnInit(): void {\n    // this.getCurrentUser()\n    this.accountServices.currentUser$ = this.accountServices.currentUser$;\n  }\n\n  login() {\n    this.accountServices.login(this.model).subscribe({\n      next: () => this.router.navigateByUrl('/members'),\n      // error: error => this.toastr.error(error.error)\n    })\n\n  }\n\n  cancel() {\n    this.cancelLogin.emit(false);\n  }\n\n}\n","<form #loginFrom=\"ngForm\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n\n    <h2 class=\"text-center text-primary\">Login</h2>\n    <hr>\n\n    <div class=\"row mb-3\">\n        <div class=\"col-md-6 mb-3\">\n            <label for=\"username\">Username</label>\n            <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control me-2\" type=\"text\"\n                placeholder=\"Username\">\n        </div>\n        <div class=\"col-md-6 mb-3\">\n            <label for=\"password\">Password</label>\n            <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control me-2\" type=\"password\"\n                placeholder=\"Password\">\n        </div>\n    </div>\n    <div class=\"text-center\">\n        <button class=\"btn btn-success me-2\" type=\"submit\">Login</button>\n        <button class=\"btn btn-default\" (click)=\"cancel()\" type=\"submit\">Cancel</button>\n    </div>\n\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n  // encapsulation : ViewEncapsulation.None // to aplly member-card-css to eveywhere in project\r\n\r\n})\r\nexport class MemberCardComponent implements OnInit{\r\n  @Input() member: Member;\r\n  \r\n  constructor(private memberService: MembersService, private toastr: ToastrService,\r\n    public presenceService: PresenceService) { }\r\n    ngOnInit(): void {\r\n      // console.log(this.member)\r\n    }\r\n    \r\n    ToggleLike(member: Member) {\r\n      if (member.liked) {\r\n        this.removeLike(member)\r\n      }\r\n      else {\r\n        this.addLike(member)\r\n      }\r\n  }\r\n  \r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.userName).subscribe({\r\n      next: () => {\r\n        // this.toastr.success('You have liked ' + member.knownAs)\r\n        this.member.liked = true;\r\n      }\r\n    })\r\n  }\r\n  removeLike(member: Member) {\r\n    this.memberService.removeLike(member.userName).subscribe({\r\n      next: () => {\r\n        // this.toastr.success('you have removed like of ' + member.knownAs )\r\n        this.member.liked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4 bg-transparent text-primary\" *ngIf=\"member\" >\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink=\"/members/{{member.userName}}\" class=\"btn btn-primary\"><i\r\n                        class=\"fa fa-user\"></i></button>\r\n            </li>\r\n        <li class=\"list-inline-item\">\r\n            <button (click)=\"ToggleLike(member)\" class=\"btn btn-primary\" [ngClass]=\"{'text-danger': member.liked}\">\r\n                <i class=\"fa fa-heart\"></i>\r\n            </button>\r\n        </li>\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink=\"/members/{{member.userName}}\" [queryParams]=\"{tab: 'Messages'}\"\r\n                    class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-envelope\"></i>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1 \">\r\n        <h6 class=\"card-title text-center mb-1\">\r\n            <span [class.is-online]=\"(presenceService.onlineUsers$ | async)?.includes(member.userName)\">\r\n                <i class=\"fa fa-user me-2\"></i>\r\n            </span>\r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center \">{{member.city}}</p>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GalleryItem, GalleryModule, ImageItem } from 'ng-gallery';\r\nimport { TabDirective, TabsModule, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MemberMessagesComponent } from '../member-messages/member-messages.component';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs';\r\nimport { MessagesService } from 'src/app/_services/messages.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  standalone: true,\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css'],\r\n  imports: [CommonModule, TabsModule, GalleryModule, TimeagoModule, MemberMessagesComponent]\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', { static: true }) memberTabs?: TabsetComponent;\r\n  member: Member = {} as Member;\r\n  images: GalleryItem[] = [];\r\n  activeTab?: TabDirective;\r\n  messages: Message[] = [];\r\n  user?: User;\r\n\r\n  constructor(private memberService: MembersService, private toastr: ToastrService, public presenceService: PresenceService, private route: ActivatedRoute,\r\n    private messageService: MessagesService, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n        if (user) this.user = user;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n    this.route.data.subscribe({\r\n      next: data => {\r\n        this.member = data[0],\r\n          console.log(data[0])\r\n      }\r\n\r\n    })\r\n\r\n    this.route.queryParams.subscribe({\r\n      next: params => {\r\n        params['tab'] && this.selectTab(params['tab'])\r\n      }\r\n    })\r\n\r\n    this.getImages()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n  loadMessages() {\r\n    if (this.member)\r\n      this.messageService.getMessageThread(this.member.userName).subscribe({\r\n        next: messages => this.messages = messages\r\n      })\r\n  }\r\n\r\n  selectTab(heading: string) {\r\n    if (this.memberTabs) {\r\n      this.memberTabs.tabs.find(x => x.heading === heading)!.active = true;\r\n    }\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.user) {\r\n      this.messageService.createHubConnection(this.user, this.member.userName);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  getImages() {\r\n    if (!this.member) return;\r\n    for (const photo of this.member?.photos) {\r\n      this.images.push(new ImageItem({ src: photo.url, thumb: photo.url }));\r\n    }\r\n  }\r\n\r\n  ToggleLike(member: Member) {\r\n    if (member.liked) {\r\n      this.removeLike(member)\r\n    }\r\n    else {\r\n      this.addLike(member)\r\n    }\r\n  }\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.userName).subscribe({\r\n      next: () => {\r\n        // this.toastr.success('You have liked ' + member.knownAs)\r\n        this.member.liked = true;\r\n      }\r\n    })\r\n  }\r\n  removeLike(member: Member) {\r\n    this.memberService.removeLike(member.userName).subscribe({\r\n      next: () => {\r\n        // this.toastr.success('you have removed like of ' + member.knownAs)\r\n        this.member.liked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <div class=\"card border-primary bg-transparent text-dark\">\r\n            <img [src]=\"member.photoUrl || './assets/user.png'\" [alt]=\"member.knownAs\"\r\n                class=\"card-img-top img-thumbnail img-fluid\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(member.userName)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online \r\n                </div>\r\n                <div *ngIf=\"!(presenceService.onlineUsers$ | async)?.includes(member.userName)\">\r\n                    <strong>Last active:</strong>\r\n                    <p *ngIf=\"member.lastActive\">{{member.lastActive | timeago}}\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <!-- <div *ngIf=\"(presenceService.onlineUsers$ | async)?.includes(member.userName)\">\r\n                    <strong>Last active:</strong>\r\n                    <p><i class=\"fa fa-user-circle text-success\"></i> Online</p>\r\n                </div> -->\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date:'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer border-primary bg-transparent text-dark\">\r\n                <div class=\"btn-group d-flex \">\r\n                    <button #bt1 *ngIf=\"member.liked\" class=\"btn btn-white border\" [ngClass]=\"{'btn-danger': member.liked}\" (click)=\"ToggleLike(member)\">Liked</button>\r\n                    <button *ngIf=\"!(member.liked)\" class=\"btn btn-white border border-primary\" [ngClass]=\"{'btn-danger': member.liked}\" (click)=\"ToggleLike(member)\">Like</button>\r\n                    <button (click)=\"selectTab('Messages')\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-8 \" style=\"background-color: rgba(0, 0, 0, 0);\">\r\n        <tabset class=\"member-tabset\" #memberTabs >\r\n            <tab heading=\"About {{member.knownAs}}\" (selectTab)=\"onTabActivated($event)\" style=\"background-color: rgba(0, 0, 0, 0);\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading=\"Photos\" #photoTab=\"tab\" (selectTab)=\"onTabActivated($event)\">\r\n                <gallery *ngIf=\"photoTab.active\" [items]=\"images\" class=\"gallery img-fluid\"></gallery>\r\n            </tab>\r\n            <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.userName\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { NgFor } from '@angular/common';\r\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm | undefined;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n    if (this.editForm?.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n  member: Member | undefined;\r\n  user: User | null = null;\r\n  /**\r\n   *\r\n   */\r\n  constructor(private accountService: AccountService, private memberServices: MembersService, private toastr: ToastrService) {\r\n    accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => this.user = user\r\n    })\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.loadMember()\r\n  }\r\n\r\n  loadMember() {\r\n    if (!this.user) return;\r\n    this.memberServices.getMember(this.user.username).subscribe({\r\n      next: member => this.member = member\r\n    })\r\n  }\r\n  updateMember() {\r\n    this.memberServices.updateMember(this.editForm?.value).subscribe({\r\n      next: _ => {\r\n        this.toastr.success('Profile Updated Sucessfully')\r\n        this.editForm?.reset(this.member);\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-12 col-md-4 mb-4\">\r\n        <h1>Your profile</h1>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n        <div class=\"alert alert-info pb-0\" *ngIf=\"editForm.dirty\">\r\n            <p><strong>Information: </strong>You have made changes. Any unsaved changes will be lost</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-4 mb-4\">\r\n        <div class=\"card\">\r\n            <img [src]=\"member.photoUrl || './assets/user.png'\" [alt]=\"member.knownAs\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date:'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" type=\"submit\" form=\"editForm\" class=\"btn btn-success col-12\">Save\r\n                    Changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-md-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading=\"About {{member.knownAs}}\">\r\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4 class=\"mt-2\">Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\"\r\n                        rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\"\r\n                        rows=\"6\"></textarea>\r\n                    <h4>Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details: </h4>\r\n                    <div class=\"d-flex flex-row align-items-center\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"country\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n            </tab>\r\n            <tab heading=\"Edit Photos\">\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit{\r\n  members: Member[] = [];\r\n  pagination: Pagination | undefined;\r\n  userParams: UserParams | undefined;\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }]\r\n\r\n  constructor(private memberService: MembersService) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.member$ = this.memberService.getMembers();\r\n    this.loadMembers()\r\n  }\r\n\r\n  loadMembers() {\r\n    if (this.userParams) {\r\n      this.memberService.setUserParams(this.userParams);\r\n      this.memberService.getMembers(this.userParams).subscribe({\r\n        next: (response: { result: Member[]; pagination: Pagination | undefined; }) => {\r\n          if (response.result && response.pagination) {\r\n            this.members = response.result;\r\n            this.pagination = response.pagination;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.userParams && this.userParams?.pageNumber !== event.page) {\r\n      this.memberService.setUserParams(this.userParams);\r\n      this.userParams.pageNumber = event.page;\r\n      this.loadMembers();\r\n    }\r\n  }\r\n}\r\n","<div class=\"container mt-3\" *ngIf=\"userParams\">\r\n    <!-- Uncommented the following block -->\r\n    <!-- <div class=\"text-center mt-3\">\r\n        <h2>{{pagination?.totalItems}} matches found</h2>\r\n    </div> -->\r\n\r\n    <form #form=\"ngForm\" class=\"d-flex flex-wrap mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\r\n        <div class=\"d-flex mx-2 mb-2\">\r\n            <label class=\"col-form-label me-2\">Age from:</label>\r\n            <input type=\"number\" class=\"form-control border border-primary bg-transparent\" style=\"width: 70px;\" name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\r\n        </div>\r\n\r\n        <div class=\"d-flex mx-2 mb-2\">\r\n            <label class=\"col-form-label me-2\">Age to:</label>\r\n            <input type=\"number\" class=\"form-control border border-primary bg-transparent\" style=\"width: 70px;\" name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\r\n        </div>\r\n\r\n        <div class=\"d-flex mx-2 mb-2\">\r\n            <label class=\"col-form-label me-2\">Show:</label>\r\n            <select name=\"gender\" class=\"form-select border border-primary bg-transparent\" style=\"width: 130px;\" [(ngModel)]=\"userParams.gender\">\r\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n                    {{gender.display}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary mx-2 \" type=\"submit\">Apply Filters</button>\r\n        <button (click)=\"resetFilters()\" class=\"btn btn-info mx-2\" type=\"submit\">Reset Filters</button>\r\n\r\n        <!-- <div class=\"btn-group ms-auto mb-2\">\r\n        <button type=\"button\" class=\"btn btn-primary\" name=\"orderBy\" (click)=\"loadMembers()\" btnRadio=\"lastActive\"\r\n            [(ngModel)]=\"userParams.orderBy\">Last Active</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" name=\"orderBy\" (click)=\"loadMembers()\" btnRadio=\"created\"\r\n            [(ngModel)]=\"userParams.orderBy\">Newest members</button>\r\n        </div> -->\r\n    </form>\r\n\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let member of members\" class=\"col\">\r\n            <!-- Adjusted col-2 to col-md-6 for medium screens and col-lg-4 for large screens -->\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-end\" *ngIf=\"pagination\">\r\n        <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n            [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" [maxSize]=\"4\" previousText=\"&lsaquo;\"\r\n            nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n        </pagination>\r\n    </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { MessagesService }from '../../_services/messages.service'\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  standalone: true,\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n  imports: [CommonModule, TimeagoModule, FormsModule]\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm?: NgForm;\r\n  @Input() username?: string;\r\n  messageContent = '';\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    if (!this.username) return;\r\n    this.loading = true;\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm?.reset();\r\n    }).finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"card border-primary bg-transparent text-dark\">\r\n    <div class=\"card-body\" #scrollMe style=\"overflow: scroll; height: 500px;\" [scrollTop]=\"scrollMe.scrollHeight\">\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul *ngIf=\"(messageService.messageThread$ | async)!.length > 0\" class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-end\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\r\n                            alt=\"image of user\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">(unread)</span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">(read\r\n                                    {{message.dateRead | timeago}})</span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input name=\"messageContent\" required [(ngModel)]=\"messageContent\" type=\"text\"\r\n                    class=\"form-control input-sm\" placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">\r\n                        Send <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member | undefined;\r\n  uploader: FileUploader | undefined;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User | undefined;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService, private router: Router) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe({\r\n      next: user => {\r\n        if (user) this.user = user;\r\n      }\r\n    })\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.initilizeUploader();\r\n  }\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe({\r\n      next: _ => {\r\n        if (this.user && this.member) {\r\n          this.user.photoUrl = photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n          this.member.photoUrl = photo.url;\r\n          this.member.photos.forEach(p => {\r\n            if (p.isMain) p.isMain = false;\r\n            if (p.id === photo.id) p.isMain = true;\r\n          })\r\n          this.router.navigateByUrl(`/member/edit`);\r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe({\r\n      next: _ => {\r\n        if (this.member) {\r\n          this.member.photos = this.member?.photos.filter(x => x.id !== photoId)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  initilizeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user?.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false\r\n    }\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo = JSON.parse(response);\r\n        this.member?.photos.push(photo);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-2 mb-1\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"photo of user\" class=\"img-thumbnail mb-1\">\r\n        <div class=\"text-center\">\r\n            <button class=\"btn btn-sm\" [disabled]=\"photo.isMain\" (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'>\r\n                Main\r\n            </button>\r\n            <button [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\" class=\"btn btn-sm btn-danger\"><i\r\n                    class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n\r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver }\" (fileOver)=\"fileOverBase($event)\"\r\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n            <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th width=\"50%\">Name</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of uploader?.queue\">\r\n                    <td><strong>{{ item?.file?.name }}</strong></td>\r\n                    <td *ngIf=\"uploader?.options?.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader?.progress + '%' }\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader?.uploadAll()\"\r\n                [disabled]=\"!uploader?.getNotUploadedItems()?.length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader?.cancelAll()\"\r\n                [disabled]=\"!uploader?.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader?.clearQueue()\"\r\n                [disabled]=\"!uploader?.queue?.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MessagesService } from '../_services/messages.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent {\r\n  messages?: Message[] = [];\r\n  pagination?: Pagination;\r\n  container = \"Unread\";\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n    console.log(\"msg Works\")\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe({\r\n      next: response => {\r\n        this.messages = response.result;\r\n        this.pagination = response.pagination;\r\n        this.loading = false;\r\n        console.log(response.result)\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.messageService.deleteMessage(id).subscribe({\r\n      next: _ => this.messages?.splice(this.messages.findIndex(m => m.id === id), 1)\r\n    })\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n}\r\n","<div class=\"mb-4 d-flex \" >\r\n    <div class=\"btn-group\" name=\"container\">\r\n        <button class=\"btn btn-primary\" btnRadio=\"Unread\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope\"></i> Unread\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio=\"Inbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-envelope-open\"></i> Inbox\r\n        </button>\r\n        <button class=\"btn btn-primary\" btnRadio=\"Outbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">\r\n            <i class=\"fa fa-paper-plane\"></i> Outbox\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"!messages || messages.length === 0\">\r\n    <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row border-primary bg-transparent text-dark\" *ngIf=\"messages && messages.length !== 0\">\r\n    <table class=\"table table-hover border-primary bg-transparent text-dark\" style=\"cursor: pointer\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 40%\">Message</th>\r\n                <th style=\"width: 20%\">From / To</th>\r\n                <th style=\"width: 20%\">Sent / Received</th>\r\n                <th style=\"width: 20%\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"align-middle\">\r\n            <tr [hidden]=\"loading\" *ngFor=\"let message of messages\"\r\n                routerLink=\"{{container === 'Outbox' ? '/members/' + message.recipientUsername : '/members/' + message.senderUsername}}\"\r\n                [queryParams]=\"{tab: 'Messages'}\">\r\n                <td>{{message.content}}</td>\r\n                <td>\r\n                    <div *ngIf=\"container === 'Outbox' else inbox\">\r\n                        <img class=\"img-circle rounded-circle me-2\"\r\n                            src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" alt=\"recipient photo\">\r\n                        <strong>{{message.recipientUsername | titlecase}}</strong>\r\n                    </div>\r\n                    <ng-template #inbox>\r\n                        <img class=\"img-circle rounded-circle me-2\"\r\n                            src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" alt=\"sender photo\">\r\n                        <strong>{{message.senderUsername | titlecase}}</strong>\r\n                    </ng-template>\r\n                </td>\r\n                <td>{{message.messageSent | timeago}}</td>\r\n                <td>\r\n                    <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\"\r\n                        class=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-end\" *ngIf=\"!loading && pagination && messages && messages.length > 0\">\r\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\r\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" [maxSize]=\"10\" previousText=\"&lsaquo;\"\r\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>","import { Component } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  title = '';\r\n  message = '';\r\n  btnOkText = '';\r\n  btnCancelText = '';\r\n  result = false;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.bsModalRef.hide()\r\n  }\r\n\r\n  decline() {\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <p>{{message}}</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent {\r\n  username = '';\r\n  availableRoles: any[] = [];\r\n  selectedRoles: any[] = [];\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  updateChecked(checkedValue: string) {\r\n    const index = this.selectedRoles.indexOf(checkedValue);\r\n    index !== -1 ? this.selectedRoles.splice(index, 1) : this.selectedRoles.push(checkedValue);\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{username}}</h4>\r\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n        <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n        <div class=\"form-check\" *ngFor=\"let role of availableRoles\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" [checked]=\"selectedRoles.includes(role)\" value=\"role\"\r\n                (change)=\"updateChecked(role)\" [disabled]=\"role === 'Admin' && username === 'admin'\">\r\n            <label>{{role}}</label>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"bsModalRef.hide()\">Submit</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent {\r\n\r\n  model: any = {};\r\n\r\n\r\n  constructor(public accountServices: AccountService, private router: Router,private toastr : ToastrService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    // this.getCurrentUser()\r\n    // this.currentUser$ = this.accountServices.currentUser$;\r\n  }\r\n  // getCurrentUser() {\r\n  //   this.accountServices.currentUser$.subscribe({\r\n  //     next: user => this.loggedIn = !!user,\r\n  //     error: error => console.error()\r\n\r\n  //   })\r\n  // }\r\n  // login() {\r\n  //   this.accountServices.login(this.model).subscribe({\r\n  //     next: () => this.router.navigateByUrl('/members'),\r\n  //     // error: error => this.toastr.error(error.error)\r\n  //     })\r\n\r\n  // }\r\n  logout() {\r\n    this.accountServices.logout();\r\n    this.router.navigateByUrl('/register')\r\n  }\r\n}\r\n\r\n\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\"\r\n    style=\"background: linear-gradient(90deg, rgba(62,109,250,1) 0%, rgba(22,9,78,1) 100%);\">\r\n    <div class=\"container\">\r\n    <a *ngIf=\"!(accountServices.currentUser$ | async)\" class=\"navbar-brand\" routerLink=\"/register\"\r\n        routerLinkActive=\"active\">\r\n        <img src=\"assets/logo.png\" alt=\"Brand Logo\" class=\"img-fluid\">\r\n    </a>\r\n    \r\n    <a *ngIf=\"accountServices.currentUser$ | async\" class=\"navbar-brand\" routerLink=\"/members\" routerLinkActive=\"active\">\r\n        <img src=\"assets/logo.png\" alt=\"Brand Logo\" class=\"img-fluid\">\r\n    </a>\r\n\r\n\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n                <ng-container *ngIf=\"accountServices.currentUser$ | async\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Matches</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\">Lists</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\">Messages</a>\r\n                    </li>\r\n                    <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\r\n                        <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\r\n                    </li>\r\n                    <li *appHasRole=\"['Admin', 'Moderator']\" class=\"nav-item\">\r\n                        <a class=\"nav-link\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\r\n                    </li>\r\n                </ng-container>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\">Errors</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\"dropdown\" *ngIf=\"(accountServices.currentUser$ | async) as user\" dropdown>\r\n                <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"user photo\"\r\n                    class=\"img-fluid dropdown-toggle rounded-circle\" dropdownToggle>\r\n                <div class=\"dropdown-menu\" *dropdownMenu>\r\n                    <h6 class=\"dropdown-header\"> &nbsp; {{ user.knownAs }}</h6>\r\n                    <h6 class=\"dropdown-header\">&#x40;{{ user.username }}</h6>\r\n                    <hr>\r\n                    <a routerLink=\"/member/edit\" class=\"dropdown-item\"> Edit Profile</a>\r\n                    <a class=\"dropdown-item\" (click)=\"logout()\"> Logout</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup = new FormGroup({});\r\n  maxDate: Date = new Date();\r\n  validationErrors: string[] | undefined;\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService,\r\n    private fb: FormBuilder, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\r\n    });\r\n    this.registerForm.controls['password'].valueChanges.subscribe({\r\n      next: () => this.registerForm.controls['confirmPassword'].updateValueAndValidity()\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.get(matchTo)?.value ? null : { isMatching: true }\r\n    }\r\n  }\r\n\r\n  register() {\r\n    const dob = this.GetDateOnly(this.registerForm.controls['dateOfBirth'].value)\r\n    const values = { ...this.registerForm.value, dateOfBirth: this.GetDateOnly(dob) }\r\n    this.accountService.register(values).subscribe({\r\n      next: response => {\r\n        this.router.navigateByUrl('/members');\r\n      },\r\n      error: error => {\r\n        this.validationErrors = error;\r\n      }\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n  private GetDateOnly(dob: string | undefined) {\r\n    if (!dob) return;\r\n    let theDob = new Date(dob);\r\n    return new Date(theDob.setMinutes(theDob.getMinutes() - theDob.getTimezoneOffset())).toISOString().slice(0, 10);\r\n  }\r\n\r\n}","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">Sign up</h2>\r\n    <hr>\r\n\r\n    <div class=\"mb-3\">\r\n        <label style=\"margin-right: 10px;\">I am a: </label>\r\n        <label class=\"form-check-label\">\r\n            <input class=\"form-check-input\" type=\"radio\" value=\"male\" formControlName=\"gender\"> Male\r\n        </label>\r\n        <label class=\"form-check-label\">\r\n            <input class=\"form-check-input ms-3\" type=\"radio\" value=\"female\" formControlName=\"gender\"> Female\r\n        </label>\r\n    </div>\r\n\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['username'])\" [label]=\"'Username'\"></app-text-input>\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['knownAs'])\" [label]=\"'Known as'\"></app-text-input>\r\n    <app-date-picker [formControl]=\"$any(registerForm.controls['dateOfBirth'])\" [label]=\"'Date of birth'\"\r\n        [maxDate]=\"maxDate\"></app-date-picker>\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['city'])\" [label]=\"'City'\"></app-text-input>\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['country'])\" [label]=\"'Country'\"></app-text-input>\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['password'])\" [label]=\"'Password'\"\r\n        [type]=\"'password'\"></app-text-input>\r\n    <app-text-input [formControl]=\"$any(registerForm.controls['confirmPassword'])\" [label]=\"'Confirm Password'\"\r\n        [type]=\"'password'\"></app-text-input>\r\n\r\n    <div class=\"row\" *ngIf=\"validationErrors\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group text-center\">\r\n        <button [disabled]=\"!registerForm.valid\" class=\"btn btn-success me-2\" type=\"submit\">Register</button>\r\n        <button class=\"btn btn-default me-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport ApexCharts from 'apexcharts';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { UserActivity } from '../_models/userActivity';\r\n@Component({\r\n  selector: 'app-user-tracking',\r\n  templateUrl: './user-tracking.component.html',\r\n  styleUrls: ['./user-tracking.component.css']\r\n})\r\nexport class UserTrackingComponent implements OnInit {\r\n  data: UserActivity[] = [];\r\n\r\n  constructor(private accountService: AccountService) {\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n\r\n    const data = this.accountService.getLoginLogoutHistory();\r\n    console.log(data)\r\n    var chartdata: { x: string; y: number[] }[] = [];\r\n\r\n    if (data) {\r\n      var loginTime = 0;\r\n      for (const activity of data) { //The spread (...) syntax allows an iterable, sprade\r\n        console.log(activity.loggedIn)\r\n\r\n        if (activity.loggedIn === true) {\r\n          const logintimestamp = activity.time;\r\n          const logindate = new Date(logintimestamp);\r\n          const loginhours = logindate.getUTCHours();\r\n          const loginminutes = (logindate.getUTCMinutes()) * (100 / 60) / 100; // 100/60 for getting minutes in 100s\r\n          loginTime = loginhours + loginminutes;\r\n\r\n\r\n        }\r\n        else if (loginTime !== 0) {\r\n          const logouttimestamp = activity.time;\r\n          const logoutdate = new Date(logouttimestamp);\r\n\r\n          const logouthours = logoutdate.getUTCHours();\r\n          const logoutminutes = (logoutdate.getUTCMinutes()) * (100 / 60) / 100; // /100 for convert into hrs.min(in 100s)\r\n          const logoutTime = logouthours + logoutminutes;\r\n          console.log(activity.username)\r\n          chartdata.push({\r\n            x: activity.username, // You can customize the user ID as needed\r\n            y: [loginTime, logoutTime] // You can customize the data values as needed\r\n          });\r\n          loginTime = 0;\r\n        }\r\n      }\r\n      console.log(chartdata)\r\n      this.showChart(chartdata);\r\n    }\r\n  }\r\n\r\n\r\n  showChart(chartdata: { x: string; y: number[] }[]) {\r\n    const options: ApexCharts.ApexOptions = {\r\n      series: [\r\n        {\r\n          data: chartdata\r\n        }\r\n      ],\r\n      chart: {\r\n        height: 630,\r\n        type: 'rangeBar',\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      colors: ['#11F322', '#F31C1C'], //legend color ex. online,offilne\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n          isDumbbell: true,\r\n          dumbbellColors: [['#11F322', '#F31C1C']]  // line end point and start point color\r\n        }\r\n      },\r\n      title: {\r\n        text: 'User Activity'\r\n      },\r\n      legend: {\r\n        show: true,\r\n        showForSingleSeries: true,\r\n        position: 'top',\r\n        horizontalAlign: 'left',\r\n        customLegendItems: ['Online', 'Offline'],\r\n      },\r\n\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          gradientToColors: ['#36cb4a'], // Line color\r\n          inverseColors: false,\r\n          stops: [0, 0]\r\n        }\r\n      },\r\n      grid: {\r\n        xaxis: {\r\n          lines: {\r\n            show: true\r\n          }\r\n        },\r\n        yaxis: {\r\n          lines: {\r\n            show: true\r\n          }\r\n        }\r\n      },\r\n      yaxis:\r\n      {\r\n        min: 0,\r\n        max: 23,\r\n        title: {\r\n          text: \"Users\",\r\n          style: {\r\n            color: '#F31C1C',\r\n            fontSize: '12px',\r\n            fontFamily: 'Helvetica, Arial, sans-serif',\r\n            fontWeight: 600,\r\n            cssClass: 'apexcharts-yaxis-title',\r\n          },\r\n        },\r\n      },\r\n      xaxis:\r\n      {\r\n        min: 0,\r\n        max: 23,\r\n        title: {\r\n          text: \"Clock Time(Hrs)\",\r\n          style: {\r\n            color: '#F31C1C',\r\n            fontSize: '12px',\r\n            fontFamily: 'Helvetica, Arial, sans-serif',\r\n            fontWeight: 600,\r\n            cssClass: 'apexcharts-yaxis-title',\r\n          },\r\n        },\r\n\r\n      },\r\n\r\n    };\r\n\r\n    const chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n    chart.render();\r\n\r\n  }\r\n}\r\n","<div id=\"chart\">\r\n    \r\n</div>","export const environment = {\r\n    production: false,\r\n    apiUrl: 'https://localhost:5001/api/',\r\n    hubUrl: 'https://localhost:5001/hubs/' \r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["take","HasRoleDirective","constructor","viewContainerRef","templateRef","accountService","appHasRole","user","currentUser$","pipe","subscribe","next","ngOnInit","roles","some","r","includes","createEmbeddedView","clear","_","i0","ɵɵdirectiveInject","ViewContainerRef","TemplateRef","i1","AccountService","_2","selectors","inputs","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","label","DatePickerComponent","ngControl","valueAccessor","bsConfig","containerClass","dateInputFormat","writeValue","obj","registerOnChange","fn","registerOnTouched","control","NgControl","maxDate","decls","vars","consts","template","DatePickerComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DatePickerComponent_div_2_Template","ɵɵclassProp","touched","invalid","ɵɵpropertyInterpolate","ɵɵproperty","errors","ɵɵtextInterpolate2","ctx_r1","requiredLength","ctx_r2","TextInputComponent","type","TextInputComponent_Template","TextInputComponent_div_2_Template","TextInputComponent_div_3_Template","TextInputComponent_div_4_Template","TextInputComponent_div_5_Template","inject","ToastrService","map","adminGuard","route","state","toastr","error","Router","authGuard","router","navigate","ConfirmService","preventUnsavedChangesGuard","component","confirmService","editForm","dirty","confirm","registerRoutepreventGuard","catchError","ErrorInterceptor","intercept","request","handle","status","modelStateErrors","key","push","flat","toString","case401","navigateByUrl","navigationExtras","console","log","ɵɵinject","i2","factory","ɵfac","JwtInterceptor","clone","setHeaders","Authorization","token","delay","finalize","LoadingInterceptor","busyService","busy","idle","BusyService","PaginatedResult","UserParams","minAge","maxAge","pageNumber","pageSize","orderBy","gender","CommonModule","BsDropdownModule","TabsModule","ToastrModule","NgxSpinnerModule","FileUploadModule","BsDatepickerModule","PaginationModule","ButtonsModule","TimeagoModule","ModalModule","SharedModule","_3","forRoot","positionClass","imports","i3","i4","i5","i6","i7","i8","i9","exports","MembersService","memberDetailedResolver","memberService","getMember","paramMap","get","BehaviorSubject","environment","http","presenceService","baseUrl","apiUrl","currentUserSource","asObservable","refreshPhoto","login","model","post","response","setCurrentUser","recordLoginAndLogout","username","register","getDecodedToken","role","Array","isArray","localStorage","setItem","JSON","stringify","createHubConnection","logout","removeItem","stopHubConnection","parse","atob","split","loggedIn","currentTimeInUTC","Date","utcOffset","currentTimeInIndia","getTime","time","toISOString","loginLogoutPair","localitem","getItem","loginLogoutHistory","newHistory","getLoginLogoutHistory","localItem","parsedData","HttpClient","PresenceService","providedIn","Error","AdminService","getUsersWithRoles","updateUserRoles","spinner","busyReqCount","show","undefined","fullScreen","bdColor","color","size","hide","NgxSpinnerService","ConfirmDialogComponent","modalService","title","message","btnOkText","btnCancelText","config","initialState","bsModelRef","onHidden","content","result","BsModalService","CustomRouteReuseStrategy","shouldDetach","store","shouldAttach","retrieve","shouldReuseRoute","future","curr","of","getPaginatedResult","getPaginationHeaders","members","memberCache","Map","userParams","getUserParams","setUserParams","resetUserParams","getMembers","Object","values","join","params","append","set","member","reduce","arr","elem","concat","find","userName","updateMember","put","index","indexOf","setMainPhoto","photoId","deletePhoto","delete","addLike","removeLike","getLikes","predicate","HubConnectionBuilder","MessagesService","hubUrl","messageThreadSouce","messageThread$","otherUsername","hubConnection","withUrl","accessTokenFactory","withAutomaticReconnect","build","start","catch","finally","on","messages","group","connections","x","forEach","dateRead","now","stop","getMessages","container","getMessageThread","sendMessage","_this","_asyncToGenerator","invoke","recipientUsername","deleteMessage","id","HttpParams","url","paginatedResult","observe","body","pagination","headers","onlineUsersSource","onlineUsers$","usernames","filter","knownAs","info","onTap","AboutComponent","AboutComponent_Template","AdminPanelComponent","AdminPanelComponent_Template","AdminPanelComponent_tab_4_Template","ɵɵpureFunction0","_c0","PhotoManagementComponent","PhotoManagementComponent_Template","BsModalRef","RolesModalComponent","ɵɵlistener","UserManagementComponent_tr_10_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r3","user_r1","$implicit","ɵɵnextContext","ɵɵresetView","openRolesModal","ɵɵtextInterpolate","UserManagementComponent","adminService","users","bsModalRef","availableRoles","class","selectedRoles","onHide","arrayEqual","arr1","arr2","sort","UserManagementComponent_Template","UserManagementComponent_tr_10_Template","RouterModule","HomeComponent","MemberListComponent","MemberDetailComponent","ListsComponent","MessagesComponent","TestErrorComponent","NotFoundComponent","ServerErrorComponent","MemberEditComponent","UserTrackingComponent","DashboardComponent","routes","path","canActivate","runGuardsAndResolvers","children","resolve","canDeactivate","pathMatch","AppRoutingModule","AppComponent","userString","AppComponent_Template","BrowserModule","HTTP_INTERCEPTORS","HttpClientModule","BrowserAnimationsModule","NavComponent","FormsModule","ReactiveFormsModule","RegisterComponent","MemberCardComponent","PhotoEditorComponent","RouteReuseStrategy","AgeBarChartComponent","SexPieChartComponent","RelationStatusPieChartComponent","LoginComponent","AppModule","bootstrap","provide","useClass","multi","declarations","EventEmitter","ApexCharts","sendBarToDashboard","isLoaded","chart","receivedData","Edata","data","ageRanges","min","max","ageRangeCounts","profile","age","parseInt","isNaN","range","ageRangeData","keys","y","showChart","chartdata","that","options","height","events","click","event","chartContext","emit","series","seriesIndex","dataPointIndex","text","plotOptions","bar","horizontal","yaxis","style","fontSize","fontFamily","fontWeight","cssClass","xaxis","chartObj","document","querySelector","render","destroy","outputs","AgeBarChartComponent_Template","sendStatusPieToDashboard","seeingSomeoneCount","singleCount","marriedCount","availableCount","toLowerCase","relationshipStatusData","dataPointSelection","labels","RelationStatusPieChartComponent_Template","sendSexPieToDashboard","Rdata","maleCount","femaleCount","sex","genderData","SexPieChartComponent_Template","jsonData","updateFromSexPieChart","filteredData","ChartData","ageBarChart","statusPieChart","updateFromStatusPieChart","sexPieChart","updateFromBarChart","ageRange","ageRangeParts","viewQuery","DashboardComponent_Query","DashboardComponent_Template_app_age_bar_chart_sendBarToDashboard_3_listener","$event","DashboardComponent_Template_app_sex_pie_chart_sendSexPieToDashboard_7_listener","DashboardComponent_Template_app_relation_status_pie_chart_sendStatusPieToDashboard_9_listener","NotFoundComponent_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","details","navigation","getCurrentNavigation","extras","ServerErrorComponent_Template","ServerErrorComponent_ng_container_2_Template","error_r2","TestErrorComponent_div_11_li_2_Template","validationErrors","get404Error","get400Error","get500Error","get401Error","get400ValidationError","TestErrorComponent_Template","TestErrorComponent_Template_button_click_1_listener","TestErrorComponent_Template_button_click_3_listener","TestErrorComponent_Template_button_click_5_listener","TestErrorComponent_Template_button_click_7_listener","TestErrorComponent_Template_button_click_9_listener","TestErrorComponent_div_11_Template","length","HomeComponent_div_1_Template_button_click_10_listener","_r4","ctx_r3","loginToggle","HomeComponent_div_1_Template_button_click_12_listener","ctx_r5","registerToggle","HomeComponent_div_2_Template_app_register_cancelRegister_3_listener","_r7","ctx_r6","cancelRegisterMode","HomeComponent_div_3_Template_app_login_cancelLogin_3_listener","_r9","ctx_r8","cancelLoginMode","loginMode","registerMode","HomeComponent_Template","HomeComponent_div_1_Template","HomeComponent_div_2_Template","HomeComponent_div_3_Template","member_r2","ListsComponent_div_12_Template_pagination_ngModelChange_1_listener","currentPage","ListsComponent_div_12_Template_pagination_pageChanged_1_listener","pageChanged","totalItems","itemsPerPage","loadLikes","page","ListsComponent_Template","ListsComponent_Template_button_ngModelChange_6_listener","ListsComponent_Template_button_click_6_listener","ListsComponent_Template_button_ngModelChange_8_listener","ListsComponent_Template_button_click_8_listener","ListsComponent_div_11_Template","ListsComponent_div_12_Template","accountServices","cancelLogin","cancel","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_0_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","password","LoginComponent_Template_button_click_17_listener","MemberCardComponent_div_0_Template_button_click_8_listener","_r2","ToggleLike","photoUrl","ɵɵsanitizeUrl","ɵɵpropertyInterpolate1","ɵɵpureFunction1","liked","_c1","tmp_6_0","ɵɵpipeBind1","city","MemberCardComponent_Template","MemberCardComponent_div_0_Template","GalleryModule","ImageItem","MemberMessagesComponent","ctx_r7","lastActive","MemberDetailComponent_div_7_p_3_Template","MemberDetailComponent_button_27_Template_button_click_0_listener","_r10","ctx_r9","MemberDetailComponent_button_28_Template_button_click_0_listener","_r12","ctx_r11","images","messageService","queryParams","selectTab","getImages","ngOnDestroy","loadMessages","heading","memberTabs","tabs","active","onTabActivated","activeTab","photo","photos","src","thumb","ActivatedRoute","MemberDetailComponent_Query","MemberDetailComponent_div_5_Template","MemberDetailComponent_div_7_Template","MemberDetailComponent_button_27_Template","MemberDetailComponent_button_28_Template","MemberDetailComponent_Template_button_click_29_listener","MemberDetailComponent_Template_tab_selectTab_34_listener","MemberDetailComponent_Template_tab_selectTab_43_listener","MemberDetailComponent_Template_tab_selectTab_48_listener","MemberDetailComponent_gallery_50_Template","MemberDetailComponent_Template_tab_selectTab_51_listener","tmp_2_0","tmp_3_0","country","ɵɵpipeBind2","created","introduction","lookingFor","interests","_r5","NgClass","NgIf","AsyncPipe","DatePipe","TabDirective","TabsetComponent","GalleryComponent","i10","TimeagoPipe","styles","MemberEditComponent_div_0_div_5_Template","MemberEditComponent_div_0_Template_form_ngSubmit_38_listener","MemberEditComponent_div_0_Template_textarea_ngModelChange_42_listener","MemberEditComponent_div_0_Template_textarea_ngModelChange_45_listener","MemberEditComponent_div_0_Template_textarea_ngModelChange_48_listener","MemberEditComponent_div_0_Template_input_ngModelChange_54_listener","MemberEditComponent_div_0_Template_input_ngModelChange_57_listener","unloadNotification","returnValue","memberServices","loadMember","value","success","reset","MemberEditComponent_Query","ɵɵresolveWindow","MemberEditComponent_div_0_Template","gender_r5","display","member_r6","MemberListComponent_div_0_div_22_Template_pagination_ngModelChange_1_listener","_r8","MemberListComponent_div_0_div_22_Template_pagination_pageChanged_1_listener","ctx_r4","MemberListComponent_div_0_Template_form_ngSubmit_1_listener","_r11","ctx_r10","loadMembers","MemberListComponent_div_0_Template_input_ngModelChange_6_listener","ctx_r12","MemberListComponent_div_0_Template_input_ngModelChange_10_listener","ctx_r13","MemberListComponent_div_0_Template_select_ngModelChange_14_listener","ctx_r14","MemberListComponent_div_0_option_15_Template","MemberListComponent_div_0_Template_button_click_18_listener","ctx_r15","resetFilters","MemberListComponent_div_0_div_21_Template","MemberListComponent_div_0_div_22_Template","genderList","MemberListComponent_Template","MemberListComponent_div_0_Template","message_r6","MemberMessagesComponent_ul_5_li_1_span_10_Template","MemberMessagesComponent_ul_5_li_1_span_11_Template","senderPhotoUrl","messageSent","senderUsername","MemberMessagesComponent_ul_5_li_1_Template","messageContent","loading","then","messageForm","MemberMessagesComponent_Query","MemberMessagesComponent_div_3_Template","MemberMessagesComponent_ul_5_Template","MemberMessagesComponent_Template_form_ngSubmit_8_listener","MemberMessagesComponent_Template_input_ngModelChange_11_listener","MemberMessagesComponent_i_15_Template","_r0","scrollHeight","tmp_1_0","valid","NgForOf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","changeDetection","FileUploader","PhotoEditorComponent_div_0_div_1_Template_button_click_3_listener","photo_r3","PhotoEditorComponent_div_0_div_1_Template_button_click_5_listener","isMain","PhotoEditorComponent_div_0_div_1_Template","item_r8","file","PhotoEditorComponent_div_13_tr_13_td_4_Template","name","uploader","isHTML5","PhotoEditorComponent_div_13_tr_13_Template","PhotoEditorComponent_div_13_Template_button_click_19_listener","uploadAll","PhotoEditorComponent_div_13_Template_button_click_22_listener","cancelAll","PhotoEditorComponent_div_13_Template_button_click_25_listener","clearQueue","queue","progress","getNotUploadedItems","isUploading","hasBaseDropZoneOver","initilizeUploader","fileOverBase","e","p","authToken","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","withCredentials","onSuccessItem","item","PhotoEditorComponent_Template","PhotoEditorComponent_div_0_Template","PhotoEditorComponent_Template_div_fileOver_5_listener","PhotoEditorComponent_div_13_Template","message_r4","recipientPhotoUrl","MessagesComponent_div_12_tr_12_div_4_Template","MessagesComponent_div_12_tr_12_ng_template_5_Template","ɵɵtemplateRefExtractor","MessagesComponent_div_12_tr_12_Template_button_click_11_listener","stopPropagation","_r6","MessagesComponent_div_12_tr_12_Template","MessagesComponent_div_13_Template_pagination_ngModelChange_1_listener","_r14","MessagesComponent_div_13_Template_pagination_pageChanged_1_listener","splice","findIndex","m","MessagesComponent_Template","MessagesComponent_Template_button_ngModelChange_2_listener","MessagesComponent_Template_button_click_2_listener","MessagesComponent_Template_button_ngModelChange_5_listener","MessagesComponent_Template_button_click_5_listener","MessagesComponent_Template_button_ngModelChange_8_listener","MessagesComponent_Template_button_click_8_listener","MessagesComponent_div_11_Template","MessagesComponent_div_12_Template","MessagesComponent_div_13_Template","decline","ConfirmDialogComponent_Template","ConfirmDialogComponent_Template_button_click_7_listener","ConfirmDialogComponent_Template_button_click_9_listener","RolesModalComponent_div_9_Template_input_change_1_listener","role_r2","updateChecked","checkedValue","RolesModalComponent_Template","RolesModalComponent_Template_button_click_3_listener","RolesModalComponent_div_9_Template","RolesModalComponent_Template_button_click_11_listener","NavComponent_ng_container_10_li_10_Template","NavComponent_ng_container_10_li_11_Template","NavComponent_div_15_div_2_Template_a_click_8_listener","user_r6","NavComponent_div_15_div_2_Template","NavComponent_Template","NavComponent_a_2_Template","NavComponent_a_4_Template","NavComponent_ng_container_10_Template","NavComponent_div_15_Template","FormGroup","Validators","RegisterComponent_div_20_li_2_Template","fb","cancelRegister","registerForm","initializeForm","setFullYear","getFullYear","required","dateOfBirth","minLength","maxLength","confirmPassword","matchValues","controls","valueChanges","updateValueAndValidity","matchTo","parent","isMatching","dob","GetDateOnly","theDob","setMinutes","getMinutes","getTimezoneOffset","slice","FormBuilder","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_0_listener","RegisterComponent_div_20_Template","RegisterComponent_Template_button_click_24_listener","loginTime","activity","logintimestamp","logindate","loginhours","getUTCHours","loginminutes","getUTCMinutes","logouttimestamp","logoutdate","logouthours","logoutminutes","logoutTime","zoom","enabled","colors","isDumbbell","dumbbellColors","legend","showForSingleSeries","position","horizontalAlign","customLegendItems","fill","gradient","gradientToColors","inverseColors","stops","grid","lines","UserTrackingComponent_Template","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}